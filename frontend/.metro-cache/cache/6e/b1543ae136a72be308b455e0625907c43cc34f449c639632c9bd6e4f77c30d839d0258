{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"i18next","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":42,"index":131}}],"key":"x24IjD33BAFYGRYL03eyJPMYagg=","exportNames":["*"],"imports":1}},{"name":"html-parse-stringify","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":132},"end":{"line":3,"column":40,"index":172}}],"key":"Dz5mG5jCySHyZi3eazCTCPjnQDg=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":173},"end":{"line":4,"column":64,"index":237}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}},{"name":"./defaults.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":238},"end":{"line":5,"column":44,"index":282}}],"key":"XCWKIxVkGmzpUvwhJx9c42EufEI=","exportNames":["*"],"imports":1}},{"name":"./i18nInstance.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":283},"end":{"line":6,"column":44,"index":327}}],"key":"2DjoKlYcMulm3L6r09aRNQJwnCE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"nodesToString\", {\n    enumerable: true,\n    get: function () {\n      return nodesToString;\n    }\n  });\n  exports.Trans = Trans;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _i18next = require(_dependencyMap[1], \"i18next\");\n  var _htmlParseStringify = require(_dependencyMap[2], \"html-parse-stringify\");\n  var HTML = _interopDefault(_htmlParseStringify);\n  var _utilsJs = require(_dependencyMap[3], \"./utils.js\");\n  var _defaultsJs = require(_dependencyMap[4], \"./defaults.js\");\n  var _i18nInstanceJs = require(_dependencyMap[5], \"./i18nInstance.js\");\n  const hasChildren = (node, checkLength) => {\n    if (!node) return false;\n    const base = node.props?.children ?? node.children;\n    if (checkLength) return base.length > 0;\n    return !!base;\n  };\n  const getChildren = node => {\n    if (!node) return [];\n    const children = node.props?.children ?? node.children;\n    return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n  };\n  const hasValidReactChildren = children => Array.isArray(children) && children.every(_react.isValidElement);\n  const getAsArray = data => Array.isArray(data) ? data : [data];\n  const mergeProps = (source, target) => {\n    const newTarget = {\n      ...target\n    };\n    newTarget.props = Object.assign(source.props, target.props);\n    return newTarget;\n  };\n  const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n    if (!children) return '';\n    let stringNode = '';\n    const childrenArray = getAsArray(children);\n    const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n    childrenArray.forEach((child, childIndex) => {\n      if ((0, _utilsJs.isString)(child)) {\n        stringNode += `${child}`;\n        return;\n      }\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) {\n        const {\n          props,\n          type\n        } = child;\n        const childPropsCount = Object.keys(props).length;\n        const shouldKeepChild = keepArray.indexOf(type) > -1;\n        const childChildren = props.children;\n        if (!childChildren && shouldKeepChild && !childPropsCount) {\n          stringNode += `<${type}/>`;\n          return;\n        }\n        if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n          stringNode += `<${childIndex}></${childIndex}>`;\n          return;\n        }\n        if (shouldKeepChild && childPropsCount === 1 && (0, _utilsJs.isString)(childChildren)) {\n          stringNode += `<${type}>${childChildren}</${type}>`;\n          return;\n        }\n        const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n        return;\n      }\n      if (child === null) {\n        (0, _utilsJs.warn)(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n          i18nKey\n        });\n        return;\n      }\n      if ((0, _utilsJs.isObject)(child)) {\n        const {\n          format,\n          ...clone\n        } = child;\n        const keys = Object.keys(clone);\n        if (keys.length === 1) {\n          const value = format ? `${keys[0]}, ${format}` : keys[0];\n          stringNode += `{{${value}}}`;\n          return;\n        }\n        (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n          i18nKey,\n          child\n        });\n        return;\n      }\n      (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n        i18nKey,\n        child\n      });\n    });\n    return stringNode;\n  };\n  const renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n    if (targetString === '') return [];\n    const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n    const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n    if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n    const data = knownComponentsMap ?? {};\n    const getData = childs => {\n      const childrenArray = getAsArray(childs);\n      childrenArray.forEach(child => {\n        if ((0, _utilsJs.isString)(child)) return;\n        if (hasChildren(child)) getData(getChildren(child));else if ((0, _utilsJs.isObject)(child) && ! /*#__PURE__*/(0, _react.isValidElement)(child)) Object.assign(data, child);\n      });\n    };\n    getData(children);\n    const ast = HTML.default.parse(`<0>${targetString}</0>`);\n    const opts = {\n      ...data,\n      ...combinedTOpts\n    };\n    const renderInner = (child, node, rootReactNode) => {\n      const childs = getChildren(child);\n      const mappedChildren = mapAST(childs, node.children, rootReactNode);\n      return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n    };\n    const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n      if (child.dummy) {\n        child.children = inner;\n        mem.push(/*#__PURE__*/(0, _react.cloneElement)(child, {\n          key: i\n        }, isVoid ? undefined : inner));\n      } else {\n        mem.push(..._react.Children.map([child], c => {\n          const props = {\n            ...c.props\n          };\n          delete props.i18nIsDynamicList;\n          return /*#__PURE__*/(0, _react.createElement)(c.type, {\n            ...props,\n            key: i,\n            ref: c.props.ref ?? c.ref\n          }, isVoid ? null : inner);\n        }));\n      }\n    };\n    const mapAST = (reactNode, astNode, rootReactNode) => {\n      const reactNodes = getAsArray(reactNode);\n      const astNodes = getAsArray(astNode);\n      return astNodes.reduce((mem, node, i) => {\n        const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n        if (node.type === 'tag') {\n          let tmp = reactNodes[parseInt(node.name, 10)];\n          if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n          if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n          if (!tmp) tmp = {};\n          const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n            props: node.attrs\n          }, tmp) : tmp;\n          const isElement = /*#__PURE__*/(0, _react.isValidElement)(child);\n          const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n          const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0, _utilsJs.isObject)(child) && child.dummy && !isElement;\n          const isKnownComponent = (0, _utilsJs.isObject)(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n          if ((0, _utilsJs.isString)(child)) {\n            const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n            mem.push(value);\n          } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (Number.isNaN(parseFloat(node.name))) {\n            if (isKnownComponent) {\n              const inner = renderInner(child, node, rootReactNode);\n              pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n            } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n              if (node.voidElement) {\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }));\n              } else {\n                const inner = mapAST(reactNodes, node.children, rootReactNode);\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }, inner));\n              }\n            } else if (node.voidElement) {\n              mem.push(`<${node.name} />`);\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(`<${node.name}>${inner}</${node.name}>`);\n            }\n          } else if ((0, _utilsJs.isObject)(child) && !isElement) {\n            const content = node.children[0] ? translationContent : null;\n            if (content) mem.push(content);\n          } else {\n            pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n          }\n        } else if (node.type === 'text') {\n          const wrapTextNodes = i18nOptions.transWrapTextNodes;\n          const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n          if (wrapTextNodes) {\n            mem.push(/*#__PURE__*/(0, _react.createElement)(wrapTextNodes, {\n              key: `${node.name}-${i}`\n            }, content));\n          } else {\n            mem.push(content);\n          }\n        }\n        return mem;\n      }, []);\n    };\n    const result = mapAST([{\n      dummy: true,\n      children: children || []\n    }], ast, getAsArray(children || []));\n    return getChildren(result[0]);\n  };\n  const fixComponentProps = (component, index, translation) => {\n    const componentKey = component.key || index;\n    const comp = /*#__PURE__*/(0, _react.cloneElement)(component, {\n      key: componentKey\n    });\n    if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n      return comp;\n    }\n    function Componentized() {\n      return /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, comp);\n    }\n    return /*#__PURE__*/(0, _react.createElement)(Componentized, {\n      key: componentKey\n    });\n  };\n  const generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\n  const generateObjectComponents = (components, translation) => {\n    const componentMap = {};\n    Object.keys(components).forEach(c => {\n      Object.assign(componentMap, {\n        [c]: fixComponentProps(components[c], c, translation)\n      });\n    });\n    return componentMap;\n  };\n  const generateComponents = (components, translation, i18n, i18nKey) => {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      return generateArrayComponents(components, translation);\n    }\n    if ((0, _utilsJs.isObject)(components)) {\n      return generateObjectComponents(components, translation);\n    }\n    (0, _utilsJs.warnOnce)(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n      i18nKey\n    });\n    return null;\n  };\n  const isComponentsMap = object => {\n    if (!(0, _utilsJs.isObject)(object)) return false;\n    if (Array.isArray(object)) return false;\n    return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n  };\n  function Trans({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  }) {\n    const i18n = i18nFromProps || (0, _i18nInstanceJs.getI18n)();\n    if (!i18n) {\n      (0, _utilsJs.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n        i18nKey\n      });\n      return children;\n    }\n    const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n    const reactI18nextOptions = {\n      ...(0, _defaultsJs.getDefaults)(),\n      ...i18n.options?.react\n    };\n    let namespaces = ns || t.ns || i18n.options?.defaultNS;\n    namespaces = (0, _utilsJs.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n    const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || (typeof i18nKey === 'function' ? (0, _i18next.keyFromSelector)(i18nKey) : i18nKey);\n    const {\n      hashTransKey\n    } = reactI18nextOptions;\n    const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n    if (i18n.options?.interpolation?.defaultVariables) {\n      values = values && Object.keys(values).length > 0 ? {\n        ...values,\n        ...i18n.options.interpolation.defaultVariables\n      } : {\n        ...i18n.options.interpolation.defaultVariables\n      };\n    }\n    const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n      interpolation: {\n        ...tOptions.interpolation,\n        prefix: '#$?',\n        suffix: '?$#'\n      }\n    };\n    const combinedTOpts = {\n      ...tOptions,\n      context: context || tOptions.context,\n      count,\n      ...values,\n      ...interpolationOverride,\n      defaultValue,\n      ns: namespaces\n    };\n    const translation = key ? t(key, combinedTOpts) : defaultValue;\n    const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n    let indexedChildren = generatedComponents || children;\n    let componentsMap = null;\n    if (isComponentsMap(generatedComponents)) {\n      componentsMap = generatedComponents;\n      indexedChildren = children;\n    }\n    const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n    const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n    return useAsParent ? /*#__PURE__*/(0, _react.createElement)(useAsParent, additionalProps, content) : content;\n  }\n});","lineCount":342,"map":[[12,2,27,0,"Object"],[12,8,27,0],[12,9,27,0,"defineProperty"],[12,23,27,0],[12,24,27,0,"exports"],[12,31,27,0],[13,4,27,0,"enumerable"],[13,14,27,0],[14,4,27,0,"get"],[14,7,27,0],[14,18,27,0,"get"],[14,19,27,0],[15,6,27,0],[15,13,27,0,"nodesToString"],[15,26,27,0],[16,4,27,0],[17,2,27,0],[18,2,251,0,"exports"],[18,9,251,0],[18,10,251,0,"Trans"],[18,15,251,0],[18,18,251,0,"Trans"],[18,23,251,0],[19,2,1,0],[19,6,1,0,"_react"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,2,0],[20,6,2,0,"_i18next"],[20,14,2,0],[20,17,2,0,"require"],[20,24,2,0],[20,25,2,0,"_dependencyMap"],[20,39,2,0],[21,2,3,0],[21,6,3,0,"_htmlParseStringify"],[21,25,3,0],[21,28,3,0,"require"],[21,35,3,0],[21,36,3,0,"_dependencyMap"],[21,50,3,0],[22,2,3,0],[22,6,3,0,"HTML"],[22,10,3,0],[22,13,3,0,"_interopDefault"],[22,28,3,0],[22,29,3,0,"_htmlParseStringify"],[22,48,3,0],[23,2,4,0],[23,6,4,0,"_utilsJs"],[23,14,4,0],[23,17,4,0,"require"],[23,24,4,0],[23,25,4,0,"_dependencyMap"],[23,39,4,0],[24,2,5,0],[24,6,5,0,"_defaultsJs"],[24,17,5,0],[24,20,5,0,"require"],[24,27,5,0],[24,28,5,0,"_dependencyMap"],[24,42,5,0],[25,2,6,0],[25,6,6,0,"_i18nInstanceJs"],[25,21,6,0],[25,24,6,0,"require"],[25,31,6,0],[25,32,6,0,"_dependencyMap"],[25,46,6,0],[26,2,7,0],[26,8,7,6,"hasChildren"],[26,19,7,17],[26,22,7,20,"hasChildren"],[26,23,7,21,"node"],[26,27,7,25],[26,29,7,27,"checkLength"],[26,40,7,38],[26,45,7,43],[27,4,8,2],[27,8,8,6],[27,9,8,7,"node"],[27,13,8,11],[27,15,8,13],[27,22,8,20],[27,27,8,25],[28,4,9,2],[28,10,9,8,"base"],[28,14,9,12],[28,17,9,15,"node"],[28,21,9,19],[28,22,9,20,"props"],[28,27,9,25],[28,29,9,27,"children"],[28,37,9,35],[28,41,9,39,"node"],[28,45,9,43],[28,46,9,44,"children"],[28,54,9,52],[29,4,10,2],[29,8,10,6,"checkLength"],[29,19,10,17],[29,21,10,19],[29,28,10,26,"base"],[29,32,10,30],[29,33,10,31,"length"],[29,39,10,37],[29,42,10,40],[29,43,10,41],[30,4,11,2],[30,11,11,9],[30,12,11,10],[30,13,11,11,"base"],[30,17,11,15],[31,2,12,0],[31,3,12,1],[32,2,13,0],[32,8,13,6,"getChildren"],[32,19,13,17],[32,22,13,20,"node"],[32,26,13,24],[32,30,13,28],[33,4,14,2],[33,8,14,6],[33,9,14,7,"node"],[33,13,14,11],[33,15,14,13],[33,22,14,20],[33,24,14,22],[34,4,15,2],[34,10,15,8,"children"],[34,18,15,16],[34,21,15,19,"node"],[34,25,15,23],[34,26,15,24,"props"],[34,31,15,29],[34,33,15,31,"children"],[34,41,15,39],[34,45,15,43,"node"],[34,49,15,47],[34,50,15,48,"children"],[34,58,15,56],[35,4,16,2],[35,11,16,9,"node"],[35,15,16,13],[35,16,16,14,"props"],[35,21,16,19],[35,23,16,21,"i18nIsDynamicList"],[35,40,16,38],[35,43,16,41,"getAsArray"],[35,53,16,51],[35,54,16,52,"children"],[35,62,16,60],[35,63,16,61],[35,66,16,64,"children"],[35,74,16,72],[36,2,17,0],[36,3,17,1],[37,2,18,0],[37,8,18,6,"hasValidReactChildren"],[37,29,18,27],[37,32,18,30,"children"],[37,40,18,38],[37,44,18,42,"Array"],[37,49,18,47],[37,50,18,48,"isArray"],[37,57,18,55],[37,58,18,56,"children"],[37,66,18,64],[37,67,18,65],[37,71,18,69,"children"],[37,79,18,77],[37,80,18,78,"every"],[37,85,18,83],[37,86,18,84,"isValidElement"],[37,92,18,98],[37,93,18,98,"isValidElement"],[37,107,18,98],[37,108,18,99],[38,2,19,0],[38,8,19,6,"getAsArray"],[38,18,19,16],[38,21,19,19,"data"],[38,25,19,23],[38,29,19,27,"Array"],[38,34,19,32],[38,35,19,33,"isArray"],[38,42,19,40],[38,43,19,41,"data"],[38,47,19,45],[38,48,19,46],[38,51,19,49,"data"],[38,55,19,53],[38,58,19,56],[38,59,19,57,"data"],[38,63,19,61],[38,64,19,62],[39,2,20,0],[39,8,20,6,"mergeProps"],[39,18,20,16],[39,21,20,19,"mergeProps"],[39,22,20,20,"source"],[39,28,20,26],[39,30,20,28,"target"],[39,36,20,34],[39,41,20,39],[40,4,21,2],[40,10,21,8,"newTarget"],[40,19,21,17],[40,22,21,20],[41,6,22,4],[41,9,22,7,"target"],[42,4,23,2],[42,5,23,3],[43,4,24,2,"newTarget"],[43,13,24,11],[43,14,24,12,"props"],[43,19,24,17],[43,22,24,20,"Object"],[43,28,24,26],[43,29,24,27,"assign"],[43,35,24,33],[43,36,24,34,"source"],[43,42,24,40],[43,43,24,41,"props"],[43,48,24,46],[43,50,24,48,"target"],[43,56,24,54],[43,57,24,55,"props"],[43,62,24,60],[43,63,24,61],[44,4,25,2],[44,11,25,9,"newTarget"],[44,20,25,18],[45,2,26,0],[45,3,26,1],[46,2,27,7],[46,8,27,13,"nodesToString"],[46,21,27,26],[46,24,27,29,"nodesToString"],[46,25,27,30,"children"],[46,33,27,38],[46,35,27,40,"i18nOptions"],[46,46,27,51],[46,48,27,53,"i18n"],[46,52,27,57],[46,54,27,59,"i18nKey"],[46,61,27,66],[46,66,27,71],[47,4,28,2],[47,8,28,6],[47,9,28,7,"children"],[47,17,28,15],[47,19,28,17],[47,26,28,24],[47,28,28,26],[48,4,29,2],[48,8,29,6,"stringNode"],[48,18,29,16],[48,21,29,19],[48,23,29,21],[49,4,30,2],[49,10,30,8,"childrenArray"],[49,23,30,21],[49,26,30,24,"getAsArray"],[49,36,30,34],[49,37,30,35,"children"],[49,45,30,43],[49,46,30,44],[50,4,31,2],[50,10,31,8,"keepArray"],[50,19,31,17],[50,22,31,20,"i18nOptions"],[50,33,31,31],[50,35,31,33,"transSupportBasicHtmlNodes"],[50,61,31,59],[50,64,31,62,"i18nOptions"],[50,75,31,73],[50,76,31,74,"transKeepBasicHtmlNodesFor"],[50,102,31,100],[50,106,31,104],[50,108,31,106],[50,111,31,109],[50,113,31,111],[51,4,32,2,"childrenArray"],[51,17,32,15],[51,18,32,16,"forEach"],[51,25,32,23],[51,26,32,24],[51,27,32,25,"child"],[51,32,32,30],[51,34,32,32,"childIndex"],[51,44,32,42],[51,49,32,47],[52,6,33,4],[52,10,33,8],[52,14,33,8,"isString"],[52,22,33,16],[52,23,33,16,"isString"],[52,31,33,16],[52,33,33,17,"child"],[52,38,33,22],[52,39,33,23],[52,41,33,25],[53,8,34,6,"stringNode"],[53,18,34,16],[53,22,34,20],[53,25,34,23,"child"],[53,30,34,28],[53,32,34,30],[54,8,35,6],[55,6,36,4],[56,6,37,4],[56,23,37,8],[56,27,37,8,"isValidElement"],[56,33,37,22],[56,34,37,22,"isValidElement"],[56,48,37,22],[56,50,37,23,"child"],[56,55,37,28],[56,56,37,29],[56,58,37,31],[57,8,38,6],[57,14,38,12],[58,10,39,8,"props"],[58,15,39,13],[59,10,40,8,"type"],[60,8,41,6],[60,9,41,7],[60,12,41,10,"child"],[60,17,41,15],[61,8,42,6],[61,14,42,12,"childPropsCount"],[61,29,42,27],[61,32,42,30,"Object"],[61,38,42,36],[61,39,42,37,"keys"],[61,43,42,41],[61,44,42,42,"props"],[61,49,42,47],[61,50,42,48],[61,51,42,49,"length"],[61,57,42,55],[62,8,43,6],[62,14,43,12,"shouldKeepChild"],[62,29,43,27],[62,32,43,30,"keepArray"],[62,41,43,39],[62,42,43,40,"indexOf"],[62,49,43,47],[62,50,43,48,"type"],[62,54,43,52],[62,55,43,53],[62,58,43,56],[62,59,43,57],[62,60,43,58],[63,8,44,6],[63,14,44,12,"childChildren"],[63,27,44,25],[63,30,44,28,"props"],[63,35,44,33],[63,36,44,34,"children"],[63,44,44,42],[64,8,45,6],[64,12,45,10],[64,13,45,11,"childChildren"],[64,26,45,24],[64,30,45,28,"shouldKeepChild"],[64,45,45,43],[64,49,45,47],[64,50,45,48,"childPropsCount"],[64,65,45,63],[64,67,45,65],[65,10,46,8,"stringNode"],[65,20,46,18],[65,24,46,22],[65,28,46,26,"type"],[65,32,46,30],[65,36,46,34],[66,10,47,8],[67,8,48,6],[68,8,49,6],[68,12,49,10],[68,13,49,11,"childChildren"],[68,26,49,24],[68,31,49,29],[68,32,49,30,"shouldKeepChild"],[68,47,49,45],[68,51,49,49,"childPropsCount"],[68,66,49,64],[68,67,49,65],[68,71,49,69,"props"],[68,76,49,74],[68,77,49,75,"i18nIsDynamicList"],[68,94,49,92],[68,96,49,94],[69,10,50,8,"stringNode"],[69,20,50,18],[69,24,50,22],[69,28,50,26,"childIndex"],[69,38,50,36],[69,44,50,42,"childIndex"],[69,54,50,52],[69,57,50,55],[70,10,51,8],[71,8,52,6],[72,8,53,6],[72,12,53,10,"shouldKeepChild"],[72,27,53,25],[72,31,53,29,"childPropsCount"],[72,46,53,44],[72,51,53,49],[72,52,53,50],[72,56,53,54],[72,60,53,54,"isString"],[72,68,53,62],[72,69,53,62,"isString"],[72,77,53,62],[72,79,53,63,"childChildren"],[72,92,53,76],[72,93,53,77],[72,95,53,79],[73,10,54,8,"stringNode"],[73,20,54,18],[73,24,54,22],[73,28,54,26,"type"],[73,32,54,30],[73,36,54,34,"childChildren"],[73,49,54,47],[73,54,54,52,"type"],[73,58,54,56],[73,61,54,59],[74,10,55,8],[75,8,56,6],[76,8,57,6],[76,14,57,12,"content"],[76,21,57,19],[76,24,57,22,"nodesToString"],[76,37,57,35],[76,38,57,36,"childChildren"],[76,51,57,49],[76,53,57,51,"i18nOptions"],[76,64,57,62],[76,66,57,64,"i18n"],[76,70,57,68],[76,72,57,70,"i18nKey"],[76,79,57,77],[76,80,57,78],[77,8,58,6,"stringNode"],[77,18,58,16],[77,22,58,20],[77,26,58,24,"childIndex"],[77,36,58,34],[77,40,58,38,"content"],[77,47,58,45],[77,52,58,50,"childIndex"],[77,62,58,60],[77,65,58,63],[78,8,59,6],[79,6,60,4],[80,6,61,4],[80,10,61,8,"child"],[80,15,61,13],[80,20,61,18],[80,24,61,22],[80,26,61,24],[81,8,62,6],[81,12,62,6,"warn"],[81,20,62,10],[81,21,62,10,"warn"],[81,25,62,10],[81,27,62,11,"i18n"],[81,31,62,15],[81,33,62,17],[81,51,62,35],[81,53,62,37],[81,86,62,70],[81,88,62,72],[82,10,63,8,"i18nKey"],[83,8,64,6],[83,9,64,7],[83,10,64,8],[84,8,65,6],[85,6,66,4],[86,6,67,4],[86,10,67,8],[86,14,67,8,"isObject"],[86,22,67,16],[86,23,67,16,"isObject"],[86,31,67,16],[86,33,67,17,"child"],[86,38,67,22],[86,39,67,23],[86,41,67,25],[87,8,68,6],[87,14,68,12],[88,10,69,8,"format"],[88,16,69,14],[89,10,70,8],[89,13,70,11,"clone"],[90,8,71,6],[90,9,71,7],[90,12,71,10,"child"],[90,17,71,15],[91,8,72,6],[91,14,72,12,"keys"],[91,18,72,16],[91,21,72,19,"Object"],[91,27,72,25],[91,28,72,26,"keys"],[91,32,72,30],[91,33,72,31,"clone"],[91,38,72,36],[91,39,72,37],[92,8,73,6],[92,12,73,10,"keys"],[92,16,73,14],[92,17,73,15,"length"],[92,23,73,21],[92,28,73,26],[92,29,73,27],[92,31,73,29],[93,10,74,8],[93,16,74,14,"value"],[93,21,74,19],[93,24,74,22,"format"],[93,30,74,28],[93,33,74,31],[93,36,74,34,"keys"],[93,40,74,38],[93,41,74,39],[93,42,74,40],[93,43,74,41],[93,48,74,46,"format"],[93,54,74,52],[93,56,74,54],[93,59,74,57,"keys"],[93,63,74,61],[93,64,74,62],[93,65,74,63],[93,66,74,64],[94,10,75,8,"stringNode"],[94,20,75,18],[94,24,75,22],[94,29,75,27,"value"],[94,34,75,32],[94,38,75,36],[95,10,76,8],[96,8,77,6],[97,8,78,6],[97,12,78,6,"warn"],[97,20,78,10],[97,21,78,10,"warn"],[97,25,78,10],[97,27,78,11,"i18n"],[97,31,78,15],[97,33,78,17],[97,52,78,36],[97,54,78,38],[97,142,78,126],[97,144,78,128],[98,10,79,8,"i18nKey"],[98,17,79,15],[99,10,80,8,"child"],[100,8,81,6],[100,9,81,7],[100,10,81,8],[101,8,82,6],[102,6,83,4],[103,6,84,4],[103,10,84,4,"warn"],[103,18,84,8],[103,19,84,8,"warn"],[103,23,84,8],[103,25,84,9,"i18n"],[103,29,84,13],[103,31,84,15],[103,50,84,34],[103,52,84,36],[103,156,84,140],[103,158,84,142],[104,8,85,6,"i18nKey"],[104,15,85,13],[105,8,86,6,"child"],[106,6,87,4],[106,7,87,5],[106,8,87,6],[107,4,88,2],[107,5,88,3],[107,6,88,4],[108,4,89,2],[108,11,89,9,"stringNode"],[108,21,89,19],[109,2,90,0],[109,3,90,1],[110,2,91,0],[110,8,91,6,"renderNodes"],[110,19,91,17],[110,22,91,20,"renderNodes"],[110,23,91,21,"children"],[110,31,91,29],[110,33,91,31,"knownComponentsMap"],[110,51,91,49],[110,53,91,51,"targetString"],[110,65,91,63],[110,67,91,65,"i18n"],[110,71,91,69],[110,73,91,71,"i18nOptions"],[110,84,91,82],[110,86,91,84,"combinedTOpts"],[110,99,91,97],[110,101,91,99,"shouldUnescape"],[110,115,91,113],[110,120,91,118],[111,4,92,2],[111,8,92,6,"targetString"],[111,20,92,18],[111,25,92,23],[111,27,92,25],[111,29,92,27],[111,36,92,34],[111,38,92,36],[112,4,93,2],[112,10,93,8,"keepArray"],[112,19,93,17],[112,22,93,20,"i18nOptions"],[112,33,93,31],[112,34,93,32,"transKeepBasicHtmlNodesFor"],[112,60,93,58],[112,64,93,62],[112,66,93,64],[113,4,94,2],[113,10,94,8,"emptyChildrenButNeedsHandling"],[113,39,94,37],[113,42,94,40,"targetString"],[113,54,94,52],[113,58,94,56],[113,62,94,60,"RegExp"],[113,68,94,66],[113,69,94,67,"keepArray"],[113,78,94,76],[113,79,94,77,"map"],[113,82,94,80],[113,83,94,81,"keep"],[113,87,94,85],[113,91,94,89],[113,95,94,93,"keep"],[113,99,94,97],[113,101,94,99],[113,102,94,100],[113,103,94,101,"join"],[113,107,94,105],[113,108,94,106],[113,111,94,109],[113,112,94,110],[113,113,94,111],[113,114,94,112,"test"],[113,118,94,116],[113,119,94,117,"targetString"],[113,131,94,129],[113,132,94,130],[114,4,95,2],[114,8,95,6],[114,9,95,7,"children"],[114,17,95,15],[114,21,95,19],[114,22,95,20,"knownComponentsMap"],[114,40,95,38],[114,44,95,42],[114,45,95,43,"emptyChildrenButNeedsHandling"],[114,74,95,72],[114,78,95,76],[114,79,95,77,"shouldUnescape"],[114,93,95,91],[114,95,95,93],[114,102,95,100],[114,103,95,101,"targetString"],[114,115,95,113],[114,116,95,114],[115,4,96,2],[115,10,96,8,"data"],[115,14,96,12],[115,17,96,15,"knownComponentsMap"],[115,35,96,33],[115,39,96,37],[115,40,96,38],[115,41,96,39],[116,4,97,2],[116,10,97,8,"getData"],[116,17,97,15],[116,20,97,18,"childs"],[116,26,97,24],[116,30,97,28],[117,6,98,4],[117,12,98,10,"childrenArray"],[117,25,98,23],[117,28,98,26,"getAsArray"],[117,38,98,36],[117,39,98,37,"childs"],[117,45,98,43],[117,46,98,44],[118,6,99,4,"childrenArray"],[118,19,99,17],[118,20,99,18,"forEach"],[118,27,99,25],[118,28,99,26,"child"],[118,33,99,31],[118,37,99,35],[119,8,100,6],[119,12,100,10],[119,16,100,10,"isString"],[119,24,100,18],[119,25,100,18,"isString"],[119,33,100,18],[119,35,100,19,"child"],[119,40,100,24],[119,41,100,25],[119,43,100,27],[120,8,101,6],[120,12,101,10,"hasChildren"],[120,23,101,21],[120,24,101,22,"child"],[120,29,101,27],[120,30,101,28],[120,32,101,30,"getData"],[120,39,101,37],[120,40,101,38,"getChildren"],[120,51,101,49],[120,52,101,50,"child"],[120,57,101,55],[120,58,101,56],[120,59,101,57],[120,60,101,58],[120,65,101,63],[120,69,101,67],[120,73,101,67,"isObject"],[120,81,101,75],[120,82,101,75,"isObject"],[120,90,101,75],[120,92,101,76,"child"],[120,97,101,81],[120,98,101,82],[120,102,101,86],[120,117,101,87],[120,121,101,87,"isValidElement"],[120,127,101,101],[120,128,101,101,"isValidElement"],[120,142,101,101],[120,144,101,102,"child"],[120,149,101,107],[120,150,101,108],[120,152,101,110,"Object"],[120,158,101,116],[120,159,101,117,"assign"],[120,165,101,123],[120,166,101,124,"data"],[120,170,101,128],[120,172,101,130,"child"],[120,177,101,135],[120,178,101,136],[121,6,102,4],[121,7,102,5],[121,8,102,6],[122,4,103,2],[122,5,103,3],[123,4,104,2,"getData"],[123,11,104,9],[123,12,104,10,"children"],[123,20,104,18],[123,21,104,19],[124,4,105,2],[124,10,105,8,"ast"],[124,13,105,11],[124,16,105,14,"HTML"],[124,20,105,18],[124,21,105,18,"default"],[124,28,105,18],[124,29,105,19,"parse"],[124,34,105,24],[124,35,105,25],[124,41,105,31,"targetString"],[124,53,105,43],[124,59,105,49],[124,60,105,50],[125,4,106,2],[125,10,106,8,"opts"],[125,14,106,12],[125,17,106,15],[126,6,107,4],[126,9,107,7,"data"],[126,13,107,11],[127,6,108,4],[127,9,108,7,"combinedTOpts"],[128,4,109,2],[128,5,109,3],[129,4,110,2],[129,10,110,8,"renderInner"],[129,21,110,19],[129,24,110,22,"renderInner"],[129,25,110,23,"child"],[129,30,110,28],[129,32,110,30,"node"],[129,36,110,34],[129,38,110,36,"rootReactNode"],[129,51,110,49],[129,56,110,54],[130,6,111,4],[130,12,111,10,"childs"],[130,18,111,16],[130,21,111,19,"getChildren"],[130,32,111,30],[130,33,111,31,"child"],[130,38,111,36],[130,39,111,37],[131,6,112,4],[131,12,112,10,"mappedChildren"],[131,26,112,24],[131,29,112,27,"mapAST"],[131,35,112,33],[131,36,112,34,"childs"],[131,42,112,40],[131,44,112,42,"node"],[131,48,112,46],[131,49,112,47,"children"],[131,57,112,55],[131,59,112,57,"rootReactNode"],[131,72,112,70],[131,73,112,71],[132,6,113,4],[132,13,113,11,"hasValidReactChildren"],[132,34,113,32],[132,35,113,33,"childs"],[132,41,113,39],[132,42,113,40],[132,46,113,44,"mappedChildren"],[132,60,113,58],[132,61,113,59,"length"],[132,67,113,65],[132,72,113,70],[132,73,113,71],[132,77,113,75,"child"],[132,82,113,80],[132,83,113,81,"props"],[132,88,113,86],[132,90,113,88,"i18nIsDynamicList"],[132,107,113,105],[132,110,113,108,"childs"],[132,116,113,114],[132,119,113,117,"mappedChildren"],[132,133,113,131],[133,4,114,2],[133,5,114,3],[134,4,115,2],[134,10,115,8,"pushTranslatedJSX"],[134,27,115,25],[134,30,115,28,"pushTranslatedJSX"],[134,31,115,29,"child"],[134,36,115,34],[134,38,115,36,"inner"],[134,43,115,41],[134,45,115,43,"mem"],[134,48,115,46],[134,50,115,48,"i"],[134,51,115,49],[134,53,115,51,"isVoid"],[134,59,115,57],[134,64,115,62],[135,6,116,4],[135,10,116,8,"child"],[135,15,116,13],[135,16,116,14,"dummy"],[135,21,116,19],[135,23,116,21],[136,8,117,6,"child"],[136,13,117,11],[136,14,117,12,"children"],[136,22,117,20],[136,25,117,23,"inner"],[136,30,117,28],[137,8,118,6,"mem"],[137,11,118,9],[137,12,118,10,"push"],[137,16,118,14],[137,30,118,15],[137,34,118,15,"cloneElement"],[137,40,118,27],[137,41,118,27,"cloneElement"],[137,53,118,27],[137,55,118,28,"child"],[137,60,118,33],[137,62,118,35],[138,10,119,8,"key"],[138,13,119,11],[138,15,119,13,"i"],[139,8,120,6],[139,9,120,7],[139,11,120,9,"isVoid"],[139,17,120,15],[139,20,120,18,"undefined"],[139,29,120,27],[139,32,120,30,"inner"],[139,37,120,35],[139,38,120,36],[139,39,120,37],[140,6,121,4],[140,7,121,5],[140,13,121,11],[141,8,122,6,"mem"],[141,11,122,9],[141,12,122,10,"push"],[141,16,122,14],[141,17,122,15],[141,20,122,18,"Children"],[141,26,122,26],[141,27,122,26,"Children"],[141,35,122,26],[141,36,122,27,"map"],[141,39,122,30],[141,40,122,31],[141,41,122,32,"child"],[141,46,122,37],[141,47,122,38],[141,49,122,40,"c"],[141,50,122,41],[141,54,122,45],[142,10,123,8],[142,16,123,14,"props"],[142,21,123,19],[142,24,123,22],[143,12,124,10],[143,15,124,13,"c"],[143,16,124,14],[143,17,124,15,"props"],[144,10,125,8],[144,11,125,9],[145,10,126,8],[145,17,126,15,"props"],[145,22,126,20],[145,23,126,21,"i18nIsDynamicList"],[145,40,126,38],[146,10,127,8],[146,30,127,15],[146,34,127,15,"createElement"],[146,40,127,28],[146,41,127,28,"createElement"],[146,54,127,28],[146,56,127,29,"c"],[146,57,127,30],[146,58,127,31,"type"],[146,62,127,35],[146,64,127,37],[147,12,128,10],[147,15,128,13,"props"],[147,20,128,18],[148,12,129,10,"key"],[148,15,129,13],[148,17,129,15,"i"],[148,18,129,16],[149,12,130,10,"ref"],[149,15,130,13],[149,17,130,15,"c"],[149,18,130,16],[149,19,130,17,"props"],[149,24,130,22],[149,25,130,23,"ref"],[149,28,130,26],[149,32,130,30,"c"],[149,33,130,31],[149,34,130,32,"ref"],[150,10,131,8],[150,11,131,9],[150,13,131,11,"isVoid"],[150,19,131,17],[150,22,131,20],[150,26,131,24],[150,29,131,27,"inner"],[150,34,131,32],[150,35,131,33],[151,8,132,6],[151,9,132,7],[151,10,132,8],[151,11,132,9],[152,6,133,4],[153,4,134,2],[153,5,134,3],[154,4,135,2],[154,10,135,8,"mapAST"],[154,16,135,14],[154,19,135,17,"mapAST"],[154,20,135,18,"reactNode"],[154,29,135,27],[154,31,135,29,"astNode"],[154,38,135,36],[154,40,135,38,"rootReactNode"],[154,53,135,51],[154,58,135,56],[155,6,136,4],[155,12,136,10,"reactNodes"],[155,22,136,20],[155,25,136,23,"getAsArray"],[155,35,136,33],[155,36,136,34,"reactNode"],[155,45,136,43],[155,46,136,44],[156,6,137,4],[156,12,137,10,"astNodes"],[156,20,137,18],[156,23,137,21,"getAsArray"],[156,33,137,31],[156,34,137,32,"astNode"],[156,41,137,39],[156,42,137,40],[157,6,138,4],[157,13,138,11,"astNodes"],[157,21,138,19],[157,22,138,20,"reduce"],[157,28,138,26],[157,29,138,27],[157,30,138,28,"mem"],[157,33,138,31],[157,35,138,33,"node"],[157,39,138,37],[157,41,138,39,"i"],[157,42,138,40],[157,47,138,45],[158,8,139,6],[158,14,139,12,"translationContent"],[158,32,139,30],[158,35,139,33,"node"],[158,39,139,37],[158,40,139,38,"children"],[158,48,139,46],[158,51,139,49],[158,52,139,50],[158,53,139,51],[158,55,139,53,"content"],[158,62,139,60],[158,66,139,64,"i18n"],[158,70,139,68],[158,71,139,69,"services"],[158,79,139,77],[158,80,139,78,"interpolator"],[158,92,139,90],[158,93,139,91,"interpolate"],[158,104,139,102],[158,105,139,103,"node"],[158,109,139,107],[158,110,139,108,"children"],[158,118,139,116],[158,119,139,117],[158,120,139,118],[158,121,139,119],[158,122,139,120,"content"],[158,129,139,127],[158,131,139,129,"opts"],[158,135,139,133],[158,137,139,135,"i18n"],[158,141,139,139],[158,142,139,140,"language"],[158,150,139,148],[158,151,139,149],[159,8,140,6],[159,12,140,10,"node"],[159,16,140,14],[159,17,140,15,"type"],[159,21,140,19],[159,26,140,24],[159,31,140,29],[159,33,140,31],[160,10,141,8],[160,14,141,12,"tmp"],[160,17,141,15],[160,20,141,18,"reactNodes"],[160,30,141,28],[160,31,141,29,"parseInt"],[160,39,141,37],[160,40,141,38,"node"],[160,44,141,42],[160,45,141,43,"name"],[160,49,141,47],[160,51,141,49],[160,53,141,51],[160,54,141,52],[160,55,141,53],[161,10,142,8],[161,14,142,12],[161,15,142,13,"tmp"],[161,18,142,16],[161,22,142,20,"knownComponentsMap"],[161,40,142,38],[161,42,142,40,"tmp"],[161,45,142,43],[161,48,142,46,"knownComponentsMap"],[161,66,142,64],[161,67,142,65,"node"],[161,71,142,69],[161,72,142,70,"name"],[161,76,142,74],[161,77,142,75],[162,10,143,8],[162,14,143,12,"rootReactNode"],[162,27,143,25],[162,28,143,26,"length"],[162,34,143,32],[162,39,143,37],[162,40,143,38],[162,44,143,42],[162,45,143,43,"tmp"],[162,48,143,46],[162,50,143,48,"tmp"],[162,53,143,51],[162,56,143,54,"rootReactNode"],[162,69,143,67],[162,70,143,68],[162,71,143,69],[162,72,143,70],[162,73,143,71,"node"],[162,77,143,75],[162,78,143,76,"name"],[162,82,143,80],[162,83,143,81],[163,10,144,8],[163,14,144,12],[163,15,144,13,"tmp"],[163,18,144,16],[163,20,144,18,"tmp"],[163,23,144,21],[163,26,144,24],[163,27,144,25],[163,28,144,26],[164,10,145,8],[164,16,145,14,"child"],[164,21,145,19],[164,24,145,22,"Object"],[164,30,145,28],[164,31,145,29,"keys"],[164,35,145,33],[164,36,145,34,"node"],[164,40,145,38],[164,41,145,39,"attrs"],[164,46,145,44],[164,47,145,45],[164,48,145,46,"length"],[164,54,145,52],[164,59,145,57],[164,60,145,58],[164,63,145,61,"mergeProps"],[164,73,145,71],[164,74,145,72],[165,12,146,10,"props"],[165,17,146,15],[165,19,146,17,"node"],[165,23,146,21],[165,24,146,22,"attrs"],[166,10,147,8],[166,11,147,9],[166,13,147,11,"tmp"],[166,16,147,14],[166,17,147,15],[166,20,147,18,"tmp"],[166,23,147,21],[167,10,148,8],[167,16,148,14,"isElement"],[167,25,148,23],[167,41,148,26],[167,45,148,26,"isValidElement"],[167,51,148,40],[167,52,148,40,"isValidElement"],[167,66,148,40],[167,68,148,41,"child"],[167,73,148,46],[167,74,148,47],[168,10,149,8],[168,16,149,14,"isValidTranslationWithChildren"],[168,46,149,44],[168,49,149,47,"isElement"],[168,58,149,56],[168,62,149,60,"hasChildren"],[168,73,149,71],[168,74,149,72,"node"],[168,78,149,76],[168,80,149,78],[168,84,149,82],[168,85,149,83],[168,89,149,87],[168,90,149,88,"node"],[168,94,149,92],[168,95,149,93,"voidElement"],[168,106,149,104],[169,10,150,8],[169,16,150,14,"isEmptyTransWithHTML"],[169,36,150,34],[169,39,150,37,"emptyChildrenButNeedsHandling"],[169,68,150,66],[169,72,150,70],[169,76,150,70,"isObject"],[169,84,150,78],[169,85,150,78,"isObject"],[169,93,150,78],[169,95,150,79,"child"],[169,100,150,84],[169,101,150,85],[169,105,150,89,"child"],[169,110,150,94],[169,111,150,95,"dummy"],[169,116,150,100],[169,120,150,104],[169,121,150,105,"isElement"],[169,130,150,114],[170,10,151,8],[170,16,151,14,"isKnownComponent"],[170,32,151,30],[170,35,151,33],[170,39,151,33,"isObject"],[170,47,151,41],[170,48,151,41,"isObject"],[170,56,151,41],[170,58,151,42,"knownComponentsMap"],[170,76,151,60],[170,77,151,61],[170,81,151,65,"Object"],[170,87,151,71],[170,88,151,72,"hasOwnProperty"],[170,102,151,86],[170,103,151,87,"call"],[170,107,151,91],[170,108,151,92,"knownComponentsMap"],[170,126,151,110],[170,128,151,112,"node"],[170,132,151,116],[170,133,151,117,"name"],[170,137,151,121],[170,138,151,122],[171,10,152,8],[171,14,152,12],[171,18,152,12,"isString"],[171,26,152,20],[171,27,152,20,"isString"],[171,35,152,20],[171,37,152,21,"child"],[171,42,152,26],[171,43,152,27],[171,45,152,29],[172,12,153,10],[172,18,153,16,"value"],[172,23,153,21],[172,26,153,24,"i18n"],[172,30,153,28],[172,31,153,29,"services"],[172,39,153,37],[172,40,153,38,"interpolator"],[172,52,153,50],[172,53,153,51,"interpolate"],[172,64,153,62],[172,65,153,63,"child"],[172,70,153,68],[172,72,153,70,"opts"],[172,76,153,74],[172,78,153,76,"i18n"],[172,82,153,80],[172,83,153,81,"language"],[172,91,153,89],[172,92,153,90],[173,12,154,10,"mem"],[173,15,154,13],[173,16,154,14,"push"],[173,20,154,18],[173,21,154,19,"value"],[173,26,154,24],[173,27,154,25],[174,10,155,8],[174,11,155,9],[174,17,155,15],[174,21,155,19,"hasChildren"],[174,32,155,30],[174,33,155,31,"child"],[174,38,155,36],[174,39,155,37],[174,43,155,41,"isValidTranslationWithChildren"],[174,73,155,71],[174,75,155,73],[175,12,156,10],[175,18,156,16,"inner"],[175,23,156,21],[175,26,156,24,"renderInner"],[175,37,156,35],[175,38,156,36,"child"],[175,43,156,41],[175,45,156,43,"node"],[175,49,156,47],[175,51,156,49,"rootReactNode"],[175,64,156,62],[175,65,156,63],[176,12,157,10,"pushTranslatedJSX"],[176,29,157,27],[176,30,157,28,"child"],[176,35,157,33],[176,37,157,35,"inner"],[176,42,157,40],[176,44,157,42,"mem"],[176,47,157,45],[176,49,157,47,"i"],[176,50,157,48],[176,51,157,49],[177,10,158,8],[177,11,158,9],[177,17,158,15],[177,21,158,19,"isEmptyTransWithHTML"],[177,41,158,39],[177,43,158,41],[178,12,159,10],[178,18,159,16,"inner"],[178,23,159,21],[178,26,159,24,"mapAST"],[178,32,159,30],[178,33,159,31,"reactNodes"],[178,43,159,41],[178,45,159,43,"node"],[178,49,159,47],[178,50,159,48,"children"],[178,58,159,56],[178,60,159,58,"rootReactNode"],[178,73,159,71],[178,74,159,72],[179,12,160,10,"pushTranslatedJSX"],[179,29,160,27],[179,30,160,28,"child"],[179,35,160,33],[179,37,160,35,"inner"],[179,42,160,40],[179,44,160,42,"mem"],[179,47,160,45],[179,49,160,47,"i"],[179,50,160,48],[179,51,160,49],[180,10,161,8],[180,11,161,9],[180,17,161,15],[180,21,161,19,"Number"],[180,27,161,25],[180,28,161,26,"isNaN"],[180,33,161,31],[180,34,161,32,"parseFloat"],[180,44,161,42],[180,45,161,43,"node"],[180,49,161,47],[180,50,161,48,"name"],[180,54,161,52],[180,55,161,53],[180,56,161,54],[180,58,161,56],[181,12,162,10],[181,16,162,14,"isKnownComponent"],[181,32,162,30],[181,34,162,32],[182,14,163,12],[182,20,163,18,"inner"],[182,25,163,23],[182,28,163,26,"renderInner"],[182,39,163,37],[182,40,163,38,"child"],[182,45,163,43],[182,47,163,45,"node"],[182,51,163,49],[182,53,163,51,"rootReactNode"],[182,66,163,64],[182,67,163,65],[183,14,164,12,"pushTranslatedJSX"],[183,31,164,29],[183,32,164,30,"child"],[183,37,164,35],[183,39,164,37,"inner"],[183,44,164,42],[183,46,164,44,"mem"],[183,49,164,47],[183,51,164,49,"i"],[183,52,164,50],[183,54,164,52,"node"],[183,58,164,56],[183,59,164,57,"voidElement"],[183,70,164,68],[183,71,164,69],[184,12,165,10],[184,13,165,11],[184,19,165,17],[184,23,165,21,"i18nOptions"],[184,34,165,32],[184,35,165,33,"transSupportBasicHtmlNodes"],[184,61,165,59],[184,65,165,63,"keepArray"],[184,74,165,72],[184,75,165,73,"indexOf"],[184,82,165,80],[184,83,165,81,"node"],[184,87,165,85],[184,88,165,86,"name"],[184,92,165,90],[184,93,165,91],[184,96,165,94],[184,97,165,95],[184,98,165,96],[184,100,165,98],[185,14,166,12],[185,18,166,16,"node"],[185,22,166,20],[185,23,166,21,"voidElement"],[185,34,166,32],[185,36,166,34],[186,16,167,14,"mem"],[186,19,167,17],[186,20,167,18,"push"],[186,24,167,22],[186,38,167,23],[186,42,167,23,"createElement"],[186,48,167,36],[186,49,167,36,"createElement"],[186,62,167,36],[186,64,167,37,"node"],[186,68,167,41],[186,69,167,42,"name"],[186,73,167,46],[186,75,167,48],[187,18,168,16,"key"],[187,21,168,19],[187,23,168,21],[187,26,168,24,"node"],[187,30,168,28],[187,31,168,29,"name"],[187,35,168,33],[187,39,168,37,"i"],[187,40,168,38],[188,16,169,14],[188,17,169,15],[188,18,169,16],[188,19,169,17],[189,14,170,12],[189,15,170,13],[189,21,170,19],[190,16,171,14],[190,22,171,20,"inner"],[190,27,171,25],[190,30,171,28,"mapAST"],[190,36,171,34],[190,37,171,35,"reactNodes"],[190,47,171,45],[190,49,171,47,"node"],[190,53,171,51],[190,54,171,52,"children"],[190,62,171,60],[190,64,171,62,"rootReactNode"],[190,77,171,75],[190,78,171,76],[191,16,172,14,"mem"],[191,19,172,17],[191,20,172,18,"push"],[191,24,172,22],[191,38,172,23],[191,42,172,23,"createElement"],[191,48,172,36],[191,49,172,36,"createElement"],[191,62,172,36],[191,64,172,37,"node"],[191,68,172,41],[191,69,172,42,"name"],[191,73,172,46],[191,75,172,48],[192,18,173,16,"key"],[192,21,173,19],[192,23,173,21],[192,26,173,24,"node"],[192,30,173,28],[192,31,173,29,"name"],[192,35,173,33],[192,39,173,37,"i"],[192,40,173,38],[193,16,174,14],[193,17,174,15],[193,19,174,17,"inner"],[193,24,174,22],[193,25,174,23],[193,26,174,24],[194,14,175,12],[195,12,176,10],[195,13,176,11],[195,19,176,17],[195,23,176,21,"node"],[195,27,176,25],[195,28,176,26,"voidElement"],[195,39,176,37],[195,41,176,39],[196,14,177,12,"mem"],[196,17,177,15],[196,18,177,16,"push"],[196,22,177,20],[196,23,177,21],[196,27,177,25,"node"],[196,31,177,29],[196,32,177,30,"name"],[196,36,177,34],[196,41,177,39],[196,42,177,40],[197,12,178,10],[197,13,178,11],[197,19,178,17],[198,14,179,12],[198,20,179,18,"inner"],[198,25,179,23],[198,28,179,26,"mapAST"],[198,34,179,32],[198,35,179,33,"reactNodes"],[198,45,179,43],[198,47,179,45,"node"],[198,51,179,49],[198,52,179,50,"children"],[198,60,179,58],[198,62,179,60,"rootReactNode"],[198,75,179,73],[198,76,179,74],[199,14,180,12,"mem"],[199,17,180,15],[199,18,180,16,"push"],[199,22,180,20],[199,23,180,21],[199,27,180,25,"node"],[199,31,180,29],[199,32,180,30,"name"],[199,36,180,34],[199,40,180,38,"inner"],[199,45,180,43],[199,50,180,48,"node"],[199,54,180,52],[199,55,180,53,"name"],[199,59,180,57],[199,62,180,60],[199,63,180,61],[200,12,181,10],[201,10,182,8],[201,11,182,9],[201,17,182,15],[201,21,182,19],[201,25,182,19,"isObject"],[201,33,182,27],[201,34,182,27,"isObject"],[201,42,182,27],[201,44,182,28,"child"],[201,49,182,33],[201,50,182,34],[201,54,182,38],[201,55,182,39,"isElement"],[201,64,182,48],[201,66,182,50],[202,12,183,10],[202,18,183,16,"content"],[202,25,183,23],[202,28,183,26,"node"],[202,32,183,30],[202,33,183,31,"children"],[202,41,183,39],[202,42,183,40],[202,43,183,41],[202,44,183,42],[202,47,183,45,"translationContent"],[202,65,183,63],[202,68,183,66],[202,72,183,70],[203,12,184,10],[203,16,184,14,"content"],[203,23,184,21],[203,25,184,23,"mem"],[203,28,184,26],[203,29,184,27,"push"],[203,33,184,31],[203,34,184,32,"content"],[203,41,184,39],[203,42,184,40],[204,10,185,8],[204,11,185,9],[204,17,185,15],[205,12,186,10,"pushTranslatedJSX"],[205,29,186,27],[205,30,186,28,"child"],[205,35,186,33],[205,37,186,35,"translationContent"],[205,55,186,53],[205,57,186,55,"mem"],[205,60,186,58],[205,62,186,60,"i"],[205,63,186,61],[205,65,186,63,"node"],[205,69,186,67],[205,70,186,68,"children"],[205,78,186,76],[205,79,186,77,"length"],[205,85,186,83],[205,90,186,88],[205,91,186,89],[205,95,186,93],[205,96,186,94,"translationContent"],[205,114,186,112],[205,115,186,113],[206,10,187,8],[207,8,188,6],[207,9,188,7],[207,15,188,13],[207,19,188,17,"node"],[207,23,188,21],[207,24,188,22,"type"],[207,28,188,26],[207,33,188,31],[207,39,188,37],[207,41,188,39],[208,10,189,8],[208,16,189,14,"wrapTextNodes"],[208,29,189,27],[208,32,189,30,"i18nOptions"],[208,43,189,41],[208,44,189,42,"transWrapTextNodes"],[208,62,189,60],[209,10,190,8],[209,16,190,14,"content"],[209,23,190,21],[209,26,190,24,"shouldUnescape"],[209,40,190,38],[209,43,190,41,"i18nOptions"],[209,54,190,52],[209,55,190,53,"unescape"],[209,63,190,61],[209,64,190,62,"i18n"],[209,68,190,66],[209,69,190,67,"services"],[209,77,190,75],[209,78,190,76,"interpolator"],[209,90,190,88],[209,91,190,89,"interpolate"],[209,102,190,100],[209,103,190,101,"node"],[209,107,190,105],[209,108,190,106,"content"],[209,115,190,113],[209,117,190,115,"opts"],[209,121,190,119],[209,123,190,121,"i18n"],[209,127,190,125],[209,128,190,126,"language"],[209,136,190,134],[209,137,190,135],[209,138,190,136],[209,141,190,139,"i18n"],[209,145,190,143],[209,146,190,144,"services"],[209,154,190,152],[209,155,190,153,"interpolator"],[209,167,190,165],[209,168,190,166,"interpolate"],[209,179,190,177],[209,180,190,178,"node"],[209,184,190,182],[209,185,190,183,"content"],[209,192,190,190],[209,194,190,192,"opts"],[209,198,190,196],[209,200,190,198,"i18n"],[209,204,190,202],[209,205,190,203,"language"],[209,213,190,211],[209,214,190,212],[210,10,191,8],[210,14,191,12,"wrapTextNodes"],[210,27,191,25],[210,29,191,27],[211,12,192,10,"mem"],[211,15,192,13],[211,16,192,14,"push"],[211,20,192,18],[211,34,192,19],[211,38,192,19,"createElement"],[211,44,192,32],[211,45,192,32,"createElement"],[211,58,192,32],[211,60,192,33,"wrapTextNodes"],[211,73,192,46],[211,75,192,48],[212,14,193,12,"key"],[212,17,193,15],[212,19,193,17],[212,22,193,20,"node"],[212,26,193,24],[212,27,193,25,"name"],[212,31,193,29],[212,35,193,33,"i"],[212,36,193,34],[213,12,194,10],[213,13,194,11],[213,15,194,13,"content"],[213,22,194,20],[213,23,194,21],[213,24,194,22],[214,10,195,8],[214,11,195,9],[214,17,195,15],[215,12,196,10,"mem"],[215,15,196,13],[215,16,196,14,"push"],[215,20,196,18],[215,21,196,19,"content"],[215,28,196,26],[215,29,196,27],[216,10,197,8],[217,8,198,6],[218,8,199,6],[218,15,199,13,"mem"],[218,18,199,16],[219,6,200,4],[219,7,200,5],[219,9,200,7],[219,11,200,9],[219,12,200,10],[220,4,201,2],[220,5,201,3],[221,4,202,2],[221,10,202,8,"result"],[221,16,202,14],[221,19,202,17,"mapAST"],[221,25,202,23],[221,26,202,24],[221,27,202,25],[222,6,203,4,"dummy"],[222,11,203,9],[222,13,203,11],[222,17,203,15],[223,6,204,4,"children"],[223,14,204,12],[223,16,204,14,"children"],[223,24,204,22],[223,28,204,26],[224,4,205,2],[224,5,205,3],[224,6,205,4],[224,8,205,6,"ast"],[224,11,205,9],[224,13,205,11,"getAsArray"],[224,23,205,21],[224,24,205,22,"children"],[224,32,205,30],[224,36,205,34],[224,38,205,36],[224,39,205,37],[224,40,205,38],[225,4,206,2],[225,11,206,9,"getChildren"],[225,22,206,20],[225,23,206,21,"result"],[225,29,206,27],[225,30,206,28],[225,31,206,29],[225,32,206,30],[225,33,206,31],[226,2,207,0],[226,3,207,1],[227,2,208,0],[227,8,208,6,"fixComponentProps"],[227,25,208,23],[227,28,208,26,"fixComponentProps"],[227,29,208,27,"component"],[227,38,208,36],[227,40,208,38,"index"],[227,45,208,43],[227,47,208,45,"translation"],[227,58,208,56],[227,63,208,61],[228,4,209,2],[228,10,209,8,"componentKey"],[228,22,209,20],[228,25,209,23,"component"],[228,34,209,32],[228,35,209,33,"key"],[228,38,209,36],[228,42,209,40,"index"],[228,47,209,45],[229,4,210,2],[229,10,210,8,"comp"],[229,14,210,12],[229,30,210,15],[229,34,210,15,"cloneElement"],[229,40,210,27],[229,41,210,27,"cloneElement"],[229,53,210,27],[229,55,210,28,"component"],[229,64,210,37],[229,66,210,39],[230,6,211,4,"key"],[230,9,211,7],[230,11,211,9,"componentKey"],[231,4,212,2],[231,5,212,3],[231,6,212,4],[232,4,213,2],[232,8,213,6],[232,9,213,7,"comp"],[232,13,213,11],[232,14,213,12,"props"],[232,19,213,17],[232,23,213,21],[232,24,213,22,"comp"],[232,28,213,26],[232,29,213,27,"props"],[232,34,213,32],[232,35,213,33,"children"],[232,43,213,41],[232,47,213,45,"translation"],[232,58,213,56],[232,59,213,57,"indexOf"],[232,66,213,64],[232,67,213,65],[232,70,213,68,"index"],[232,75,213,73],[232,79,213,77],[232,80,213,78],[232,83,213,81],[232,84,213,82],[232,88,213,86,"translation"],[232,99,213,97],[232,100,213,98,"indexOf"],[232,107,213,105],[232,108,213,106],[232,111,213,109,"index"],[232,116,213,114],[232,121,213,119],[232,122,213,120],[232,125,213,123],[232,126,213,124],[232,128,213,126],[233,6,214,4],[233,13,214,11,"comp"],[233,17,214,15],[234,4,215,2],[235,4,216,2],[235,13,216,11,"Componentized"],[235,26,216,24,"Componentized"],[235,27,216,24],[235,29,216,27],[236,6,217,4],[236,26,217,11],[236,30,217,11,"createElement"],[236,36,217,24],[236,37,217,24,"createElement"],[236,50,217,24],[236,52,217,25,"Fragment"],[236,58,217,33],[236,59,217,33,"Fragment"],[236,67,217,33],[236,69,217,35],[236,73,217,39],[236,75,217,41,"comp"],[236,79,217,45],[236,80,217,46],[237,4,218,2],[238,4,219,2],[238,24,219,9],[238,28,219,9,"createElement"],[238,34,219,22],[238,35,219,22,"createElement"],[238,48,219,22],[238,50,219,23,"Componentized"],[238,63,219,36],[238,65,219,38],[239,6,220,4,"key"],[239,9,220,7],[239,11,220,9,"componentKey"],[240,4,221,2],[240,5,221,3],[240,6,221,4],[241,2,222,0],[241,3,222,1],[242,2,223,0],[242,8,223,6,"generateArrayComponents"],[242,31,223,29],[242,34,223,32,"generateArrayComponents"],[242,35,223,33,"components"],[242,45,223,43],[242,47,223,45,"translation"],[242,58,223,56],[242,63,223,61,"components"],[242,73,223,71],[242,74,223,72,"map"],[242,77,223,75],[242,78,223,76],[242,79,223,77,"c"],[242,80,223,78],[242,82,223,80,"index"],[242,87,223,85],[242,92,223,90,"fixComponentProps"],[242,109,223,107],[242,110,223,108,"c"],[242,111,223,109],[242,113,223,111,"index"],[242,118,223,116],[242,120,223,118,"translation"],[242,131,223,129],[242,132,223,130],[242,133,223,131],[243,2,224,0],[243,8,224,6,"generateObjectComponents"],[243,32,224,30],[243,35,224,33,"generateObjectComponents"],[243,36,224,34,"components"],[243,46,224,44],[243,48,224,46,"translation"],[243,59,224,57],[243,64,224,62],[244,4,225,2],[244,10,225,8,"componentMap"],[244,22,225,20],[244,25,225,23],[244,26,225,24],[244,27,225,25],[245,4,226,2,"Object"],[245,10,226,8],[245,11,226,9,"keys"],[245,15,226,13],[245,16,226,14,"components"],[245,26,226,24],[245,27,226,25],[245,28,226,26,"forEach"],[245,35,226,33],[245,36,226,34,"c"],[245,37,226,35],[245,41,226,39],[246,6,227,4,"Object"],[246,12,227,10],[246,13,227,11,"assign"],[246,19,227,17],[246,20,227,18,"componentMap"],[246,32,227,30],[246,34,227,32],[247,8,228,6],[247,9,228,7,"c"],[247,10,228,8],[247,13,228,11,"fixComponentProps"],[247,30,228,28],[247,31,228,29,"components"],[247,41,228,39],[247,42,228,40,"c"],[247,43,228,41],[247,44,228,42],[247,46,228,44,"c"],[247,47,228,45],[247,49,228,47,"translation"],[247,60,228,58],[248,6,229,4],[248,7,229,5],[248,8,229,6],[249,4,230,2],[249,5,230,3],[249,6,230,4],[250,4,231,2],[250,11,231,9,"componentMap"],[250,23,231,21],[251,2,232,0],[251,3,232,1],[252,2,233,0],[252,8,233,6,"generateComponents"],[252,26,233,24],[252,29,233,27,"generateComponents"],[252,30,233,28,"components"],[252,40,233,38],[252,42,233,40,"translation"],[252,53,233,51],[252,55,233,53,"i18n"],[252,59,233,57],[252,61,233,59,"i18nKey"],[252,68,233,66],[252,73,233,71],[253,4,234,2],[253,8,234,6],[253,9,234,7,"components"],[253,19,234,17],[253,21,234,19],[253,28,234,26],[253,32,234,30],[254,4,235,2],[254,8,235,6,"Array"],[254,13,235,11],[254,14,235,12,"isArray"],[254,21,235,19],[254,22,235,20,"components"],[254,32,235,30],[254,33,235,31],[254,35,235,33],[255,6,236,4],[255,13,236,11,"generateArrayComponents"],[255,36,236,34],[255,37,236,35,"components"],[255,47,236,45],[255,49,236,47,"translation"],[255,60,236,58],[255,61,236,59],[256,4,237,2],[257,4,238,2],[257,8,238,6],[257,12,238,6,"isObject"],[257,20,238,14],[257,21,238,14,"isObject"],[257,29,238,14],[257,31,238,15,"components"],[257,41,238,25],[257,42,238,26],[257,44,238,28],[258,6,239,4],[258,13,239,11,"generateObjectComponents"],[258,37,239,35],[258,38,239,36,"components"],[258,48,239,46],[258,50,239,48,"translation"],[258,61,239,59],[258,62,239,60],[259,4,240,2],[260,4,241,2],[260,8,241,2,"warnOnce"],[260,16,241,10],[260,17,241,10,"warnOnce"],[260,25,241,10],[260,27,241,11,"i18n"],[260,31,241,15],[260,33,241,17],[260,59,241,43],[260,61,241,45],[260,117,241,101],[260,119,241,103],[261,6,242,4,"i18nKey"],[262,4,243,2],[262,5,243,3],[262,6,243,4],[263,4,244,2],[263,11,244,9],[263,15,244,13],[264,2,245,0],[264,3,245,1],[265,2,246,0],[265,8,246,6,"isComponentsMap"],[265,23,246,21],[265,26,246,24,"object"],[265,32,246,30],[265,36,246,34],[266,4,247,2],[266,8,247,6],[266,9,247,7],[266,13,247,7,"isObject"],[266,21,247,15],[266,22,247,15,"isObject"],[266,30,247,15],[266,32,247,16,"object"],[266,38,247,22],[266,39,247,23],[266,41,247,25],[266,48,247,32],[266,53,247,37],[267,4,248,2],[267,8,248,6,"Array"],[267,13,248,11],[267,14,248,12,"isArray"],[267,21,248,19],[267,22,248,20,"object"],[267,28,248,26],[267,29,248,27],[267,31,248,29],[267,38,248,36],[267,43,248,41],[268,4,249,2],[268,11,249,9,"Object"],[268,17,249,15],[268,18,249,16,"keys"],[268,22,249,20],[268,23,249,21,"object"],[268,29,249,27],[268,30,249,28],[268,31,249,29,"reduce"],[268,37,249,35],[268,38,249,36],[268,39,249,37,"acc"],[268,42,249,40],[268,44,249,42,"key"],[268,47,249,45],[268,52,249,50,"acc"],[268,55,249,53],[268,59,249,57,"Number"],[268,65,249,63],[268,66,249,64,"isNaN"],[268,71,249,69],[268,72,249,70,"Number"],[268,78,249,76],[268,79,249,77,"parseFloat"],[268,89,249,87],[268,90,249,88,"key"],[268,93,249,91],[268,94,249,92],[268,95,249,93],[268,97,249,95],[268,101,249,99],[268,102,249,100],[269,2,250,0],[269,3,250,1],[270,2,251,7],[270,11,251,16,"Trans"],[270,16,251,21,"Trans"],[270,17,251,22],[271,4,252,2,"children"],[271,12,252,10],[272,4,253,2,"count"],[272,9,253,7],[273,4,254,2,"parent"],[273,10,254,8],[274,4,255,2,"i18nKey"],[274,11,255,9],[275,4,256,2,"context"],[275,11,256,9],[276,4,257,2,"tOptions"],[276,12,257,10],[276,15,257,13],[276,16,257,14],[276,17,257,15],[277,4,258,2,"values"],[277,10,258,8],[278,4,259,2,"defaults"],[278,12,259,10],[279,4,260,2,"components"],[279,14,260,12],[280,4,261,2,"ns"],[280,6,261,4],[281,4,262,2,"i18n"],[281,8,262,6],[281,10,262,8,"i18nFromProps"],[281,23,262,21],[282,4,263,2,"t"],[282,5,263,3],[282,7,263,5,"tFromProps"],[282,17,263,15],[283,4,264,2,"shouldUnescape"],[283,18,264,16],[284,4,265,2],[284,7,265,5,"additionalProps"],[285,2,266,0],[285,3,266,1],[285,5,266,3],[286,4,267,2],[286,10,267,8,"i18n"],[286,14,267,12],[286,17,267,15,"i18nFromProps"],[286,30,267,28],[286,34,267,32],[286,38,267,32,"getI18n"],[286,53,267,39],[286,54,267,39,"getI18n"],[286,61,267,39],[286,63,267,40],[286,64,267,41],[287,4,268,2],[287,8,268,6],[287,9,268,7,"i18n"],[287,13,268,11],[287,15,268,13],[288,6,269,4],[288,10,269,4,"warnOnce"],[288,18,269,12],[288,19,269,12,"warnOnce"],[288,27,269,12],[288,29,269,13,"i18n"],[288,33,269,17],[288,35,269,19],[288,56,269,40],[288,58,269,42],[288,131,269,115],[288,133,269,117],[289,8,270,6,"i18nKey"],[290,6,271,4],[290,7,271,5],[290,8,271,6],[291,6,272,4],[291,13,272,11,"children"],[291,21,272,19],[292,4,273,2],[293,4,274,2],[293,10,274,8,"t"],[293,11,274,9],[293,14,274,12,"tFromProps"],[293,24,274,22],[293,28,274,26,"i18n"],[293,32,274,30],[293,33,274,31,"t"],[293,34,274,32],[293,35,274,33,"bind"],[293,39,274,37],[293,40,274,38,"i18n"],[293,44,274,42],[293,45,274,43],[293,50,274,48,"k"],[293,51,274,49],[293,55,274,53,"k"],[293,56,274,54],[293,57,274,55],[294,4,275,2],[294,10,275,8,"reactI18nextOptions"],[294,29,275,27],[294,32,275,30],[295,6,276,4],[295,9,276,7],[295,13,276,7,"getDefaults"],[295,24,276,18],[295,25,276,18,"getDefaults"],[295,36,276,18],[295,38,276,19],[295,39,276,20],[296,6,277,4],[296,9,277,7,"i18n"],[296,13,277,11],[296,14,277,12,"options"],[296,21,277,19],[296,23,277,21,"react"],[297,4,278,2],[297,5,278,3],[298,4,279,2],[298,8,279,6,"namespaces"],[298,18,279,16],[298,21,279,19,"ns"],[298,23,279,21],[298,27,279,25,"t"],[298,28,279,26],[298,29,279,27,"ns"],[298,31,279,29],[298,35,279,33,"i18n"],[298,39,279,37],[298,40,279,38,"options"],[298,47,279,45],[298,49,279,47,"defaultNS"],[298,58,279,56],[299,4,280,2,"namespaces"],[299,14,280,12],[299,17,280,15],[299,21,280,15,"isString"],[299,29,280,23],[299,30,280,23,"isString"],[299,38,280,23],[299,40,280,24,"namespaces"],[299,50,280,34],[299,51,280,35],[299,54,280,38],[299,55,280,39,"namespaces"],[299,65,280,49],[299,66,280,50],[299,69,280,53,"namespaces"],[299,79,280,63],[299,83,280,67],[299,84,280,68],[299,97,280,81],[299,98,280,82],[300,4,281,2],[300,10,281,8,"nodeAsString"],[300,22,281,20],[300,25,281,23,"nodesToString"],[300,38,281,36],[300,39,281,37,"children"],[300,47,281,45],[300,49,281,47,"reactI18nextOptions"],[300,68,281,66],[300,70,281,68,"i18n"],[300,74,281,72],[300,76,281,74,"i18nKey"],[300,83,281,81],[300,84,281,82],[301,4,282,2],[301,10,282,8,"defaultValue"],[301,22,282,20],[301,25,282,23,"defaults"],[301,33,282,31],[301,37,282,35,"nodeAsString"],[301,49,282,47],[301,53,282,51,"reactI18nextOptions"],[301,72,282,70],[301,73,282,71,"transEmptyNodeValue"],[301,92,282,90],[301,97,282,95],[301,104,282,102,"i18nKey"],[301,111,282,109],[301,116,282,114],[301,126,282,124],[301,129,282,127],[301,133,282,127,"keyFromSelector"],[301,141,282,142],[301,142,282,142,"keyFromSelector"],[301,157,282,142],[301,159,282,143,"i18nKey"],[301,166,282,150],[301,167,282,151],[301,170,282,154,"i18nKey"],[301,177,282,161],[301,178,282,162],[302,4,283,2],[302,10,283,8],[303,6,284,4,"hashTransKey"],[304,4,285,2],[304,5,285,3],[304,8,285,6,"reactI18nextOptions"],[304,27,285,25],[305,4,286,2],[305,10,286,8,"key"],[305,13,286,11],[305,16,286,14,"i18nKey"],[305,23,286,21],[305,28,286,26,"hashTransKey"],[305,40,286,38],[305,43,286,41,"hashTransKey"],[305,55,286,53],[305,56,286,54,"nodeAsString"],[305,68,286,66],[305,72,286,70,"defaultValue"],[305,84,286,82],[305,85,286,83],[305,88,286,86,"nodeAsString"],[305,100,286,98],[305,104,286,102,"defaultValue"],[305,116,286,114],[305,117,286,115],[306,4,287,2],[306,8,287,6,"i18n"],[306,12,287,10],[306,13,287,11,"options"],[306,20,287,18],[306,22,287,20,"interpolation"],[306,35,287,33],[306,37,287,35,"defaultVariables"],[306,53,287,51],[306,55,287,53],[307,6,288,4,"values"],[307,12,288,10],[307,15,288,13,"values"],[307,21,288,19],[307,25,288,23,"Object"],[307,31,288,29],[307,32,288,30,"keys"],[307,36,288,34],[307,37,288,35,"values"],[307,43,288,41],[307,44,288,42],[307,45,288,43,"length"],[307,51,288,49],[307,54,288,52],[307,55,288,53],[307,58,288,56],[308,8,289,6],[308,11,289,9,"values"],[308,17,289,15],[309,8,290,6],[309,11,290,9,"i18n"],[309,15,290,13],[309,16,290,14,"options"],[309,23,290,21],[309,24,290,22,"interpolation"],[309,37,290,35],[309,38,290,36,"defaultVariables"],[310,6,291,4],[310,7,291,5],[310,10,291,8],[311,8,292,6],[311,11,292,9,"i18n"],[311,15,292,13],[311,16,292,14,"options"],[311,23,292,21],[311,24,292,22,"interpolation"],[311,37,292,35],[311,38,292,36,"defaultVariables"],[312,6,293,4],[312,7,293,5],[313,4,294,2],[314,4,295,2],[314,10,295,8,"interpolationOverride"],[314,31,295,29],[314,34,295,32,"values"],[314,40,295,38],[314,44,295,42,"count"],[314,49,295,47],[314,54,295,52,"undefined"],[314,63,295,61],[314,67,295,65],[314,68,295,66,"i18n"],[314,72,295,70],[314,73,295,71,"options"],[314,80,295,78],[314,82,295,80,"interpolation"],[314,95,295,93],[314,97,295,95,"alwaysFormat"],[314,109,295,107],[314,113,295,111],[314,114,295,112,"children"],[314,122,295,120],[314,125,295,123,"tOptions"],[314,133,295,131],[314,134,295,132,"interpolation"],[314,147,295,145],[314,150,295,148],[315,6,296,4,"interpolation"],[315,19,296,17],[315,21,296,19],[316,8,297,6],[316,11,297,9,"tOptions"],[316,19,297,17],[316,20,297,18,"interpolation"],[316,33,297,31],[317,8,298,6,"prefix"],[317,14,298,12],[317,16,298,14],[317,21,298,19],[318,8,299,6,"suffix"],[318,14,299,12],[318,16,299,14],[319,6,300,4],[320,4,301,2],[320,5,301,3],[321,4,302,2],[321,10,302,8,"combinedTOpts"],[321,23,302,21],[321,26,302,24],[322,6,303,4],[322,9,303,7,"tOptions"],[322,17,303,15],[323,6,304,4,"context"],[323,13,304,11],[323,15,304,13,"context"],[323,22,304,20],[323,26,304,24,"tOptions"],[323,34,304,32],[323,35,304,33,"context"],[323,42,304,40],[324,6,305,4,"count"],[324,11,305,9],[325,6,306,4],[325,9,306,7,"values"],[325,15,306,13],[326,6,307,4],[326,9,307,7,"interpolationOverride"],[326,30,307,28],[327,6,308,4,"defaultValue"],[327,18,308,16],[328,6,309,4,"ns"],[328,8,309,6],[328,10,309,8,"namespaces"],[329,4,310,2],[329,5,310,3],[330,4,311,2],[330,10,311,8,"translation"],[330,21,311,19],[330,24,311,22,"key"],[330,27,311,25],[330,30,311,28,"t"],[330,31,311,29],[330,32,311,30,"key"],[330,35,311,33],[330,37,311,35,"combinedTOpts"],[330,50,311,48],[330,51,311,49],[330,54,311,52,"defaultValue"],[330,66,311,64],[331,4,312,2],[331,10,312,8,"generatedComponents"],[331,29,312,27],[331,32,312,30,"generateComponents"],[331,50,312,48],[331,51,312,49,"components"],[331,61,312,59],[331,63,312,61,"translation"],[331,74,312,72],[331,76,312,74,"i18n"],[331,80,312,78],[331,82,312,80,"i18nKey"],[331,89,312,87],[331,90,312,88],[332,4,313,2],[332,8,313,6,"indexedChildren"],[332,23,313,21],[332,26,313,24,"generatedComponents"],[332,45,313,43],[332,49,313,47,"children"],[332,57,313,55],[333,4,314,2],[333,8,314,6,"componentsMap"],[333,21,314,19],[333,24,314,22],[333,28,314,26],[334,4,315,2],[334,8,315,6,"isComponentsMap"],[334,23,315,21],[334,24,315,22,"generatedComponents"],[334,43,315,41],[334,44,315,42],[334,46,315,44],[335,6,316,4,"componentsMap"],[335,19,316,17],[335,22,316,20,"generatedComponents"],[335,41,316,39],[336,6,317,4,"indexedChildren"],[336,21,317,19],[336,24,317,22,"children"],[336,32,317,30],[337,4,318,2],[338,4,319,2],[338,10,319,8,"content"],[338,17,319,15],[338,20,319,18,"renderNodes"],[338,31,319,29],[338,32,319,30,"indexedChildren"],[338,47,319,45],[338,49,319,47,"componentsMap"],[338,62,319,60],[338,64,319,62,"translation"],[338,75,319,73],[338,77,319,75,"i18n"],[338,81,319,79],[338,83,319,81,"reactI18nextOptions"],[338,102,319,100],[338,104,319,102,"combinedTOpts"],[338,117,319,115],[338,119,319,117,"shouldUnescape"],[338,133,319,131],[338,134,319,132],[339,4,320,2],[339,10,320,8,"useAsParent"],[339,21,320,19],[339,24,320,22,"parent"],[339,30,320,28],[339,34,320,32,"reactI18nextOptions"],[339,53,320,51],[339,54,320,52,"defaultTransParent"],[339,72,320,70],[340,4,321,2],[340,11,321,9,"useAsParent"],[340,22,321,20],[340,38,321,23],[340,42,321,23,"createElement"],[340,48,321,36],[340,49,321,36,"createElement"],[340,62,321,36],[340,64,321,37,"useAsParent"],[340,75,321,48],[340,77,321,50,"additionalProps"],[340,92,321,65],[340,94,321,67,"content"],[340,101,321,74],[340,102,321,75],[340,105,321,78,"content"],[340,112,321,85],[341,2,322,0],[342,0,322,1],[342,3]],"functionMap":{"names":["<global>","hasChildren","getChildren","hasValidReactChildren","getAsArray","mergeProps","nodesToString","childrenArray.forEach$argument_0","renderNodes","keepArray.map$argument_0","getData","renderInner","pushTranslatedJSX","Children.map$argument_1","mapAST","astNodes.reduce$argument_0","fixComponentProps","Componentized","generateArrayComponents","components.map$argument_0","generateObjectComponents","Object.keys.forEach$argument_0","generateComponents","isComponentsMap","Object.keys.reduce$argument_0","Trans","<anonymous>"],"mappings":"AAA;oBCM;CDK;oBEC;CFI;8BGC,qEH;mBIC,2CJ;mBKC;CLM;6BMC;wBCK;GDwD;CNE;oBQC;iFCG,kBD;kBEG;0BHE;KGG;GFC;sBGO;GHI;4BIC;wCCO;ODU;GJE;iBMC;2BCG;KD8D;GNC;CRM;0BgBC;ECQ;GDE;ChBI;gCkBC,4CC,sDD,ClB;iCoBC;kCCE;GDI;CpBE;2BsBC;CtBY;wBuBC;oCCG,yDD;CvBC;OyBC;gDCuB,MD"},"hasCjsExports":false},"type":"js/module"}]}