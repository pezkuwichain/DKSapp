{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":77,"index":77}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./context.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":78},"end":{"line":2,"column":83,"index":161}}],"key":"ciyJyVp8PjcMvRLY+pcKnPpy50E=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":162},"end":{"line":3,"column":109,"index":271}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useTranslation\", {\n    enumerable: true,\n    get: function () {\n      return useTranslation;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _contextJs = require(_dependencyMap[2], \"./context.js\");\n  var _utilsJs = require(_dependencyMap[3], \"./utils.js\");\n  var usePrevious = (value, ignore) => {\n    var ref = (0, _react.useRef)();\n    (0, _react.useEffect)(() => {\n      ref.current = ignore ? ref.current : value;\n    }, [value, ignore]);\n    return ref.current;\n  };\n  var alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\n  var useMemoizedT = (i18n, language, namespace, keyPrefix) => (0, _react.useCallback)(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n  var useTranslation = function (ns) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var i18nFromProps = props.i18n;\n    var _ref = (0, _react.useContext)(_contextJs.I18nContext) || {},\n      i18nFromContext = _ref.i18n,\n      defaultNSFromContext = _ref.defaultNS;\n    var i18n = i18nFromProps || i18nFromContext || (0, _contextJs.getI18n)();\n    if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new _contextJs.ReportNamespaces();\n    if (!i18n) {\n      (0, _utilsJs.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n      var notReadyT = (k, optsOrDefaultValue) => {\n        if ((0, _utilsJs.isString)(optsOrDefaultValue)) return optsOrDefaultValue;\n        if ((0, _utilsJs.isObject)(optsOrDefaultValue) && (0, _utilsJs.isString)(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n        return Array.isArray(k) ? k[k.length - 1] : k;\n      };\n      var retNotReady = [notReadyT, {}, false];\n      retNotReady.t = notReadyT;\n      retNotReady.i18n = {};\n      retNotReady.ready = false;\n      return retNotReady;\n    }\n    if (i18n.options.react?.wait) (0, _utilsJs.warnOnce)(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n    var i18nOptions = {\n      ...(0, _contextJs.getDefaults)(),\n      ...i18n.options.react,\n      ...props\n    };\n    var useSuspense = i18nOptions.useSuspense,\n      keyPrefix = i18nOptions.keyPrefix;\n    var namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n    namespaces = (0, _utilsJs.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n    var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => (0, _utilsJs.hasLoadedNamespace)(n, i18n, i18nOptions));\n    var memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n    var getT = () => memoGetT;\n    var getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n    var _useState = (0, _react.useState)(getT),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      t = _useState2[0],\n      setT = _useState2[1];\n    var joinedNS = namespaces.join();\n    if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n    var previousJoinedNS = usePrevious(joinedNS);\n    var isMounted = (0, _react.useRef)(true);\n    (0, _react.useEffect)(() => {\n      var bindI18n = i18nOptions.bindI18n,\n        bindI18nStore = i18nOptions.bindI18nStore;\n      isMounted.current = true;\n      if (!ready && !useSuspense) {\n        if (props.lng) {\n          (0, _utilsJs.loadLanguages)(i18n, props.lng, namespaces, () => {\n            if (isMounted.current) setT(getNewT);\n          });\n        } else {\n          (0, _utilsJs.loadNamespaces)(i18n, namespaces, () => {\n            if (isMounted.current) setT(getNewT);\n          });\n        }\n      }\n      if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n        setT(getNewT);\n      }\n      var boundReset = () => {\n        if (isMounted.current) setT(getNewT);\n      };\n      if (bindI18n) i18n?.on(bindI18n, boundReset);\n      if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n      return () => {\n        isMounted.current = false;\n        if (i18n && bindI18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n        if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n      };\n    }, [i18n, joinedNS]);\n    (0, _react.useEffect)(() => {\n      if (isMounted.current && ready) {\n        setT(getT);\n      }\n    }, [i18n, keyPrefix, ready]);\n    var ret = [t, i18n, ready];\n    ret.t = t;\n    ret.i18n = i18n;\n    ret.ready = ready;\n    if (ready) return ret;\n    if (!ready && !useSuspense) return ret;\n    throw new Promise(resolve => {\n      if (props.lng) {\n        (0, _utilsJs.loadLanguages)(i18n, props.lng, namespaces, () => resolve());\n      } else {\n        (0, _utilsJs.loadNamespaces)(i18n, namespaces, () => resolve());\n      }\n    });\n  };\n});","lineCount":124,"map":[[12,2,13,0,"Object"],[12,8,13,0],[12,9,13,0,"defineProperty"],[12,23,13,0],[12,24,13,0,"exports"],[12,31,13,0],[13,4,13,0,"enumerable"],[13,14,13,0],[14,4,13,0,"get"],[14,7,13,0],[14,18,13,0,"get"],[14,19,13,0],[15,6,13,0],[15,13,13,0,"useTranslation"],[15,27,13,0],[16,4,13,0],[17,2,13,0],[18,2,107,2],[18,6,107,2,"_babelRuntimeHelpersSlicedToArray"],[18,39,107,2],[18,42,107,2,"require"],[18,49,107,2],[18,50,107,2,"_dependencyMap"],[18,64,107,2],[19,2,107,2],[19,6,107,2,"_slicedToArray"],[19,20,107,2],[19,23,107,2,"_interopDefault"],[19,38,107,2],[19,39,107,2,"_babelRuntimeHelpersSlicedToArray"],[19,72,107,2],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_contextJs"],[21,16,2,0],[21,19,2,0,"require"],[21,26,2,0],[21,27,2,0,"_dependencyMap"],[21,41,2,0],[22,2,3,0],[22,6,3,0,"_utilsJs"],[22,14,3,0],[22,17,3,0,"require"],[22,24,3,0],[22,25,3,0,"_dependencyMap"],[22,39,3,0],[23,2,4,0],[23,6,4,6,"usePrevious"],[23,17,4,17],[23,20,4,20,"usePrevious"],[23,21,4,21,"value"],[23,26,4,26],[23,28,4,28,"ignore"],[23,34,4,34],[23,39,4,39],[24,4,5,2],[24,8,5,8,"ref"],[24,11,5,11],[24,14,5,14],[24,18,5,14,"useRef"],[24,24,5,20],[24,25,5,20,"useRef"],[24,31,5,20],[24,33,5,21],[24,34,5,22],[25,4,6,2],[25,8,6,2,"useEffect"],[25,14,6,11],[25,15,6,11,"useEffect"],[25,24,6,11],[25,26,6,12],[25,32,6,18],[26,6,7,4,"ref"],[26,9,7,7],[26,10,7,8,"current"],[26,17,7,15],[26,20,7,18,"ignore"],[26,26,7,24],[26,29,7,27,"ref"],[26,32,7,30],[26,33,7,31,"current"],[26,40,7,38],[26,43,7,41,"value"],[26,48,7,46],[27,4,8,2],[27,5,8,3],[27,7,8,5],[27,8,8,6,"value"],[27,13,8,11],[27,15,8,13,"ignore"],[27,21,8,19],[27,22,8,20],[27,23,8,21],[28,4,9,2],[28,11,9,9,"ref"],[28,14,9,12],[28,15,9,13,"current"],[28,22,9,20],[29,2,10,0],[29,3,10,1],[30,2,11,0],[30,6,11,6,"alwaysNewT"],[30,16,11,16],[30,19,11,19,"alwaysNewT"],[30,20,11,20,"i18n"],[30,24,11,24],[30,26,11,26,"language"],[30,34,11,34],[30,36,11,36,"namespace"],[30,45,11,45],[30,47,11,47,"keyPrefix"],[30,56,11,56],[30,61,11,61,"i18n"],[30,65,11,65],[30,66,11,66,"getFixedT"],[30,75,11,75],[30,76,11,76,"language"],[30,84,11,84],[30,86,11,86,"namespace"],[30,95,11,95],[30,97,11,97,"keyPrefix"],[30,106,11,106],[30,107,11,107],[31,2,12,0],[31,6,12,6,"useMemoizedT"],[31,18,12,18],[31,21,12,21,"useMemoizedT"],[31,22,12,22,"i18n"],[31,26,12,26],[31,28,12,28,"language"],[31,36,12,36],[31,38,12,38,"namespace"],[31,47,12,47],[31,49,12,49,"keyPrefix"],[31,58,12,58],[31,63,12,63],[31,67,12,63,"useCallback"],[31,73,12,74],[31,74,12,74,"useCallback"],[31,85,12,74],[31,87,12,75,"alwaysNewT"],[31,97,12,85],[31,98,12,86,"i18n"],[31,102,12,90],[31,104,12,92,"language"],[31,112,12,100],[31,114,12,102,"namespace"],[31,123,12,111],[31,125,12,113,"keyPrefix"],[31,134,12,122],[31,135,12,123],[31,137,12,125],[31,138,12,126,"i18n"],[31,142,12,130],[31,144,12,132,"language"],[31,152,12,140],[31,154,12,142,"namespace"],[31,163,12,151],[31,165,12,153,"keyPrefix"],[31,174,12,162],[31,175,12,163],[31,176,12,164],[32,2,13,7],[32,6,13,13,"useTranslation"],[32,20,13,27],[32,23,13,30],[32,32,13,30,"useTranslation"],[32,33,13,31,"ns"],[32,35,13,33],[32,37,13,50],[33,4,13,50],[33,8,13,35,"props"],[33,13,13,40],[33,16,13,40,"arguments"],[33,25,13,40],[33,26,13,40,"length"],[33,32,13,40],[33,40,13,40,"arguments"],[33,49,13,40],[33,57,13,40,"undefined"],[33,66,13,40],[33,69,13,40,"arguments"],[33,78,13,40],[33,84,13,43],[33,85,13,44],[33,86,13,45],[34,4,14,2],[34,8,15,10,"i18nFromProps"],[34,21,15,23],[34,24,16,6,"props"],[34,29,16,11],[34,30,15,4,"i18n"],[34,34,15,8],[35,4,17,2],[35,8,17,2,"_ref"],[35,12,17,2],[35,15,20,6],[35,19,20,6,"useContext"],[35,25,20,16],[35,26,20,16,"useContext"],[35,36,20,16],[35,38,20,17,"I18nContext"],[35,48,20,28],[35,49,20,28,"I18nContext"],[35,60,20,28],[35,61,20,29],[35,65,20,33],[35,66,20,34],[35,67,20,35],[36,6,18,10,"i18nFromContext"],[36,21,18,25],[36,24,18,25,"_ref"],[36,28,18,25],[36,29,18,4,"i18n"],[36,33,18,8],[37,6,19,15,"defaultNSFromContext"],[37,26,19,35],[37,29,19,35,"_ref"],[37,33,19,35],[37,34,19,4,"defaultNS"],[37,43,19,13],[38,4,21,2],[38,8,21,8,"i18n"],[38,12,21,12],[38,15,21,15,"i18nFromProps"],[38,28,21,28],[38,32,21,32,"i18nFromContext"],[38,47,21,47],[38,51,21,51],[38,55,21,51,"getI18n"],[38,65,21,58],[38,66,21,58,"getI18n"],[38,73,21,58],[38,75,21,59],[38,76,21,60],[39,4,22,2],[39,8,22,6,"i18n"],[39,12,22,10],[39,16,22,14],[39,17,22,15,"i18n"],[39,21,22,19],[39,22,22,20,"reportNamespaces"],[39,38,22,36],[39,40,22,38,"i18n"],[39,44,22,42],[39,45,22,43,"reportNamespaces"],[39,61,22,59],[39,64,22,62],[39,68,22,66,"ReportNamespaces"],[39,78,22,82],[39,79,22,82,"ReportNamespaces"],[39,95,22,82],[39,96,22,83],[39,97,22,84],[40,4,23,2],[40,8,23,6],[40,9,23,7,"i18n"],[40,13,23,11],[40,15,23,13],[41,6,24,4],[41,10,24,4,"warnOnce"],[41,18,24,12],[41,19,24,12,"warnOnce"],[41,27,24,12],[41,29,24,13,"i18n"],[41,33,24,17],[41,35,24,19],[41,56,24,40],[41,58,24,42],[41,146,24,130],[41,147,24,131],[42,6,25,4],[42,10,25,10,"notReadyT"],[42,19,25,19],[42,22,25,22,"notReadyT"],[42,23,25,23,"k"],[42,24,25,24],[42,26,25,26,"optsOrDefaultValue"],[42,44,25,44],[42,49,25,49],[43,8,26,6],[43,12,26,10],[43,16,26,10,"isString"],[43,24,26,18],[43,25,26,18,"isString"],[43,33,26,18],[43,35,26,19,"optsOrDefaultValue"],[43,53,26,37],[43,54,26,38],[43,56,26,40],[43,63,26,47,"optsOrDefaultValue"],[43,81,26,65],[44,8,27,6],[44,12,27,10],[44,16,27,10,"isObject"],[44,24,27,18],[44,25,27,18,"isObject"],[44,33,27,18],[44,35,27,19,"optsOrDefaultValue"],[44,53,27,37],[44,54,27,38],[44,58,27,42],[44,62,27,42,"isString"],[44,70,27,50],[44,71,27,50,"isString"],[44,79,27,50],[44,81,27,51,"optsOrDefaultValue"],[44,99,27,69],[44,100,27,70,"defaultValue"],[44,112,27,82],[44,113,27,83],[44,115,27,85],[44,122,27,92,"optsOrDefaultValue"],[44,140,27,110],[44,141,27,111,"defaultValue"],[44,153,27,123],[45,8,28,6],[45,15,28,13,"Array"],[45,20,28,18],[45,21,28,19,"isArray"],[45,28,28,26],[45,29,28,27,"k"],[45,30,28,28],[45,31,28,29],[45,34,28,32,"k"],[45,35,28,33],[45,36,28,34,"k"],[45,37,28,35],[45,38,28,36,"length"],[45,44,28,42],[45,47,28,45],[45,48,28,46],[45,49,28,47],[45,52,28,50,"k"],[45,53,28,51],[46,6,29,4],[46,7,29,5],[47,6,30,4],[47,10,30,10,"retNotReady"],[47,21,30,21],[47,24,30,24],[47,25,30,25,"notReadyT"],[47,34,30,34],[47,36,30,36],[47,37,30,37],[47,38,30,38],[47,40,30,40],[47,45,30,45],[47,46,30,46],[48,6,31,4,"retNotReady"],[48,17,31,15],[48,18,31,16,"t"],[48,19,31,17],[48,22,31,20,"notReadyT"],[48,31,31,29],[49,6,32,4,"retNotReady"],[49,17,32,15],[49,18,32,16,"i18n"],[49,22,32,20],[49,25,32,23],[49,26,32,24],[49,27,32,25],[50,6,33,4,"retNotReady"],[50,17,33,15],[50,18,33,16,"ready"],[50,23,33,21],[50,26,33,24],[50,31,33,29],[51,6,34,4],[51,13,34,11,"retNotReady"],[51,24,34,22],[52,4,35,2],[53,4,36,2],[53,8,36,6,"i18n"],[53,12,36,10],[53,13,36,11,"options"],[53,20,36,18],[53,21,36,19,"react"],[53,26,36,24],[53,28,36,26,"wait"],[53,32,36,30],[53,34,36,32],[53,38,36,32,"warnOnce"],[53,46,36,40],[53,47,36,40,"warnOnce"],[53,55,36,40],[53,57,36,41,"i18n"],[53,61,36,45],[53,63,36,47],[53,82,36,66],[53,84,36,68],[53,201,36,185],[53,202,36,186],[54,4,37,2],[54,8,37,8,"i18nOptions"],[54,19,37,19],[54,22,37,22],[55,6,38,4],[55,9,38,7],[55,13,38,7,"getDefaults"],[55,23,38,18],[55,24,38,18,"getDefaults"],[55,35,38,18],[55,37,38,19],[55,38,38,20],[56,6,39,4],[56,9,39,7,"i18n"],[56,13,39,11],[56,14,39,12,"options"],[56,21,39,19],[56,22,39,20,"react"],[56,27,39,25],[57,6,40,4],[57,9,40,7,"props"],[58,4,41,2],[58,5,41,3],[59,4,42,2],[59,8,43,4,"useSuspense"],[59,19,43,15],[59,22,45,6,"i18nOptions"],[59,33,45,17],[59,34,43,4,"useSuspense"],[59,45,43,15],[60,6,44,4,"keyPrefix"],[60,15,44,13],[60,18,45,6,"i18nOptions"],[60,29,45,17],[60,30,44,4,"keyPrefix"],[60,39,44,13],[61,4,46,2],[61,8,46,6,"namespaces"],[61,18,46,16],[61,21,46,19,"ns"],[61,23,46,21],[61,27,46,25,"defaultNSFromContext"],[61,47,46,45],[61,51,46,49,"i18n"],[61,55,46,53],[61,56,46,54,"options"],[61,63,46,61],[61,65,46,63,"defaultNS"],[61,74,46,72],[62,4,47,2,"namespaces"],[62,14,47,12],[62,17,47,15],[62,21,47,15,"isString"],[62,29,47,23],[62,30,47,23,"isString"],[62,38,47,23],[62,40,47,24,"namespaces"],[62,50,47,34],[62,51,47,35],[62,54,47,38],[62,55,47,39,"namespaces"],[62,65,47,49],[62,66,47,50],[62,69,47,53,"namespaces"],[62,79,47,63],[62,83,47,67],[62,84,47,68],[62,97,47,81],[62,98,47,82],[63,4,48,2,"i18n"],[63,8,48,6],[63,9,48,7,"reportNamespaces"],[63,25,48,23],[63,26,48,24,"addUsedNamespaces"],[63,43,48,41],[63,46,48,44,"namespaces"],[63,56,48,54],[63,57,48,55],[64,4,49,2],[64,8,49,8,"ready"],[64,13,49,13],[64,16,49,16],[64,17,49,17,"i18n"],[64,21,49,21],[64,22,49,22,"isInitialized"],[64,35,49,35],[64,39,49,39,"i18n"],[64,43,49,43],[64,44,49,44,"initializedStoreOnce"],[64,64,49,64],[64,69,49,69,"namespaces"],[64,79,49,79],[64,80,49,80,"every"],[64,85,49,85],[64,86,49,86,"n"],[64,87,49,87],[64,91,49,91],[64,95,49,91,"hasLoadedNamespace"],[64,103,49,109],[64,104,49,109,"hasLoadedNamespace"],[64,122,49,109],[64,124,49,110,"n"],[64,125,49,111],[64,127,49,113,"i18n"],[64,131,49,117],[64,133,49,119,"i18nOptions"],[64,144,49,130],[64,145,49,131],[64,146,49,132],[65,4,50,2],[65,8,50,8,"memoGetT"],[65,16,50,16],[65,19,50,19,"useMemoizedT"],[65,31,50,31],[65,32,50,32,"i18n"],[65,36,50,36],[65,38,50,38,"props"],[65,43,50,43],[65,44,50,44,"lng"],[65,47,50,47],[65,51,50,51],[65,55,50,55],[65,57,50,57,"i18nOptions"],[65,68,50,68],[65,69,50,69,"nsMode"],[65,75,50,75],[65,80,50,80],[65,90,50,90],[65,93,50,93,"namespaces"],[65,103,50,103],[65,106,50,106,"namespaces"],[65,116,50,116],[65,117,50,117],[65,118,50,118],[65,119,50,119],[65,121,50,121,"keyPrefix"],[65,130,50,130],[65,131,50,131],[66,4,51,2],[66,8,51,8,"getT"],[66,12,51,12],[66,15,51,15,"getT"],[66,16,51,15],[66,21,51,21,"memoGetT"],[66,29,51,29],[67,4,52,2],[67,8,52,8,"getNewT"],[67,15,52,15],[67,18,52,18,"getNewT"],[67,19,52,18],[67,24,52,24,"alwaysNewT"],[67,34,52,34],[67,35,52,35,"i18n"],[67,39,52,39],[67,41,52,41,"props"],[67,46,52,46],[67,47,52,47,"lng"],[67,50,52,50],[67,54,52,54],[67,58,52,58],[67,60,52,60,"i18nOptions"],[67,71,52,71],[67,72,52,72,"nsMode"],[67,78,52,78],[67,83,52,83],[67,93,52,93],[67,96,52,96,"namespaces"],[67,106,52,106],[67,109,52,109,"namespaces"],[67,119,52,119],[67,120,52,120],[67,121,52,121],[67,122,52,122],[67,124,52,124,"keyPrefix"],[67,133,52,133],[67,134,52,134],[68,4,53,2],[68,8,53,2,"_useState"],[68,17,53,2],[68,20,53,20],[68,24,53,20,"useState"],[68,30,53,28],[68,31,53,28,"useState"],[68,39,53,28],[68,41,53,29,"getT"],[68,45,53,33],[68,46,53,34],[69,6,53,34,"_useState2"],[69,16,53,34],[69,23,53,34,"_slicedToArray"],[69,37,53,34],[69,38,53,34,"default"],[69,45,53,34],[69,47,53,34,"_useState"],[69,56,53,34],[70,6,53,9,"t"],[70,7,53,10],[70,10,53,10,"_useState2"],[70,20,53,10],[71,6,53,12,"setT"],[71,10,53,16],[71,13,53,16,"_useState2"],[71,23,53,16],[72,4,54,2],[72,8,54,6,"joinedNS"],[72,16,54,14],[72,19,54,17,"namespaces"],[72,29,54,27],[72,30,54,28,"join"],[72,34,54,32],[72,35,54,33],[72,36,54,34],[73,4,55,2],[73,8,55,6,"props"],[73,13,55,11],[73,14,55,12,"lng"],[73,17,55,15],[73,19,55,17,"joinedNS"],[73,27,55,25],[73,30,55,28],[73,33,55,31,"props"],[73,38,55,36],[73,39,55,37,"lng"],[73,42,55,40],[73,45,55,43,"joinedNS"],[73,53,55,51],[73,55,55,53],[74,4,56,2],[74,8,56,8,"previousJoinedNS"],[74,24,56,24],[74,27,56,27,"usePrevious"],[74,38,56,38],[74,39,56,39,"joinedNS"],[74,47,56,47],[74,48,56,48],[75,4,57,2],[75,8,57,8,"isMounted"],[75,17,57,17],[75,20,57,20],[75,24,57,20,"useRef"],[75,30,57,26],[75,31,57,26,"useRef"],[75,37,57,26],[75,39,57,27],[75,43,57,31],[75,44,57,32],[76,4,58,2],[76,8,58,2,"useEffect"],[76,14,58,11],[76,15,58,11,"useEffect"],[76,24,58,11],[76,26,58,12],[76,32,58,18],[77,6,59,4],[77,10,60,6,"bindI18n"],[77,18,60,14],[77,21,62,8,"i18nOptions"],[77,32,62,19],[77,33,60,6,"bindI18n"],[77,41,60,14],[78,8,61,6,"bindI18nStore"],[78,21,61,19],[78,24,62,8,"i18nOptions"],[78,35,62,19],[78,36,61,6,"bindI18nStore"],[78,49,61,19],[79,6,63,4,"isMounted"],[79,15,63,13],[79,16,63,14,"current"],[79,23,63,21],[79,26,63,24],[79,30,63,28],[80,6,64,4],[80,10,64,8],[80,11,64,9,"ready"],[80,16,64,14],[80,20,64,18],[80,21,64,19,"useSuspense"],[80,32,64,30],[80,34,64,32],[81,8,65,6],[81,12,65,10,"props"],[81,17,65,15],[81,18,65,16,"lng"],[81,21,65,19],[81,23,65,21],[82,10,66,8],[82,14,66,8,"loadLanguages"],[82,22,66,21],[82,23,66,21,"loadLanguages"],[82,36,66,21],[82,38,66,22,"i18n"],[82,42,66,26],[82,44,66,28,"props"],[82,49,66,33],[82,50,66,34,"lng"],[82,53,66,37],[82,55,66,39,"namespaces"],[82,65,66,49],[82,67,66,51],[82,73,66,57],[83,12,67,10],[83,16,67,14,"isMounted"],[83,25,67,23],[83,26,67,24,"current"],[83,33,67,31],[83,35,67,33,"setT"],[83,39,67,37],[83,40,67,38,"getNewT"],[83,47,67,45],[83,48,67,46],[84,10,68,8],[84,11,68,9],[84,12,68,10],[85,8,69,6],[85,9,69,7],[85,15,69,13],[86,10,70,8],[86,14,70,8,"loadNamespaces"],[86,22,70,22],[86,23,70,22,"loadNamespaces"],[86,37,70,22],[86,39,70,23,"i18n"],[86,43,70,27],[86,45,70,29,"namespaces"],[86,55,70,39],[86,57,70,41],[86,63,70,47],[87,12,71,10],[87,16,71,14,"isMounted"],[87,25,71,23],[87,26,71,24,"current"],[87,33,71,31],[87,35,71,33,"setT"],[87,39,71,37],[87,40,71,38,"getNewT"],[87,47,71,45],[87,48,71,46],[88,10,72,8],[88,11,72,9],[88,12,72,10],[89,8,73,6],[90,6,74,4],[91,6,75,4],[91,10,75,8,"ready"],[91,15,75,13],[91,19,75,17,"previousJoinedNS"],[91,35,75,33],[91,39,75,37,"previousJoinedNS"],[91,55,75,53],[91,60,75,58,"joinedNS"],[91,68,75,66],[91,72,75,70,"isMounted"],[91,81,75,79],[91,82,75,80,"current"],[91,89,75,87],[91,91,75,89],[92,8,76,6,"setT"],[92,12,76,10],[92,13,76,11,"getNewT"],[92,20,76,18],[92,21,76,19],[93,6,77,4],[94,6,78,4],[94,10,78,10,"boundReset"],[94,20,78,20],[94,23,78,23,"boundReset"],[94,24,78,23],[94,29,78,29],[95,8,79,6],[95,12,79,10,"isMounted"],[95,21,79,19],[95,22,79,20,"current"],[95,29,79,27],[95,31,79,29,"setT"],[95,35,79,33],[95,36,79,34,"getNewT"],[95,43,79,41],[95,44,79,42],[96,6,80,4],[96,7,80,5],[97,6,81,4],[97,10,81,8,"bindI18n"],[97,18,81,16],[97,20,81,18,"i18n"],[97,24,81,22],[97,26,81,24,"on"],[97,28,81,26],[97,29,81,27,"bindI18n"],[97,37,81,35],[97,39,81,37,"boundReset"],[97,49,81,47],[97,50,81,48],[98,6,82,4],[98,10,82,8,"bindI18nStore"],[98,23,82,21],[98,25,82,23,"i18n"],[98,29,82,27],[98,31,82,29,"store"],[98,36,82,34],[98,37,82,35,"on"],[98,39,82,37],[98,40,82,38,"bindI18nStore"],[98,53,82,51],[98,55,82,53,"boundReset"],[98,65,82,63],[98,66,82,64],[99,6,83,4],[99,13,83,11],[99,19,83,17],[100,8,84,6,"isMounted"],[100,17,84,15],[100,18,84,16,"current"],[100,25,84,23],[100,28,84,26],[100,33,84,31],[101,8,85,6],[101,12,85,10,"i18n"],[101,16,85,14],[101,20,85,18,"bindI18n"],[101,28,85,26],[101,30,85,28,"bindI18n"],[101,38,85,36],[101,40,85,38,"split"],[101,45,85,43],[101,46,85,44],[101,49,85,47],[101,50,85,48],[101,51,85,49,"forEach"],[101,58,85,56],[101,59,85,57,"e"],[101,60,85,58],[101,64,85,62,"i18n"],[101,68,85,66],[101,69,85,67,"off"],[101,72,85,70],[101,73,85,71,"e"],[101,74,85,72],[101,76,85,74,"boundReset"],[101,86,85,84],[101,87,85,85],[101,88,85,86],[102,8,86,6],[102,12,86,10,"bindI18nStore"],[102,25,86,23],[102,29,86,27,"i18n"],[102,33,86,31],[102,35,86,33,"bindI18nStore"],[102,48,86,46],[102,49,86,47,"split"],[102,54,86,52],[102,55,86,53],[102,58,86,56],[102,59,86,57],[102,60,86,58,"forEach"],[102,67,86,65],[102,68,86,66,"e"],[102,69,86,67],[102,73,86,71,"i18n"],[102,77,86,75],[102,78,86,76,"store"],[102,83,86,81],[102,84,86,82,"off"],[102,87,86,85],[102,88,86,86,"e"],[102,89,86,87],[102,91,86,89,"boundReset"],[102,101,86,99],[102,102,86,100],[102,103,86,101],[103,6,87,4],[103,7,87,5],[104,4,88,2],[104,5,88,3],[104,7,88,5],[104,8,88,6,"i18n"],[104,12,88,10],[104,14,88,12,"joinedNS"],[104,22,88,20],[104,23,88,21],[104,24,88,22],[105,4,89,2],[105,8,89,2,"useEffect"],[105,14,89,11],[105,15,89,11,"useEffect"],[105,24,89,11],[105,26,89,12],[105,32,89,18],[106,6,90,4],[106,10,90,8,"isMounted"],[106,19,90,17],[106,20,90,18,"current"],[106,27,90,25],[106,31,90,29,"ready"],[106,36,90,34],[106,38,90,36],[107,8,91,6,"setT"],[107,12,91,10],[107,13,91,11,"getT"],[107,17,91,15],[107,18,91,16],[108,6,92,4],[109,4,93,2],[109,5,93,3],[109,7,93,5],[109,8,93,6,"i18n"],[109,12,93,10],[109,14,93,12,"keyPrefix"],[109,23,93,21],[109,25,93,23,"ready"],[109,30,93,28],[109,31,93,29],[109,32,93,30],[110,4,94,2],[110,8,94,8,"ret"],[110,11,94,11],[110,14,94,14],[110,15,94,15,"t"],[110,16,94,16],[110,18,94,18,"i18n"],[110,22,94,22],[110,24,94,24,"ready"],[110,29,94,29],[110,30,94,30],[111,4,95,2,"ret"],[111,7,95,5],[111,8,95,6,"t"],[111,9,95,7],[111,12,95,10,"t"],[111,13,95,11],[112,4,96,2,"ret"],[112,7,96,5],[112,8,96,6,"i18n"],[112,12,96,10],[112,15,96,13,"i18n"],[112,19,96,17],[113,4,97,2,"ret"],[113,7,97,5],[113,8,97,6,"ready"],[113,13,97,11],[113,16,97,14,"ready"],[113,21,97,19],[114,4,98,2],[114,8,98,6,"ready"],[114,13,98,11],[114,15,98,13],[114,22,98,20,"ret"],[114,25,98,23],[115,4,99,2],[115,8,99,6],[115,9,99,7,"ready"],[115,14,99,12],[115,18,99,16],[115,19,99,17,"useSuspense"],[115,30,99,28],[115,32,99,30],[115,39,99,37,"ret"],[115,42,99,40],[116,4,100,2],[116,10,100,8],[116,14,100,12,"Promise"],[116,21,100,19],[116,22,100,20,"resolve"],[116,29,100,27],[116,33,100,31],[117,6,101,4],[117,10,101,8,"props"],[117,15,101,13],[117,16,101,14,"lng"],[117,19,101,17],[117,21,101,19],[118,8,102,6],[118,12,102,6,"loadLanguages"],[118,20,102,19],[118,21,102,19,"loadLanguages"],[118,34,102,19],[118,36,102,20,"i18n"],[118,40,102,24],[118,42,102,26,"props"],[118,47,102,31],[118,48,102,32,"lng"],[118,51,102,35],[118,53,102,37,"namespaces"],[118,63,102,47],[118,65,102,49],[118,71,102,55,"resolve"],[118,78,102,62],[118,79,102,63],[118,80,102,64],[118,81,102,65],[119,6,103,4],[119,7,103,5],[119,13,103,11],[120,8,104,6],[120,12,104,6,"loadNamespaces"],[120,20,104,20],[120,21,104,20,"loadNamespaces"],[120,35,104,20],[120,37,104,21,"i18n"],[120,41,104,25],[120,43,104,27,"namespaces"],[120,53,104,37],[120,55,104,39],[120,61,104,45,"resolve"],[120,68,104,52],[120,69,104,53],[120,70,104,54],[120,71,104,55],[121,6,105,4],[122,4,106,2],[122,5,106,3],[122,6,106,4],[123,2,107,0],[123,3,107,1],[124,0,107,2],[124,3]],"functionMap":{"names":["<global>","usePrevious","useEffect$argument_0","alwaysNewT","useMemoizedT","useTranslation","notReadyT","namespaces.every$argument_0","getT","getNewT","loadLanguages$argument_3","loadNamespaces$argument_2","boundReset","<anonymous>","bindI18n.split.forEach$argument_0","bindI18nStore.split.forEach$argument_0","Promise$argument_0"],"mappings":"AAA;oBCG;YCE;GDE;CDE;mBGC,wFH;qBIC,+IJ;8BKC;sBCY;KDI;sFEoB,6CF;eGE,cH;kBIC,oHJ;YHM;mDQQ;SRE;yCSE;STE;uBUM;KVE;WWG;yDCE,4BD;kEEC,kCF;KXC;GGC;YHC;GGI;oBWO;iDNE,eM;uCLE,eK;GXE;CLC"},"hasCjsExports":false},"type":"js/module"}]}