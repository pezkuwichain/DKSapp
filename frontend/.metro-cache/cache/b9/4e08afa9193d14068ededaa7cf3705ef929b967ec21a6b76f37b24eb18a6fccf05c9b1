{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"tokenize\", {\n    enumerable: true,\n    get: function () {\n      return tokenize;\n    }\n  });\n  var tokenize = translation => {\n    var tokens = [];\n    var position = 0;\n    var currentText = '';\n    var flushText = () => {\n      if (currentText) {\n        tokens.push({\n          type: 'Text',\n          value: currentText,\n          position: position - currentText.length\n        });\n        currentText = '';\n      }\n    };\n    while (position < translation.length) {\n      var char = translation[position];\n      if (char === '<') {\n        var tagMatch = translation.slice(position).match(/^<(\\d+)>/);\n        if (tagMatch) {\n          flushText();\n          tokens.push({\n            type: 'TagOpen',\n            value: tagMatch[0],\n            position,\n            tagNumber: parseInt(tagMatch[1], 10)\n          });\n          position += tagMatch[0].length;\n        } else {\n          var closeTagMatch = translation.slice(position).match(/^<\\/(\\d+)>/);\n          if (closeTagMatch) {\n            flushText();\n            tokens.push({\n              type: 'TagClose',\n              value: closeTagMatch[0],\n              position,\n              tagNumber: parseInt(closeTagMatch[1], 10)\n            });\n            position += closeTagMatch[0].length;\n          } else {\n            currentText += char;\n            position += 1;\n          }\n        }\n      } else {\n        currentText += char;\n        position += 1;\n      }\n    }\n    flushText();\n    return tokens;\n  };\n});","lineCount":64,"map":[[7,2,1,0,"Object"],[7,8,1,0],[7,9,1,0,"defineProperty"],[7,23,1,0],[7,24,1,0,"exports"],[7,31,1,0],[8,4,1,0,"enumerable"],[8,14,1,0],[9,4,1,0,"get"],[9,7,1,0],[9,18,1,0,"get"],[9,19,1,0],[10,6,1,0],[10,13,1,0,"tokenize"],[10,21,1,0],[11,4,1,0],[12,2,1,0],[13,2,1,7],[13,6,1,13,"tokenize"],[13,14,1,21],[13,17,1,24,"translation"],[13,28,1,35],[13,32,1,39],[14,4,2,2],[14,8,2,8,"tokens"],[14,14,2,14],[14,17,2,17],[14,19,2,19],[15,4,3,2],[15,8,3,6,"position"],[15,16,3,14],[15,19,3,17],[15,20,3,18],[16,4,4,2],[16,8,4,6,"currentText"],[16,19,4,17],[16,22,4,20],[16,24,4,22],[17,4,5,2],[17,8,5,8,"flushText"],[17,17,5,17],[17,20,5,20,"flushText"],[17,21,5,20],[17,26,5,26],[18,6,6,4],[18,10,6,8,"currentText"],[18,21,6,19],[18,23,6,21],[19,8,7,6,"tokens"],[19,14,7,12],[19,15,7,13,"push"],[19,19,7,17],[19,20,7,18],[20,10,8,8,"type"],[20,14,8,12],[20,16,8,14],[20,22,8,20],[21,10,9,8,"value"],[21,15,9,13],[21,17,9,15,"currentText"],[21,28,9,26],[22,10,10,8,"position"],[22,18,10,16],[22,20,10,18,"position"],[22,28,10,26],[22,31,10,29,"currentText"],[22,42,10,40],[22,43,10,41,"length"],[23,8,11,6],[23,9,11,7],[23,10,11,8],[24,8,12,6,"currentText"],[24,19,12,17],[24,22,12,20],[24,24,12,22],[25,6,13,4],[26,4,14,2],[26,5,14,3],[27,4,15,2],[27,11,15,9,"position"],[27,19,15,17],[27,22,15,20,"translation"],[27,33,15,31],[27,34,15,32,"length"],[27,40,15,38],[27,42,15,40],[28,6,16,4],[28,10,16,10,"char"],[28,14,16,14],[28,17,16,17,"translation"],[28,28,16,28],[28,29,16,29,"position"],[28,37,16,37],[28,38,16,38],[29,6,17,4],[29,10,17,8,"char"],[29,14,17,12],[29,19,17,17],[29,22,17,20],[29,24,17,22],[30,8,18,6],[30,12,18,12,"tagMatch"],[30,20,18,20],[30,23,18,23,"translation"],[30,34,18,34],[30,35,18,35,"slice"],[30,40,18,40],[30,41,18,41,"position"],[30,49,18,49],[30,50,18,50],[30,51,18,51,"match"],[30,56,18,56],[30,57,18,57],[30,67,18,67],[30,68,18,68],[31,8,19,6],[31,12,19,10,"tagMatch"],[31,20,19,18],[31,22,19,20],[32,10,20,8,"flushText"],[32,19,20,17],[32,20,20,18],[32,21,20,19],[33,10,21,8,"tokens"],[33,16,21,14],[33,17,21,15,"push"],[33,21,21,19],[33,22,21,20],[34,12,22,10,"type"],[34,16,22,14],[34,18,22,16],[34,27,22,25],[35,12,23,10,"value"],[35,17,23,15],[35,19,23,17,"tagMatch"],[35,27,23,25],[35,28,23,26],[35,29,23,27],[35,30,23,28],[36,12,24,10,"position"],[36,20,24,18],[37,12,25,10,"tagNumber"],[37,21,25,19],[37,23,25,21,"parseInt"],[37,31,25,29],[37,32,25,30,"tagMatch"],[37,40,25,38],[37,41,25,39],[37,42,25,40],[37,43,25,41],[37,45,25,43],[37,47,25,45],[38,10,26,8],[38,11,26,9],[38,12,26,10],[39,10,27,8,"position"],[39,18,27,16],[39,22,27,20,"tagMatch"],[39,30,27,28],[39,31,27,29],[39,32,27,30],[39,33,27,31],[39,34,27,32,"length"],[39,40,27,38],[40,8,28,6],[40,9,28,7],[40,15,28,13],[41,10,29,8],[41,14,29,14,"closeTagMatch"],[41,27,29,27],[41,30,29,30,"translation"],[41,41,29,41],[41,42,29,42,"slice"],[41,47,29,47],[41,48,29,48,"position"],[41,56,29,56],[41,57,29,57],[41,58,29,58,"match"],[41,63,29,63],[41,64,29,64],[41,76,29,76],[41,77,29,77],[42,10,30,8],[42,14,30,12,"closeTagMatch"],[42,27,30,25],[42,29,30,27],[43,12,31,10,"flushText"],[43,21,31,19],[43,22,31,20],[43,23,31,21],[44,12,32,10,"tokens"],[44,18,32,16],[44,19,32,17,"push"],[44,23,32,21],[44,24,32,22],[45,14,33,12,"type"],[45,18,33,16],[45,20,33,18],[45,30,33,28],[46,14,34,12,"value"],[46,19,34,17],[46,21,34,19,"closeTagMatch"],[46,34,34,32],[46,35,34,33],[46,36,34,34],[46,37,34,35],[47,14,35,12,"position"],[47,22,35,20],[48,14,36,12,"tagNumber"],[48,23,36,21],[48,25,36,23,"parseInt"],[48,33,36,31],[48,34,36,32,"closeTagMatch"],[48,47,36,45],[48,48,36,46],[48,49,36,47],[48,50,36,48],[48,52,36,50],[48,54,36,52],[49,12,37,10],[49,13,37,11],[49,14,37,12],[50,12,38,10,"position"],[50,20,38,18],[50,24,38,22,"closeTagMatch"],[50,37,38,35],[50,38,38,36],[50,39,38,37],[50,40,38,38],[50,41,38,39,"length"],[50,47,38,45],[51,10,39,8],[51,11,39,9],[51,17,39,15],[52,12,40,10,"currentText"],[52,23,40,21],[52,27,40,25,"char"],[52,31,40,29],[53,12,41,10,"position"],[53,20,41,18],[53,24,41,22],[53,25,41,23],[54,10,42,8],[55,8,43,6],[56,6,44,4],[56,7,44,5],[56,13,44,11],[57,8,45,6,"currentText"],[57,19,45,17],[57,23,45,21,"char"],[57,27,45,25],[58,8,46,6,"position"],[58,16,46,14],[58,20,46,18],[58,21,46,19],[59,6,47,4],[60,4,48,2],[61,4,49,2,"flushText"],[61,13,49,11],[61,14,49,12],[61,15,49,13],[62,4,50,2],[62,11,50,9,"tokens"],[62,17,50,15],[63,2,51,0],[63,3,51,1],[64,0,51,2],[64,3]],"functionMap":{"names":["<global>","tokenize","flushText"],"mappings":"AAA,wBC;oBCI;GDS;CDqC"},"hasCjsExports":false},"type":"js/module"}]}