{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useUserStore\", {\n    enumerable: true,\n    get: function () {\n      return useUserStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  const useUserStore = (0, _zustand.create)(set => ({\n    user: null,\n    trustBreakdown: null,\n    isLoading: false,\n    error: null,\n    networkMode: 'testnet',\n    setUser: user => set({\n      user\n    }),\n    setTrustBreakdown: breakdown => set({\n      trustBreakdown: breakdown\n    }),\n    updateUserStatus: (isCitizen, trustScore) => set(state => ({\n      user: state.user ? {\n        ...state.user,\n        is_citizen: isCitizen,\n        trust_score: trustScore\n      } : null\n    })),\n    setNetworkMode: mode => set({\n      networkMode: mode\n    }),\n    logout: () => set({\n      user: null,\n      trustBreakdown: null\n    })\n  }));\n});","lineCount":41,"map":[[7,2,17,0,"Object"],[7,8,17,0],[7,9,17,0,"defineProperty"],[7,23,17,0],[7,24,17,0,"exports"],[7,31,17,0],[8,4,17,0,"enumerable"],[8,14,17,0],[9,4,17,0,"get"],[9,7,17,0],[9,18,17,0,"get"],[9,19,17,0],[10,6,17,0],[10,13,17,0,"useUserStore"],[10,25,17,0],[11,4,17,0],[12,2,17,0],[13,2,1,0],[13,6,1,0,"_zustand"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,17,7],[14,8,17,13,"useUserStore"],[14,20,17,25],[14,23,17,28],[14,27,17,28,"create"],[14,35,17,34],[14,36,17,34,"create"],[14,42,17,34],[14,44,17,47,"set"],[14,47,17,50],[14,52,17,56],[15,4,18,2,"user"],[15,8,18,6],[15,10,18,8],[15,14,18,12],[16,4,19,2,"trustBreakdown"],[16,18,19,16],[16,20,19,18],[16,24,19,22],[17,4,20,2,"isLoading"],[17,13,20,11],[17,15,20,13],[17,20,20,18],[18,4,21,2,"error"],[18,9,21,7],[18,11,21,9],[18,15,21,13],[19,4,22,2,"networkMode"],[19,15,22,13],[19,17,22,15],[19,26,22,24],[20,4,23,2,"setUser"],[20,11,23,9],[20,13,23,12,"user"],[20,17,23,16],[20,21,23,21,"set"],[20,24,23,24],[20,25,23,25],[21,6,23,27,"user"],[22,4,23,32],[22,5,23,33],[22,6,23,34],[23,4,24,2,"setTrustBreakdown"],[23,21,24,19],[23,23,24,22,"breakdown"],[23,32,24,31],[23,36,24,36,"set"],[23,39,24,39],[23,40,24,40],[24,6,24,42,"trustBreakdown"],[24,20,24,56],[24,22,24,58,"breakdown"],[25,4,24,68],[25,5,24,69],[25,6,24,70],[26,4,25,2,"updateUserStatus"],[26,20,25,18],[26,22,25,20,"updateUserStatus"],[26,23,25,21,"isCitizen"],[26,32,25,30],[26,34,25,32,"trustScore"],[26,44,25,42],[26,49,26,4,"set"],[26,52,26,7],[26,53,26,9,"state"],[26,58,26,14],[26,63,26,20],[27,6,27,6,"user"],[27,10,27,10],[27,12,27,12,"state"],[27,17,27,17],[27,18,27,18,"user"],[27,22,27,22],[27,25,28,10],[28,8,28,12],[28,11,28,15,"state"],[28,16,28,20],[28,17,28,21,"user"],[28,21,28,25],[29,8,28,27,"is_citizen"],[29,18,28,37],[29,20,28,39,"isCitizen"],[29,29,28,48],[30,8,28,50,"trust_score"],[30,19,28,61],[30,21,28,63,"trustScore"],[31,6,28,74],[31,7,28,75],[31,10,29,10],[32,4,30,4],[32,5,30,5],[32,6,30,6],[32,7,30,7],[33,4,31,2,"setNetworkMode"],[33,18,31,16],[33,20,31,19,"mode"],[33,24,31,23],[33,28,31,28,"set"],[33,31,31,31],[33,32,31,32],[34,6,31,34,"networkMode"],[34,17,31,45],[34,19,31,47,"mode"],[35,4,31,52],[35,5,31,53],[35,6,31,54],[36,4,32,2,"logout"],[36,10,32,8],[36,12,32,10,"logout"],[36,13,32,10],[36,18,32,16,"set"],[36,21,32,19],[36,22,32,20],[37,6,32,22,"user"],[37,10,32,26],[37,12,32,28],[37,16,32,32],[38,6,32,34,"trustBreakdown"],[38,20,32,48],[38,22,32,50],[39,4,32,55],[39,5,32,56],[40,2,33,0],[40,3,33,1],[40,4,33,2],[40,5,33,3],[41,0,33,4],[41,3]],"functionMap":{"names":["<global>","create$argument_0","setUser","setTrustBreakdown","updateUserStatus","set$argument_0","setNetworkMode","logout"],"mappings":"AAA;8CCgB;WCM,uBD;qBEC,iDF;oBGC;QCC;MDI,CH;kBKC,oCL;UMC,+CN;EDC"},"hasCjsExports":false},"type":"js/module"}]}