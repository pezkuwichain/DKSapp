{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"i18next","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":42,"index":131}}],"key":"x24IjD33BAFYGRYL03eyJPMYagg=","exportNames":["*"],"imports":1}},{"name":"html-parse-stringify","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":132},"end":{"line":3,"column":40,"index":172}}],"key":"Dz5mG5jCySHyZi3eazCTCPjnQDg=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":173},"end":{"line":4,"column":64,"index":237}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}},{"name":"./defaults.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":238},"end":{"line":5,"column":44,"index":282}}],"key":"XCWKIxVkGmzpUvwhJx9c42EufEI=","exportNames":["*"],"imports":1}},{"name":"./i18nInstance.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":283},"end":{"line":6,"column":44,"index":327}}],"key":"2DjoKlYcMulm3L6r09aRNQJwnCE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"format\"],\n    _excluded2 = [\"children\", \"count\", \"parent\", \"i18nKey\", \"context\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\", \"shouldUnescape\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"nodesToString\", {\n    enumerable: true,\n    get: function () {\n      return nodesToString;\n    }\n  });\n  exports.Trans = Trans;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _i18next = require(_dependencyMap[2], \"i18next\");\n  var _htmlParseStringify = require(_dependencyMap[3], \"html-parse-stringify\");\n  var HTML = _interopDefault(_htmlParseStringify);\n  var _utilsJs = require(_dependencyMap[4], \"./utils.js\");\n  var _defaultsJs = require(_dependencyMap[5], \"./defaults.js\");\n  var _i18nInstanceJs = require(_dependencyMap[6], \"./i18nInstance.js\");\n  const hasChildren = (node, checkLength) => {\n    if (!node) return false;\n    const base = node.props?.children ?? node.children;\n    if (checkLength) return base.length > 0;\n    return !!base;\n  };\n  const getChildren = node => {\n    if (!node) return [];\n    const children = node.props?.children ?? node.children;\n    return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n  };\n  const hasValidReactChildren = children => Array.isArray(children) && children.every(_react.isValidElement);\n  const getAsArray = data => Array.isArray(data) ? data : [data];\n  const mergeProps = (source, target) => {\n    const newTarget = Object.assign({}, target);\n    newTarget.props = Object.assign(source.props, target.props);\n    return newTarget;\n  };\n  const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n    if (!children) return '';\n    let stringNode = '';\n    const childrenArray = getAsArray(children);\n    const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n    childrenArray.forEach((child, childIndex) => {\n      if ((0, _utilsJs.isString)(child)) {\n        stringNode += `${child}`;\n        return;\n      }\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) {\n        const {\n          props,\n          type\n        } = child;\n        const childPropsCount = Object.keys(props).length;\n        const shouldKeepChild = keepArray.indexOf(type) > -1;\n        const childChildren = props.children;\n        if (!childChildren && shouldKeepChild && !childPropsCount) {\n          stringNode += `<${type}/>`;\n          return;\n        }\n        if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n          stringNode += `<${childIndex}></${childIndex}>`;\n          return;\n        }\n        if (shouldKeepChild && childPropsCount === 1 && (0, _utilsJs.isString)(childChildren)) {\n          stringNode += `<${type}>${childChildren}</${type}>`;\n          return;\n        }\n        const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n        return;\n      }\n      if (child === null) {\n        (0, _utilsJs.warn)(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n          i18nKey\n        });\n        return;\n      }\n      if ((0, _utilsJs.isObject)(child)) {\n        const {\n            format\n          } = child,\n          clone = (0, _objectWithoutPropertiesLoose.default)(child, _excluded);\n        const keys = Object.keys(clone);\n        if (keys.length === 1) {\n          const value = format ? `${keys[0]}, ${format}` : keys[0];\n          stringNode += `{{${value}}}`;\n          return;\n        }\n        (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n          i18nKey,\n          child\n        });\n        return;\n      }\n      (0, _utilsJs.warn)(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n        i18nKey,\n        child\n      });\n    });\n    return stringNode;\n  };\n  const renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n    if (targetString === '') return [];\n    const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n    const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n    if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n    const data = knownComponentsMap ?? {};\n    const getData = childs => {\n      const childrenArray = getAsArray(childs);\n      childrenArray.forEach(child => {\n        if ((0, _utilsJs.isString)(child)) return;\n        if (hasChildren(child)) getData(getChildren(child));else if ((0, _utilsJs.isObject)(child) && ! /*#__PURE__*/(0, _react.isValidElement)(child)) Object.assign(data, child);\n      });\n    };\n    getData(children);\n    const ast = HTML.default.parse(`<0>${targetString}</0>`);\n    const opts = Object.assign({}, data, combinedTOpts);\n    const renderInner = (child, node, rootReactNode) => {\n      const childs = getChildren(child);\n      const mappedChildren = mapAST(childs, node.children, rootReactNode);\n      return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n    };\n    const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n      if (child.dummy) {\n        child.children = inner;\n        mem.push(/*#__PURE__*/(0, _react.cloneElement)(child, {\n          key: i\n        }, isVoid ? undefined : inner));\n      } else {\n        mem.push(..._react.Children.map([child], c => {\n          const props = Object.assign({}, c.props);\n          delete props.i18nIsDynamicList;\n          return /*#__PURE__*/(0, _react.createElement)(c.type, Object.assign({}, props, {\n            key: i,\n            ref: c.props.ref ?? c.ref\n          }), isVoid ? null : inner);\n        }));\n      }\n    };\n    const mapAST = (reactNode, astNode, rootReactNode) => {\n      const reactNodes = getAsArray(reactNode);\n      const astNodes = getAsArray(astNode);\n      return astNodes.reduce((mem, node, i) => {\n        const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n        if (node.type === 'tag') {\n          let tmp = reactNodes[parseInt(node.name, 10)];\n          if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n          if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n          if (!tmp) tmp = {};\n          const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n            props: node.attrs\n          }, tmp) : tmp;\n          const isElement = /*#__PURE__*/(0, _react.isValidElement)(child);\n          const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n          const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0, _utilsJs.isObject)(child) && child.dummy && !isElement;\n          const isKnownComponent = (0, _utilsJs.isObject)(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n          if ((0, _utilsJs.isString)(child)) {\n            const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n            mem.push(value);\n          } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (Number.isNaN(parseFloat(node.name))) {\n            if (isKnownComponent) {\n              const inner = renderInner(child, node, rootReactNode);\n              pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n            } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n              if (node.voidElement) {\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }));\n              } else {\n                const inner = mapAST(reactNodes, node.children, rootReactNode);\n                mem.push(/*#__PURE__*/(0, _react.createElement)(node.name, {\n                  key: `${node.name}-${i}`\n                }, inner));\n              }\n            } else if (node.voidElement) {\n              mem.push(`<${node.name} />`);\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(`<${node.name}>${inner}</${node.name}>`);\n            }\n          } else if ((0, _utilsJs.isObject)(child) && !isElement) {\n            const content = node.children[0] ? translationContent : null;\n            if (content) mem.push(content);\n          } else {\n            pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n          }\n        } else if (node.type === 'text') {\n          const wrapTextNodes = i18nOptions.transWrapTextNodes;\n          const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n          if (wrapTextNodes) {\n            mem.push(/*#__PURE__*/(0, _react.createElement)(wrapTextNodes, {\n              key: `${node.name}-${i}`\n            }, content));\n          } else {\n            mem.push(content);\n          }\n        }\n        return mem;\n      }, []);\n    };\n    const result = mapAST([{\n      dummy: true,\n      children: children || []\n    }], ast, getAsArray(children || []));\n    return getChildren(result[0]);\n  };\n  const fixComponentProps = (component, index, translation) => {\n    const componentKey = component.key || index;\n    const comp = /*#__PURE__*/(0, _react.cloneElement)(component, {\n      key: componentKey\n    });\n    if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n      return comp;\n    }\n    function Componentized() {\n      return /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, comp);\n    }\n    return /*#__PURE__*/(0, _react.createElement)(Componentized, {\n      key: componentKey\n    });\n  };\n  const generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\n  const generateObjectComponents = (components, translation) => {\n    const componentMap = {};\n    Object.keys(components).forEach(c => {\n      Object.assign(componentMap, {\n        [c]: fixComponentProps(components[c], c, translation)\n      });\n    });\n    return componentMap;\n  };\n  const generateComponents = (components, translation, i18n, i18nKey) => {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      return generateArrayComponents(components, translation);\n    }\n    if ((0, _utilsJs.isObject)(components)) {\n      return generateObjectComponents(components, translation);\n    }\n    (0, _utilsJs.warnOnce)(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n      i18nKey\n    });\n    return null;\n  };\n  const isComponentsMap = object => {\n    if (!(0, _utilsJs.isObject)(object)) return false;\n    if (Array.isArray(object)) return false;\n    return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n  };\n  function Trans(_ref) {\n    let {\n        children,\n        count,\n        parent,\n        i18nKey,\n        context,\n        tOptions = {},\n        values,\n        defaults,\n        components,\n        ns,\n        i18n: i18nFromProps,\n        t: tFromProps,\n        shouldUnescape\n      } = _ref,\n      additionalProps = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded2);\n    const i18n = i18nFromProps || (0, _i18nInstanceJs.getI18n)();\n    if (!i18n) {\n      (0, _utilsJs.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n        i18nKey\n      });\n      return children;\n    }\n    const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n    const reactI18nextOptions = Object.assign({}, (0, _defaultsJs.getDefaults)(), i18n.options?.react);\n    let namespaces = ns || t.ns || i18n.options?.defaultNS;\n    namespaces = (0, _utilsJs.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n    const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n    const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || (typeof i18nKey === 'function' ? (0, _i18next.keyFromSelector)(i18nKey) : i18nKey);\n    const {\n      hashTransKey\n    } = reactI18nextOptions;\n    const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n    if (i18n.options?.interpolation?.defaultVariables) {\n      values = values && Object.keys(values).length > 0 ? Object.assign({}, values, i18n.options.interpolation.defaultVariables) : Object.assign({}, i18n.options.interpolation.defaultVariables);\n    }\n    const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n      interpolation: Object.assign({}, tOptions.interpolation, {\n        prefix: '#$?',\n        suffix: '?$#'\n      })\n    };\n    const combinedTOpts = Object.assign({}, tOptions, {\n      context: context || tOptions.context,\n      count\n    }, values, interpolationOverride, {\n      defaultValue,\n      ns: namespaces\n    });\n    const translation = key ? t(key, combinedTOpts) : defaultValue;\n    const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n    let indexedChildren = generatedComponents || children;\n    let componentsMap = null;\n    if (isComponentsMap(generatedComponents)) {\n      componentsMap = generatedComponents;\n      indexedChildren = children;\n    }\n    const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n    const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n    return useAsParent ? /*#__PURE__*/(0, _react.createElement)(useAsParent, additionalProps, content) : content;\n  }\n});","lineCount":328,"map":[[14,2,27,0,"Object"],[14,8,27,0],[14,9,27,0,"defineProperty"],[14,23,27,0],[14,24,27,0,"exports"],[14,31,27,0],[15,4,27,0,"enumerable"],[15,14,27,0],[16,4,27,0,"get"],[16,7,27,0],[16,18,27,0,"get"],[16,19,27,0],[17,6,27,0],[17,13,27,0,"nodesToString"],[17,26,27,0],[18,4,27,0],[19,2,27,0],[20,2,251,0,"exports"],[20,9,251,0],[20,10,251,0,"Trans"],[20,15,251,0],[20,18,251,0,"Trans"],[20,23,251,0],[21,2,322,1],[21,6,322,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[21,54,322,1],[21,57,322,1,"require"],[21,64,322,1],[21,65,322,1,"_dependencyMap"],[21,79,322,1],[22,2,322,1],[22,6,322,1,"_objectWithoutPropertiesLoose"],[22,35,322,1],[22,38,322,1,"_interopDefault"],[22,53,322,1],[22,54,322,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[22,102,322,1],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,2,0],[24,6,2,0,"_i18next"],[24,14,2,0],[24,17,2,0,"require"],[24,24,2,0],[24,25,2,0,"_dependencyMap"],[24,39,2,0],[25,2,3,0],[25,6,3,0,"_htmlParseStringify"],[25,25,3,0],[25,28,3,0,"require"],[25,35,3,0],[25,36,3,0,"_dependencyMap"],[25,50,3,0],[26,2,3,0],[26,6,3,0,"HTML"],[26,10,3,0],[26,13,3,0,"_interopDefault"],[26,28,3,0],[26,29,3,0,"_htmlParseStringify"],[26,48,3,0],[27,2,4,0],[27,6,4,0,"_utilsJs"],[27,14,4,0],[27,17,4,0,"require"],[27,24,4,0],[27,25,4,0,"_dependencyMap"],[27,39,4,0],[28,2,5,0],[28,6,5,0,"_defaultsJs"],[28,17,5,0],[28,20,5,0,"require"],[28,27,5,0],[28,28,5,0,"_dependencyMap"],[28,42,5,0],[29,2,6,0],[29,6,6,0,"_i18nInstanceJs"],[29,21,6,0],[29,24,6,0,"require"],[29,31,6,0],[29,32,6,0,"_dependencyMap"],[29,46,6,0],[30,2,7,0],[30,8,7,6,"hasChildren"],[30,19,7,17],[30,22,7,20,"hasChildren"],[30,23,7,21,"node"],[30,27,7,25],[30,29,7,27,"checkLength"],[30,40,7,38],[30,45,7,43],[31,4,8,2],[31,8,8,6],[31,9,8,7,"node"],[31,13,8,11],[31,15,8,13],[31,22,8,20],[31,27,8,25],[32,4,9,2],[32,10,9,8,"base"],[32,14,9,12],[32,17,9,15,"node"],[32,21,9,19],[32,22,9,20,"props"],[32,27,9,25],[32,29,9,27,"children"],[32,37,9,35],[32,41,9,39,"node"],[32,45,9,43],[32,46,9,44,"children"],[32,54,9,52],[33,4,10,2],[33,8,10,6,"checkLength"],[33,19,10,17],[33,21,10,19],[33,28,10,26,"base"],[33,32,10,30],[33,33,10,31,"length"],[33,39,10,37],[33,42,10,40],[33,43,10,41],[34,4,11,2],[34,11,11,9],[34,12,11,10],[34,13,11,11,"base"],[34,17,11,15],[35,2,12,0],[35,3,12,1],[36,2,13,0],[36,8,13,6,"getChildren"],[36,19,13,17],[36,22,13,20,"node"],[36,26,13,24],[36,30,13,28],[37,4,14,2],[37,8,14,6],[37,9,14,7,"node"],[37,13,14,11],[37,15,14,13],[37,22,14,20],[37,24,14,22],[38,4,15,2],[38,10,15,8,"children"],[38,18,15,16],[38,21,15,19,"node"],[38,25,15,23],[38,26,15,24,"props"],[38,31,15,29],[38,33,15,31,"children"],[38,41,15,39],[38,45,15,43,"node"],[38,49,15,47],[38,50,15,48,"children"],[38,58,15,56],[39,4,16,2],[39,11,16,9,"node"],[39,15,16,13],[39,16,16,14,"props"],[39,21,16,19],[39,23,16,21,"i18nIsDynamicList"],[39,40,16,38],[39,43,16,41,"getAsArray"],[39,53,16,51],[39,54,16,52,"children"],[39,62,16,60],[39,63,16,61],[39,66,16,64,"children"],[39,74,16,72],[40,2,17,0],[40,3,17,1],[41,2,18,0],[41,8,18,6,"hasValidReactChildren"],[41,29,18,27],[41,32,18,30,"children"],[41,40,18,38],[41,44,18,42,"Array"],[41,49,18,47],[41,50,18,48,"isArray"],[41,57,18,55],[41,58,18,56,"children"],[41,66,18,64],[41,67,18,65],[41,71,18,69,"children"],[41,79,18,77],[41,80,18,78,"every"],[41,85,18,83],[41,86,18,84,"isValidElement"],[41,92,18,98],[41,93,18,98,"isValidElement"],[41,107,18,98],[41,108,18,99],[42,2,19,0],[42,8,19,6,"getAsArray"],[42,18,19,16],[42,21,19,19,"data"],[42,25,19,23],[42,29,19,27,"Array"],[42,34,19,32],[42,35,19,33,"isArray"],[42,42,19,40],[42,43,19,41,"data"],[42,47,19,45],[42,48,19,46],[42,51,19,49,"data"],[42,55,19,53],[42,58,19,56],[42,59,19,57,"data"],[42,63,19,61],[42,64,19,62],[43,2,20,0],[43,8,20,6,"mergeProps"],[43,18,20,16],[43,21,20,19,"mergeProps"],[43,22,20,20,"source"],[43,28,20,26],[43,30,20,28,"target"],[43,36,20,34],[43,41,20,39],[44,4,21,2],[44,10,21,8,"newTarget"],[44,19,21,17],[44,22,21,17,"Object"],[44,28,21,17],[44,29,21,17,"assign"],[44,35,21,17],[44,40,22,7,"target"],[44,46,22,13],[44,47,23,3],[45,4,24,2,"newTarget"],[45,13,24,11],[45,14,24,12,"props"],[45,19,24,17],[45,22,24,20,"Object"],[45,28,24,26],[45,29,24,27,"assign"],[45,35,24,33],[45,36,24,34,"source"],[45,42,24,40],[45,43,24,41,"props"],[45,48,24,46],[45,50,24,48,"target"],[45,56,24,54],[45,57,24,55,"props"],[45,62,24,60],[45,63,24,61],[46,4,25,2],[46,11,25,9,"newTarget"],[46,20,25,18],[47,2,26,0],[47,3,26,1],[48,2,27,7],[48,8,27,13,"nodesToString"],[48,21,27,26],[48,24,27,29,"nodesToString"],[48,25,27,30,"children"],[48,33,27,38],[48,35,27,40,"i18nOptions"],[48,46,27,51],[48,48,27,53,"i18n"],[48,52,27,57],[48,54,27,59,"i18nKey"],[48,61,27,66],[48,66,27,71],[49,4,28,2],[49,8,28,6],[49,9,28,7,"children"],[49,17,28,15],[49,19,28,17],[49,26,28,24],[49,28,28,26],[50,4,29,2],[50,8,29,6,"stringNode"],[50,18,29,16],[50,21,29,19],[50,23,29,21],[51,4,30,2],[51,10,30,8,"childrenArray"],[51,23,30,21],[51,26,30,24,"getAsArray"],[51,36,30,34],[51,37,30,35,"children"],[51,45,30,43],[51,46,30,44],[52,4,31,2],[52,10,31,8,"keepArray"],[52,19,31,17],[52,22,31,20,"i18nOptions"],[52,33,31,31],[52,35,31,33,"transSupportBasicHtmlNodes"],[52,61,31,59],[52,64,31,62,"i18nOptions"],[52,75,31,73],[52,76,31,74,"transKeepBasicHtmlNodesFor"],[52,102,31,100],[52,106,31,104],[52,108,31,106],[52,111,31,109],[52,113,31,111],[53,4,32,2,"childrenArray"],[53,17,32,15],[53,18,32,16,"forEach"],[53,25,32,23],[53,26,32,24],[53,27,32,25,"child"],[53,32,32,30],[53,34,32,32,"childIndex"],[53,44,32,42],[53,49,32,47],[54,6,33,4],[54,10,33,8],[54,14,33,8,"isString"],[54,22,33,16],[54,23,33,16,"isString"],[54,31,33,16],[54,33,33,17,"child"],[54,38,33,22],[54,39,33,23],[54,41,33,25],[55,8,34,6,"stringNode"],[55,18,34,16],[55,22,34,20],[55,25,34,23,"child"],[55,30,34,28],[55,32,34,30],[56,8,35,6],[57,6,36,4],[58,6,37,4],[58,23,37,8],[58,27,37,8,"isValidElement"],[58,33,37,22],[58,34,37,22,"isValidElement"],[58,48,37,22],[58,50,37,23,"child"],[58,55,37,28],[58,56,37,29],[58,58,37,31],[59,8,38,6],[59,14,38,12],[60,10,39,8,"props"],[60,15,39,13],[61,10,40,8,"type"],[62,8,41,6],[62,9,41,7],[62,12,41,10,"child"],[62,17,41,15],[63,8,42,6],[63,14,42,12,"childPropsCount"],[63,29,42,27],[63,32,42,30,"Object"],[63,38,42,36],[63,39,42,37,"keys"],[63,43,42,41],[63,44,42,42,"props"],[63,49,42,47],[63,50,42,48],[63,51,42,49,"length"],[63,57,42,55],[64,8,43,6],[64,14,43,12,"shouldKeepChild"],[64,29,43,27],[64,32,43,30,"keepArray"],[64,41,43,39],[64,42,43,40,"indexOf"],[64,49,43,47],[64,50,43,48,"type"],[64,54,43,52],[64,55,43,53],[64,58,43,56],[64,59,43,57],[64,60,43,58],[65,8,44,6],[65,14,44,12,"childChildren"],[65,27,44,25],[65,30,44,28,"props"],[65,35,44,33],[65,36,44,34,"children"],[65,44,44,42],[66,8,45,6],[66,12,45,10],[66,13,45,11,"childChildren"],[66,26,45,24],[66,30,45,28,"shouldKeepChild"],[66,45,45,43],[66,49,45,47],[66,50,45,48,"childPropsCount"],[66,65,45,63],[66,67,45,65],[67,10,46,8,"stringNode"],[67,20,46,18],[67,24,46,22],[67,28,46,26,"type"],[67,32,46,30],[67,36,46,34],[68,10,47,8],[69,8,48,6],[70,8,49,6],[70,12,49,10],[70,13,49,11,"childChildren"],[70,26,49,24],[70,31,49,29],[70,32,49,30,"shouldKeepChild"],[70,47,49,45],[70,51,49,49,"childPropsCount"],[70,66,49,64],[70,67,49,65],[70,71,49,69,"props"],[70,76,49,74],[70,77,49,75,"i18nIsDynamicList"],[70,94,49,92],[70,96,49,94],[71,10,50,8,"stringNode"],[71,20,50,18],[71,24,50,22],[71,28,50,26,"childIndex"],[71,38,50,36],[71,44,50,42,"childIndex"],[71,54,50,52],[71,57,50,55],[72,10,51,8],[73,8,52,6],[74,8,53,6],[74,12,53,10,"shouldKeepChild"],[74,27,53,25],[74,31,53,29,"childPropsCount"],[74,46,53,44],[74,51,53,49],[74,52,53,50],[74,56,53,54],[74,60,53,54,"isString"],[74,68,53,62],[74,69,53,62,"isString"],[74,77,53,62],[74,79,53,63,"childChildren"],[74,92,53,76],[74,93,53,77],[74,95,53,79],[75,10,54,8,"stringNode"],[75,20,54,18],[75,24,54,22],[75,28,54,26,"type"],[75,32,54,30],[75,36,54,34,"childChildren"],[75,49,54,47],[75,54,54,52,"type"],[75,58,54,56],[75,61,54,59],[76,10,55,8],[77,8,56,6],[78,8,57,6],[78,14,57,12,"content"],[78,21,57,19],[78,24,57,22,"nodesToString"],[78,37,57,35],[78,38,57,36,"childChildren"],[78,51,57,49],[78,53,57,51,"i18nOptions"],[78,64,57,62],[78,66,57,64,"i18n"],[78,70,57,68],[78,72,57,70,"i18nKey"],[78,79,57,77],[78,80,57,78],[79,8,58,6,"stringNode"],[79,18,58,16],[79,22,58,20],[79,26,58,24,"childIndex"],[79,36,58,34],[79,40,58,38,"content"],[79,47,58,45],[79,52,58,50,"childIndex"],[79,62,58,60],[79,65,58,63],[80,8,59,6],[81,6,60,4],[82,6,61,4],[82,10,61,8,"child"],[82,15,61,13],[82,20,61,18],[82,24,61,22],[82,26,61,24],[83,8,62,6],[83,12,62,6,"warn"],[83,20,62,10],[83,21,62,10,"warn"],[83,25,62,10],[83,27,62,11,"i18n"],[83,31,62,15],[83,33,62,17],[83,51,62,35],[83,53,62,37],[83,86,62,70],[83,88,62,72],[84,10,63,8,"i18nKey"],[85,8,64,6],[85,9,64,7],[85,10,64,8],[86,8,65,6],[87,6,66,4],[88,6,67,4],[88,10,67,8],[88,14,67,8,"isObject"],[88,22,67,16],[88,23,67,16,"isObject"],[88,31,67,16],[88,33,67,17,"child"],[88,38,67,22],[88,39,67,23],[88,41,67,25],[89,8,68,6],[89,14,68,12],[90,12,69,8,"format"],[91,10,71,6],[91,11,71,7],[91,14,71,10,"child"],[91,19,71,15],[92,10,70,11,"clone"],[92,15,70,16],[92,22,70,16,"_objectWithoutPropertiesLoose"],[92,51,70,16],[92,52,70,16,"default"],[92,59,70,16],[92,61,71,10,"child"],[92,66,71,15],[92,68,71,15,"_excluded"],[92,77,71,15],[93,8,72,6],[93,14,72,12,"keys"],[93,18,72,16],[93,21,72,19,"Object"],[93,27,72,25],[93,28,72,26,"keys"],[93,32,72,30],[93,33,72,31,"clone"],[93,38,72,36],[93,39,72,37],[94,8,73,6],[94,12,73,10,"keys"],[94,16,73,14],[94,17,73,15,"length"],[94,23,73,21],[94,28,73,26],[94,29,73,27],[94,31,73,29],[95,10,74,8],[95,16,74,14,"value"],[95,21,74,19],[95,24,74,22,"format"],[95,30,74,28],[95,33,74,31],[95,36,74,34,"keys"],[95,40,74,38],[95,41,74,39],[95,42,74,40],[95,43,74,41],[95,48,74,46,"format"],[95,54,74,52],[95,56,74,54],[95,59,74,57,"keys"],[95,63,74,61],[95,64,74,62],[95,65,74,63],[95,66,74,64],[96,10,75,8,"stringNode"],[96,20,75,18],[96,24,75,22],[96,29,75,27,"value"],[96,34,75,32],[96,38,75,36],[97,10,76,8],[98,8,77,6],[99,8,78,6],[99,12,78,6,"warn"],[99,20,78,10],[99,21,78,10,"warn"],[99,25,78,10],[99,27,78,11,"i18n"],[99,31,78,15],[99,33,78,17],[99,52,78,36],[99,54,78,38],[99,142,78,126],[99,144,78,128],[100,10,79,8,"i18nKey"],[100,17,79,15],[101,10,80,8,"child"],[102,8,81,6],[102,9,81,7],[102,10,81,8],[103,8,82,6],[104,6,83,4],[105,6,84,4],[105,10,84,4,"warn"],[105,18,84,8],[105,19,84,8,"warn"],[105,23,84,8],[105,25,84,9,"i18n"],[105,29,84,13],[105,31,84,15],[105,50,84,34],[105,52,84,36],[105,156,84,140],[105,158,84,142],[106,8,85,6,"i18nKey"],[106,15,85,13],[107,8,86,6,"child"],[108,6,87,4],[108,7,87,5],[108,8,87,6],[109,4,88,2],[109,5,88,3],[109,6,88,4],[110,4,89,2],[110,11,89,9,"stringNode"],[110,21,89,19],[111,2,90,0],[111,3,90,1],[112,2,91,0],[112,8,91,6,"renderNodes"],[112,19,91,17],[112,22,91,20,"renderNodes"],[112,23,91,21,"children"],[112,31,91,29],[112,33,91,31,"knownComponentsMap"],[112,51,91,49],[112,53,91,51,"targetString"],[112,65,91,63],[112,67,91,65,"i18n"],[112,71,91,69],[112,73,91,71,"i18nOptions"],[112,84,91,82],[112,86,91,84,"combinedTOpts"],[112,99,91,97],[112,101,91,99,"shouldUnescape"],[112,115,91,113],[112,120,91,118],[113,4,92,2],[113,8,92,6,"targetString"],[113,20,92,18],[113,25,92,23],[113,27,92,25],[113,29,92,27],[113,36,92,34],[113,38,92,36],[114,4,93,2],[114,10,93,8,"keepArray"],[114,19,93,17],[114,22,93,20,"i18nOptions"],[114,33,93,31],[114,34,93,32,"transKeepBasicHtmlNodesFor"],[114,60,93,58],[114,64,93,62],[114,66,93,64],[115,4,94,2],[115,10,94,8,"emptyChildrenButNeedsHandling"],[115,39,94,37],[115,42,94,40,"targetString"],[115,54,94,52],[115,58,94,56],[115,62,94,60,"RegExp"],[115,68,94,66],[115,69,94,67,"keepArray"],[115,78,94,76],[115,79,94,77,"map"],[115,82,94,80],[115,83,94,81,"keep"],[115,87,94,85],[115,91,94,89],[115,95,94,93,"keep"],[115,99,94,97],[115,101,94,99],[115,102,94,100],[115,103,94,101,"join"],[115,107,94,105],[115,108,94,106],[115,111,94,109],[115,112,94,110],[115,113,94,111],[115,114,94,112,"test"],[115,118,94,116],[115,119,94,117,"targetString"],[115,131,94,129],[115,132,94,130],[116,4,95,2],[116,8,95,6],[116,9,95,7,"children"],[116,17,95,15],[116,21,95,19],[116,22,95,20,"knownComponentsMap"],[116,40,95,38],[116,44,95,42],[116,45,95,43,"emptyChildrenButNeedsHandling"],[116,74,95,72],[116,78,95,76],[116,79,95,77,"shouldUnescape"],[116,93,95,91],[116,95,95,93],[116,102,95,100],[116,103,95,101,"targetString"],[116,115,95,113],[116,116,95,114],[117,4,96,2],[117,10,96,8,"data"],[117,14,96,12],[117,17,96,15,"knownComponentsMap"],[117,35,96,33],[117,39,96,37],[117,40,96,38],[117,41,96,39],[118,4,97,2],[118,10,97,8,"getData"],[118,17,97,15],[118,20,97,18,"childs"],[118,26,97,24],[118,30,97,28],[119,6,98,4],[119,12,98,10,"childrenArray"],[119,25,98,23],[119,28,98,26,"getAsArray"],[119,38,98,36],[119,39,98,37,"childs"],[119,45,98,43],[119,46,98,44],[120,6,99,4,"childrenArray"],[120,19,99,17],[120,20,99,18,"forEach"],[120,27,99,25],[120,28,99,26,"child"],[120,33,99,31],[120,37,99,35],[121,8,100,6],[121,12,100,10],[121,16,100,10,"isString"],[121,24,100,18],[121,25,100,18,"isString"],[121,33,100,18],[121,35,100,19,"child"],[121,40,100,24],[121,41,100,25],[121,43,100,27],[122,8,101,6],[122,12,101,10,"hasChildren"],[122,23,101,21],[122,24,101,22,"child"],[122,29,101,27],[122,30,101,28],[122,32,101,30,"getData"],[122,39,101,37],[122,40,101,38,"getChildren"],[122,51,101,49],[122,52,101,50,"child"],[122,57,101,55],[122,58,101,56],[122,59,101,57],[122,60,101,58],[122,65,101,63],[122,69,101,67],[122,73,101,67,"isObject"],[122,81,101,75],[122,82,101,75,"isObject"],[122,90,101,75],[122,92,101,76,"child"],[122,97,101,81],[122,98,101,82],[122,102,101,86],[122,117,101,87],[122,121,101,87,"isValidElement"],[122,127,101,101],[122,128,101,101,"isValidElement"],[122,142,101,101],[122,144,101,102,"child"],[122,149,101,107],[122,150,101,108],[122,152,101,110,"Object"],[122,158,101,116],[122,159,101,117,"assign"],[122,165,101,123],[122,166,101,124,"data"],[122,170,101,128],[122,172,101,130,"child"],[122,177,101,135],[122,178,101,136],[123,6,102,4],[123,7,102,5],[123,8,102,6],[124,4,103,2],[124,5,103,3],[125,4,104,2,"getData"],[125,11,104,9],[125,12,104,10,"children"],[125,20,104,18],[125,21,104,19],[126,4,105,2],[126,10,105,8,"ast"],[126,13,105,11],[126,16,105,14,"HTML"],[126,20,105,18],[126,21,105,18,"default"],[126,28,105,18],[126,29,105,19,"parse"],[126,34,105,24],[126,35,105,25],[126,41,105,31,"targetString"],[126,53,105,43],[126,59,105,49],[126,60,105,50],[127,4,106,2],[127,10,106,8,"opts"],[127,14,106,12],[127,17,106,12,"Object"],[127,23,106,12],[127,24,106,12,"assign"],[127,30,106,12],[127,35,107,7,"data"],[127,39,107,11],[127,41,108,7,"combinedTOpts"],[127,54,108,20],[127,55,109,3],[128,4,110,2],[128,10,110,8,"renderInner"],[128,21,110,19],[128,24,110,22,"renderInner"],[128,25,110,23,"child"],[128,30,110,28],[128,32,110,30,"node"],[128,36,110,34],[128,38,110,36,"rootReactNode"],[128,51,110,49],[128,56,110,54],[129,6,111,4],[129,12,111,10,"childs"],[129,18,111,16],[129,21,111,19,"getChildren"],[129,32,111,30],[129,33,111,31,"child"],[129,38,111,36],[129,39,111,37],[130,6,112,4],[130,12,112,10,"mappedChildren"],[130,26,112,24],[130,29,112,27,"mapAST"],[130,35,112,33],[130,36,112,34,"childs"],[130,42,112,40],[130,44,112,42,"node"],[130,48,112,46],[130,49,112,47,"children"],[130,57,112,55],[130,59,112,57,"rootReactNode"],[130,72,112,70],[130,73,112,71],[131,6,113,4],[131,13,113,11,"hasValidReactChildren"],[131,34,113,32],[131,35,113,33,"childs"],[131,41,113,39],[131,42,113,40],[131,46,113,44,"mappedChildren"],[131,60,113,58],[131,61,113,59,"length"],[131,67,113,65],[131,72,113,70],[131,73,113,71],[131,77,113,75,"child"],[131,82,113,80],[131,83,113,81,"props"],[131,88,113,86],[131,90,113,88,"i18nIsDynamicList"],[131,107,113,105],[131,110,113,108,"childs"],[131,116,113,114],[131,119,113,117,"mappedChildren"],[131,133,113,131],[132,4,114,2],[132,5,114,3],[133,4,115,2],[133,10,115,8,"pushTranslatedJSX"],[133,27,115,25],[133,30,115,28,"pushTranslatedJSX"],[133,31,115,29,"child"],[133,36,115,34],[133,38,115,36,"inner"],[133,43,115,41],[133,45,115,43,"mem"],[133,48,115,46],[133,50,115,48,"i"],[133,51,115,49],[133,53,115,51,"isVoid"],[133,59,115,57],[133,64,115,62],[134,6,116,4],[134,10,116,8,"child"],[134,15,116,13],[134,16,116,14,"dummy"],[134,21,116,19],[134,23,116,21],[135,8,117,6,"child"],[135,13,117,11],[135,14,117,12,"children"],[135,22,117,20],[135,25,117,23,"inner"],[135,30,117,28],[136,8,118,6,"mem"],[136,11,118,9],[136,12,118,10,"push"],[136,16,118,14],[136,30,118,15],[136,34,118,15,"cloneElement"],[136,40,118,27],[136,41,118,27,"cloneElement"],[136,53,118,27],[136,55,118,28,"child"],[136,60,118,33],[136,62,118,35],[137,10,119,8,"key"],[137,13,119,11],[137,15,119,13,"i"],[138,8,120,6],[138,9,120,7],[138,11,120,9,"isVoid"],[138,17,120,15],[138,20,120,18,"undefined"],[138,29,120,27],[138,32,120,30,"inner"],[138,37,120,35],[138,38,120,36],[138,39,120,37],[139,6,121,4],[139,7,121,5],[139,13,121,11],[140,8,122,6,"mem"],[140,11,122,9],[140,12,122,10,"push"],[140,16,122,14],[140,17,122,15],[140,20,122,18,"Children"],[140,26,122,26],[140,27,122,26,"Children"],[140,35,122,26],[140,36,122,27,"map"],[140,39,122,30],[140,40,122,31],[140,41,122,32,"child"],[140,46,122,37],[140,47,122,38],[140,49,122,40,"c"],[140,50,122,41],[140,54,122,45],[141,10,123,8],[141,16,123,14,"props"],[141,21,123,19],[141,24,123,19,"Object"],[141,30,123,19],[141,31,123,19,"assign"],[141,37,123,19],[141,42,124,13,"c"],[141,43,124,14],[141,44,124,15,"props"],[141,49,124,20],[141,50,125,9],[142,10,126,8],[142,17,126,15,"props"],[142,22,126,20],[142,23,126,21,"i18nIsDynamicList"],[142,40,126,38],[143,10,127,8],[143,30,127,15],[143,34,127,15,"createElement"],[143,40,127,28],[143,41,127,28,"createElement"],[143,54,127,28],[143,56,127,29,"c"],[143,57,127,30],[143,58,127,31,"type"],[143,62,127,35],[143,64,127,35,"Object"],[143,70,127,35],[143,71,127,35,"assign"],[143,77,127,35],[143,82,128,13,"props"],[143,87,128,18],[144,12,129,10,"key"],[144,15,129,13],[144,17,129,15,"i"],[144,18,129,16],[145,12,130,10,"ref"],[145,15,130,13],[145,17,130,15,"c"],[145,18,130,16],[145,19,130,17,"props"],[145,24,130,22],[145,25,130,23,"ref"],[145,28,130,26],[145,32,130,30,"c"],[145,33,130,31],[145,34,130,32,"ref"],[146,10,130,35],[146,14,131,11,"isVoid"],[146,20,131,17],[146,23,131,20],[146,27,131,24],[146,30,131,27,"inner"],[146,35,131,32],[146,36,131,33],[147,8,132,6],[147,9,132,7],[147,10,132,8],[147,11,132,9],[148,6,133,4],[149,4,134,2],[149,5,134,3],[150,4,135,2],[150,10,135,8,"mapAST"],[150,16,135,14],[150,19,135,17,"mapAST"],[150,20,135,18,"reactNode"],[150,29,135,27],[150,31,135,29,"astNode"],[150,38,135,36],[150,40,135,38,"rootReactNode"],[150,53,135,51],[150,58,135,56],[151,6,136,4],[151,12,136,10,"reactNodes"],[151,22,136,20],[151,25,136,23,"getAsArray"],[151,35,136,33],[151,36,136,34,"reactNode"],[151,45,136,43],[151,46,136,44],[152,6,137,4],[152,12,137,10,"astNodes"],[152,20,137,18],[152,23,137,21,"getAsArray"],[152,33,137,31],[152,34,137,32,"astNode"],[152,41,137,39],[152,42,137,40],[153,6,138,4],[153,13,138,11,"astNodes"],[153,21,138,19],[153,22,138,20,"reduce"],[153,28,138,26],[153,29,138,27],[153,30,138,28,"mem"],[153,33,138,31],[153,35,138,33,"node"],[153,39,138,37],[153,41,138,39,"i"],[153,42,138,40],[153,47,138,45],[154,8,139,6],[154,14,139,12,"translationContent"],[154,32,139,30],[154,35,139,33,"node"],[154,39,139,37],[154,40,139,38,"children"],[154,48,139,46],[154,51,139,49],[154,52,139,50],[154,53,139,51],[154,55,139,53,"content"],[154,62,139,60],[154,66,139,64,"i18n"],[154,70,139,68],[154,71,139,69,"services"],[154,79,139,77],[154,80,139,78,"interpolator"],[154,92,139,90],[154,93,139,91,"interpolate"],[154,104,139,102],[154,105,139,103,"node"],[154,109,139,107],[154,110,139,108,"children"],[154,118,139,116],[154,119,139,117],[154,120,139,118],[154,121,139,119],[154,122,139,120,"content"],[154,129,139,127],[154,131,139,129,"opts"],[154,135,139,133],[154,137,139,135,"i18n"],[154,141,139,139],[154,142,139,140,"language"],[154,150,139,148],[154,151,139,149],[155,8,140,6],[155,12,140,10,"node"],[155,16,140,14],[155,17,140,15,"type"],[155,21,140,19],[155,26,140,24],[155,31,140,29],[155,33,140,31],[156,10,141,8],[156,14,141,12,"tmp"],[156,17,141,15],[156,20,141,18,"reactNodes"],[156,30,141,28],[156,31,141,29,"parseInt"],[156,39,141,37],[156,40,141,38,"node"],[156,44,141,42],[156,45,141,43,"name"],[156,49,141,47],[156,51,141,49],[156,53,141,51],[156,54,141,52],[156,55,141,53],[157,10,142,8],[157,14,142,12],[157,15,142,13,"tmp"],[157,18,142,16],[157,22,142,20,"knownComponentsMap"],[157,40,142,38],[157,42,142,40,"tmp"],[157,45,142,43],[157,48,142,46,"knownComponentsMap"],[157,66,142,64],[157,67,142,65,"node"],[157,71,142,69],[157,72,142,70,"name"],[157,76,142,74],[157,77,142,75],[158,10,143,8],[158,14,143,12,"rootReactNode"],[158,27,143,25],[158,28,143,26,"length"],[158,34,143,32],[158,39,143,37],[158,40,143,38],[158,44,143,42],[158,45,143,43,"tmp"],[158,48,143,46],[158,50,143,48,"tmp"],[158,53,143,51],[158,56,143,54,"rootReactNode"],[158,69,143,67],[158,70,143,68],[158,71,143,69],[158,72,143,70],[158,73,143,71,"node"],[158,77,143,75],[158,78,143,76,"name"],[158,82,143,80],[158,83,143,81],[159,10,144,8],[159,14,144,12],[159,15,144,13,"tmp"],[159,18,144,16],[159,20,144,18,"tmp"],[159,23,144,21],[159,26,144,24],[159,27,144,25],[159,28,144,26],[160,10,145,8],[160,16,145,14,"child"],[160,21,145,19],[160,24,145,22,"Object"],[160,30,145,28],[160,31,145,29,"keys"],[160,35,145,33],[160,36,145,34,"node"],[160,40,145,38],[160,41,145,39,"attrs"],[160,46,145,44],[160,47,145,45],[160,48,145,46,"length"],[160,54,145,52],[160,59,145,57],[160,60,145,58],[160,63,145,61,"mergeProps"],[160,73,145,71],[160,74,145,72],[161,12,146,10,"props"],[161,17,146,15],[161,19,146,17,"node"],[161,23,146,21],[161,24,146,22,"attrs"],[162,10,147,8],[162,11,147,9],[162,13,147,11,"tmp"],[162,16,147,14],[162,17,147,15],[162,20,147,18,"tmp"],[162,23,147,21],[163,10,148,8],[163,16,148,14,"isElement"],[163,25,148,23],[163,41,148,26],[163,45,148,26,"isValidElement"],[163,51,148,40],[163,52,148,40,"isValidElement"],[163,66,148,40],[163,68,148,41,"child"],[163,73,148,46],[163,74,148,47],[164,10,149,8],[164,16,149,14,"isValidTranslationWithChildren"],[164,46,149,44],[164,49,149,47,"isElement"],[164,58,149,56],[164,62,149,60,"hasChildren"],[164,73,149,71],[164,74,149,72,"node"],[164,78,149,76],[164,80,149,78],[164,84,149,82],[164,85,149,83],[164,89,149,87],[164,90,149,88,"node"],[164,94,149,92],[164,95,149,93,"voidElement"],[164,106,149,104],[165,10,150,8],[165,16,150,14,"isEmptyTransWithHTML"],[165,36,150,34],[165,39,150,37,"emptyChildrenButNeedsHandling"],[165,68,150,66],[165,72,150,70],[165,76,150,70,"isObject"],[165,84,150,78],[165,85,150,78,"isObject"],[165,93,150,78],[165,95,150,79,"child"],[165,100,150,84],[165,101,150,85],[165,105,150,89,"child"],[165,110,150,94],[165,111,150,95,"dummy"],[165,116,150,100],[165,120,150,104],[165,121,150,105,"isElement"],[165,130,150,114],[166,10,151,8],[166,16,151,14,"isKnownComponent"],[166,32,151,30],[166,35,151,33],[166,39,151,33,"isObject"],[166,47,151,41],[166,48,151,41,"isObject"],[166,56,151,41],[166,58,151,42,"knownComponentsMap"],[166,76,151,60],[166,77,151,61],[166,81,151,65,"Object"],[166,87,151,71],[166,88,151,72,"hasOwnProperty"],[166,102,151,86],[166,103,151,87,"call"],[166,107,151,91],[166,108,151,92,"knownComponentsMap"],[166,126,151,110],[166,128,151,112,"node"],[166,132,151,116],[166,133,151,117,"name"],[166,137,151,121],[166,138,151,122],[167,10,152,8],[167,14,152,12],[167,18,152,12,"isString"],[167,26,152,20],[167,27,152,20,"isString"],[167,35,152,20],[167,37,152,21,"child"],[167,42,152,26],[167,43,152,27],[167,45,152,29],[168,12,153,10],[168,18,153,16,"value"],[168,23,153,21],[168,26,153,24,"i18n"],[168,30,153,28],[168,31,153,29,"services"],[168,39,153,37],[168,40,153,38,"interpolator"],[168,52,153,50],[168,53,153,51,"interpolate"],[168,64,153,62],[168,65,153,63,"child"],[168,70,153,68],[168,72,153,70,"opts"],[168,76,153,74],[168,78,153,76,"i18n"],[168,82,153,80],[168,83,153,81,"language"],[168,91,153,89],[168,92,153,90],[169,12,154,10,"mem"],[169,15,154,13],[169,16,154,14,"push"],[169,20,154,18],[169,21,154,19,"value"],[169,26,154,24],[169,27,154,25],[170,10,155,8],[170,11,155,9],[170,17,155,15],[170,21,155,19,"hasChildren"],[170,32,155,30],[170,33,155,31,"child"],[170,38,155,36],[170,39,155,37],[170,43,155,41,"isValidTranslationWithChildren"],[170,73,155,71],[170,75,155,73],[171,12,156,10],[171,18,156,16,"inner"],[171,23,156,21],[171,26,156,24,"renderInner"],[171,37,156,35],[171,38,156,36,"child"],[171,43,156,41],[171,45,156,43,"node"],[171,49,156,47],[171,51,156,49,"rootReactNode"],[171,64,156,62],[171,65,156,63],[172,12,157,10,"pushTranslatedJSX"],[172,29,157,27],[172,30,157,28,"child"],[172,35,157,33],[172,37,157,35,"inner"],[172,42,157,40],[172,44,157,42,"mem"],[172,47,157,45],[172,49,157,47,"i"],[172,50,157,48],[172,51,157,49],[173,10,158,8],[173,11,158,9],[173,17,158,15],[173,21,158,19,"isEmptyTransWithHTML"],[173,41,158,39],[173,43,158,41],[174,12,159,10],[174,18,159,16,"inner"],[174,23,159,21],[174,26,159,24,"mapAST"],[174,32,159,30],[174,33,159,31,"reactNodes"],[174,43,159,41],[174,45,159,43,"node"],[174,49,159,47],[174,50,159,48,"children"],[174,58,159,56],[174,60,159,58,"rootReactNode"],[174,73,159,71],[174,74,159,72],[175,12,160,10,"pushTranslatedJSX"],[175,29,160,27],[175,30,160,28,"child"],[175,35,160,33],[175,37,160,35,"inner"],[175,42,160,40],[175,44,160,42,"mem"],[175,47,160,45],[175,49,160,47,"i"],[175,50,160,48],[175,51,160,49],[176,10,161,8],[176,11,161,9],[176,17,161,15],[176,21,161,19,"Number"],[176,27,161,25],[176,28,161,26,"isNaN"],[176,33,161,31],[176,34,161,32,"parseFloat"],[176,44,161,42],[176,45,161,43,"node"],[176,49,161,47],[176,50,161,48,"name"],[176,54,161,52],[176,55,161,53],[176,56,161,54],[176,58,161,56],[177,12,162,10],[177,16,162,14,"isKnownComponent"],[177,32,162,30],[177,34,162,32],[178,14,163,12],[178,20,163,18,"inner"],[178,25,163,23],[178,28,163,26,"renderInner"],[178,39,163,37],[178,40,163,38,"child"],[178,45,163,43],[178,47,163,45,"node"],[178,51,163,49],[178,53,163,51,"rootReactNode"],[178,66,163,64],[178,67,163,65],[179,14,164,12,"pushTranslatedJSX"],[179,31,164,29],[179,32,164,30,"child"],[179,37,164,35],[179,39,164,37,"inner"],[179,44,164,42],[179,46,164,44,"mem"],[179,49,164,47],[179,51,164,49,"i"],[179,52,164,50],[179,54,164,52,"node"],[179,58,164,56],[179,59,164,57,"voidElement"],[179,70,164,68],[179,71,164,69],[180,12,165,10],[180,13,165,11],[180,19,165,17],[180,23,165,21,"i18nOptions"],[180,34,165,32],[180,35,165,33,"transSupportBasicHtmlNodes"],[180,61,165,59],[180,65,165,63,"keepArray"],[180,74,165,72],[180,75,165,73,"indexOf"],[180,82,165,80],[180,83,165,81,"node"],[180,87,165,85],[180,88,165,86,"name"],[180,92,165,90],[180,93,165,91],[180,96,165,94],[180,97,165,95],[180,98,165,96],[180,100,165,98],[181,14,166,12],[181,18,166,16,"node"],[181,22,166,20],[181,23,166,21,"voidElement"],[181,34,166,32],[181,36,166,34],[182,16,167,14,"mem"],[182,19,167,17],[182,20,167,18,"push"],[182,24,167,22],[182,38,167,23],[182,42,167,23,"createElement"],[182,48,167,36],[182,49,167,36,"createElement"],[182,62,167,36],[182,64,167,37,"node"],[182,68,167,41],[182,69,167,42,"name"],[182,73,167,46],[182,75,167,48],[183,18,168,16,"key"],[183,21,168,19],[183,23,168,21],[183,26,168,24,"node"],[183,30,168,28],[183,31,168,29,"name"],[183,35,168,33],[183,39,168,37,"i"],[183,40,168,38],[184,16,169,14],[184,17,169,15],[184,18,169,16],[184,19,169,17],[185,14,170,12],[185,15,170,13],[185,21,170,19],[186,16,171,14],[186,22,171,20,"inner"],[186,27,171,25],[186,30,171,28,"mapAST"],[186,36,171,34],[186,37,171,35,"reactNodes"],[186,47,171,45],[186,49,171,47,"node"],[186,53,171,51],[186,54,171,52,"children"],[186,62,171,60],[186,64,171,62,"rootReactNode"],[186,77,171,75],[186,78,171,76],[187,16,172,14,"mem"],[187,19,172,17],[187,20,172,18,"push"],[187,24,172,22],[187,38,172,23],[187,42,172,23,"createElement"],[187,48,172,36],[187,49,172,36,"createElement"],[187,62,172,36],[187,64,172,37,"node"],[187,68,172,41],[187,69,172,42,"name"],[187,73,172,46],[187,75,172,48],[188,18,173,16,"key"],[188,21,173,19],[188,23,173,21],[188,26,173,24,"node"],[188,30,173,28],[188,31,173,29,"name"],[188,35,173,33],[188,39,173,37,"i"],[188,40,173,38],[189,16,174,14],[189,17,174,15],[189,19,174,17,"inner"],[189,24,174,22],[189,25,174,23],[189,26,174,24],[190,14,175,12],[191,12,176,10],[191,13,176,11],[191,19,176,17],[191,23,176,21,"node"],[191,27,176,25],[191,28,176,26,"voidElement"],[191,39,176,37],[191,41,176,39],[192,14,177,12,"mem"],[192,17,177,15],[192,18,177,16,"push"],[192,22,177,20],[192,23,177,21],[192,27,177,25,"node"],[192,31,177,29],[192,32,177,30,"name"],[192,36,177,34],[192,41,177,39],[192,42,177,40],[193,12,178,10],[193,13,178,11],[193,19,178,17],[194,14,179,12],[194,20,179,18,"inner"],[194,25,179,23],[194,28,179,26,"mapAST"],[194,34,179,32],[194,35,179,33,"reactNodes"],[194,45,179,43],[194,47,179,45,"node"],[194,51,179,49],[194,52,179,50,"children"],[194,60,179,58],[194,62,179,60,"rootReactNode"],[194,75,179,73],[194,76,179,74],[195,14,180,12,"mem"],[195,17,180,15],[195,18,180,16,"push"],[195,22,180,20],[195,23,180,21],[195,27,180,25,"node"],[195,31,180,29],[195,32,180,30,"name"],[195,36,180,34],[195,40,180,38,"inner"],[195,45,180,43],[195,50,180,48,"node"],[195,54,180,52],[195,55,180,53,"name"],[195,59,180,57],[195,62,180,60],[195,63,180,61],[196,12,181,10],[197,10,182,8],[197,11,182,9],[197,17,182,15],[197,21,182,19],[197,25,182,19,"isObject"],[197,33,182,27],[197,34,182,27,"isObject"],[197,42,182,27],[197,44,182,28,"child"],[197,49,182,33],[197,50,182,34],[197,54,182,38],[197,55,182,39,"isElement"],[197,64,182,48],[197,66,182,50],[198,12,183,10],[198,18,183,16,"content"],[198,25,183,23],[198,28,183,26,"node"],[198,32,183,30],[198,33,183,31,"children"],[198,41,183,39],[198,42,183,40],[198,43,183,41],[198,44,183,42],[198,47,183,45,"translationContent"],[198,65,183,63],[198,68,183,66],[198,72,183,70],[199,12,184,10],[199,16,184,14,"content"],[199,23,184,21],[199,25,184,23,"mem"],[199,28,184,26],[199,29,184,27,"push"],[199,33,184,31],[199,34,184,32,"content"],[199,41,184,39],[199,42,184,40],[200,10,185,8],[200,11,185,9],[200,17,185,15],[201,12,186,10,"pushTranslatedJSX"],[201,29,186,27],[201,30,186,28,"child"],[201,35,186,33],[201,37,186,35,"translationContent"],[201,55,186,53],[201,57,186,55,"mem"],[201,60,186,58],[201,62,186,60,"i"],[201,63,186,61],[201,65,186,63,"node"],[201,69,186,67],[201,70,186,68,"children"],[201,78,186,76],[201,79,186,77,"length"],[201,85,186,83],[201,90,186,88],[201,91,186,89],[201,95,186,93],[201,96,186,94,"translationContent"],[201,114,186,112],[201,115,186,113],[202,10,187,8],[203,8,188,6],[203,9,188,7],[203,15,188,13],[203,19,188,17,"node"],[203,23,188,21],[203,24,188,22,"type"],[203,28,188,26],[203,33,188,31],[203,39,188,37],[203,41,188,39],[204,10,189,8],[204,16,189,14,"wrapTextNodes"],[204,29,189,27],[204,32,189,30,"i18nOptions"],[204,43,189,41],[204,44,189,42,"transWrapTextNodes"],[204,62,189,60],[205,10,190,8],[205,16,190,14,"content"],[205,23,190,21],[205,26,190,24,"shouldUnescape"],[205,40,190,38],[205,43,190,41,"i18nOptions"],[205,54,190,52],[205,55,190,53,"unescape"],[205,63,190,61],[205,64,190,62,"i18n"],[205,68,190,66],[205,69,190,67,"services"],[205,77,190,75],[205,78,190,76,"interpolator"],[205,90,190,88],[205,91,190,89,"interpolate"],[205,102,190,100],[205,103,190,101,"node"],[205,107,190,105],[205,108,190,106,"content"],[205,115,190,113],[205,117,190,115,"opts"],[205,121,190,119],[205,123,190,121,"i18n"],[205,127,190,125],[205,128,190,126,"language"],[205,136,190,134],[205,137,190,135],[205,138,190,136],[205,141,190,139,"i18n"],[205,145,190,143],[205,146,190,144,"services"],[205,154,190,152],[205,155,190,153,"interpolator"],[205,167,190,165],[205,168,190,166,"interpolate"],[205,179,190,177],[205,180,190,178,"node"],[205,184,190,182],[205,185,190,183,"content"],[205,192,190,190],[205,194,190,192,"opts"],[205,198,190,196],[205,200,190,198,"i18n"],[205,204,190,202],[205,205,190,203,"language"],[205,213,190,211],[205,214,190,212],[206,10,191,8],[206,14,191,12,"wrapTextNodes"],[206,27,191,25],[206,29,191,27],[207,12,192,10,"mem"],[207,15,192,13],[207,16,192,14,"push"],[207,20,192,18],[207,34,192,19],[207,38,192,19,"createElement"],[207,44,192,32],[207,45,192,32,"createElement"],[207,58,192,32],[207,60,192,33,"wrapTextNodes"],[207,73,192,46],[207,75,192,48],[208,14,193,12,"key"],[208,17,193,15],[208,19,193,17],[208,22,193,20,"node"],[208,26,193,24],[208,27,193,25,"name"],[208,31,193,29],[208,35,193,33,"i"],[208,36,193,34],[209,12,194,10],[209,13,194,11],[209,15,194,13,"content"],[209,22,194,20],[209,23,194,21],[209,24,194,22],[210,10,195,8],[210,11,195,9],[210,17,195,15],[211,12,196,10,"mem"],[211,15,196,13],[211,16,196,14,"push"],[211,20,196,18],[211,21,196,19,"content"],[211,28,196,26],[211,29,196,27],[212,10,197,8],[213,8,198,6],[214,8,199,6],[214,15,199,13,"mem"],[214,18,199,16],[215,6,200,4],[215,7,200,5],[215,9,200,7],[215,11,200,9],[215,12,200,10],[216,4,201,2],[216,5,201,3],[217,4,202,2],[217,10,202,8,"result"],[217,16,202,14],[217,19,202,17,"mapAST"],[217,25,202,23],[217,26,202,24],[217,27,202,25],[218,6,203,4,"dummy"],[218,11,203,9],[218,13,203,11],[218,17,203,15],[219,6,204,4,"children"],[219,14,204,12],[219,16,204,14,"children"],[219,24,204,22],[219,28,204,26],[220,4,205,2],[220,5,205,3],[220,6,205,4],[220,8,205,6,"ast"],[220,11,205,9],[220,13,205,11,"getAsArray"],[220,23,205,21],[220,24,205,22,"children"],[220,32,205,30],[220,36,205,34],[220,38,205,36],[220,39,205,37],[220,40,205,38],[221,4,206,2],[221,11,206,9,"getChildren"],[221,22,206,20],[221,23,206,21,"result"],[221,29,206,27],[221,30,206,28],[221,31,206,29],[221,32,206,30],[221,33,206,31],[222,2,207,0],[222,3,207,1],[223,2,208,0],[223,8,208,6,"fixComponentProps"],[223,25,208,23],[223,28,208,26,"fixComponentProps"],[223,29,208,27,"component"],[223,38,208,36],[223,40,208,38,"index"],[223,45,208,43],[223,47,208,45,"translation"],[223,58,208,56],[223,63,208,61],[224,4,209,2],[224,10,209,8,"componentKey"],[224,22,209,20],[224,25,209,23,"component"],[224,34,209,32],[224,35,209,33,"key"],[224,38,209,36],[224,42,209,40,"index"],[224,47,209,45],[225,4,210,2],[225,10,210,8,"comp"],[225,14,210,12],[225,30,210,15],[225,34,210,15,"cloneElement"],[225,40,210,27],[225,41,210,27,"cloneElement"],[225,53,210,27],[225,55,210,28,"component"],[225,64,210,37],[225,66,210,39],[226,6,211,4,"key"],[226,9,211,7],[226,11,211,9,"componentKey"],[227,4,212,2],[227,5,212,3],[227,6,212,4],[228,4,213,2],[228,8,213,6],[228,9,213,7,"comp"],[228,13,213,11],[228,14,213,12,"props"],[228,19,213,17],[228,23,213,21],[228,24,213,22,"comp"],[228,28,213,26],[228,29,213,27,"props"],[228,34,213,32],[228,35,213,33,"children"],[228,43,213,41],[228,47,213,45,"translation"],[228,58,213,56],[228,59,213,57,"indexOf"],[228,66,213,64],[228,67,213,65],[228,70,213,68,"index"],[228,75,213,73],[228,79,213,77],[228,80,213,78],[228,83,213,81],[228,84,213,82],[228,88,213,86,"translation"],[228,99,213,97],[228,100,213,98,"indexOf"],[228,107,213,105],[228,108,213,106],[228,111,213,109,"index"],[228,116,213,114],[228,121,213,119],[228,122,213,120],[228,125,213,123],[228,126,213,124],[228,128,213,126],[229,6,214,4],[229,13,214,11,"comp"],[229,17,214,15],[230,4,215,2],[231,4,216,2],[231,13,216,11,"Componentized"],[231,26,216,24,"Componentized"],[231,27,216,24],[231,29,216,27],[232,6,217,4],[232,26,217,11],[232,30,217,11,"createElement"],[232,36,217,24],[232,37,217,24,"createElement"],[232,50,217,24],[232,52,217,25,"Fragment"],[232,58,217,33],[232,59,217,33,"Fragment"],[232,67,217,33],[232,69,217,35],[232,73,217,39],[232,75,217,41,"comp"],[232,79,217,45],[232,80,217,46],[233,4,218,2],[234,4,219,2],[234,24,219,9],[234,28,219,9,"createElement"],[234,34,219,22],[234,35,219,22,"createElement"],[234,48,219,22],[234,50,219,23,"Componentized"],[234,63,219,36],[234,65,219,38],[235,6,220,4,"key"],[235,9,220,7],[235,11,220,9,"componentKey"],[236,4,221,2],[236,5,221,3],[236,6,221,4],[237,2,222,0],[237,3,222,1],[238,2,223,0],[238,8,223,6,"generateArrayComponents"],[238,31,223,29],[238,34,223,32,"generateArrayComponents"],[238,35,223,33,"components"],[238,45,223,43],[238,47,223,45,"translation"],[238,58,223,56],[238,63,223,61,"components"],[238,73,223,71],[238,74,223,72,"map"],[238,77,223,75],[238,78,223,76],[238,79,223,77,"c"],[238,80,223,78],[238,82,223,80,"index"],[238,87,223,85],[238,92,223,90,"fixComponentProps"],[238,109,223,107],[238,110,223,108,"c"],[238,111,223,109],[238,113,223,111,"index"],[238,118,223,116],[238,120,223,118,"translation"],[238,131,223,129],[238,132,223,130],[238,133,223,131],[239,2,224,0],[239,8,224,6,"generateObjectComponents"],[239,32,224,30],[239,35,224,33,"generateObjectComponents"],[239,36,224,34,"components"],[239,46,224,44],[239,48,224,46,"translation"],[239,59,224,57],[239,64,224,62],[240,4,225,2],[240,10,225,8,"componentMap"],[240,22,225,20],[240,25,225,23],[240,26,225,24],[240,27,225,25],[241,4,226,2,"Object"],[241,10,226,8],[241,11,226,9,"keys"],[241,15,226,13],[241,16,226,14,"components"],[241,26,226,24],[241,27,226,25],[241,28,226,26,"forEach"],[241,35,226,33],[241,36,226,34,"c"],[241,37,226,35],[241,41,226,39],[242,6,227,4,"Object"],[242,12,227,10],[242,13,227,11,"assign"],[242,19,227,17],[242,20,227,18,"componentMap"],[242,32,227,30],[242,34,227,32],[243,8,228,6],[243,9,228,7,"c"],[243,10,228,8],[243,13,228,11,"fixComponentProps"],[243,30,228,28],[243,31,228,29,"components"],[243,41,228,39],[243,42,228,40,"c"],[243,43,228,41],[243,44,228,42],[243,46,228,44,"c"],[243,47,228,45],[243,49,228,47,"translation"],[243,60,228,58],[244,6,229,4],[244,7,229,5],[244,8,229,6],[245,4,230,2],[245,5,230,3],[245,6,230,4],[246,4,231,2],[246,11,231,9,"componentMap"],[246,23,231,21],[247,2,232,0],[247,3,232,1],[248,2,233,0],[248,8,233,6,"generateComponents"],[248,26,233,24],[248,29,233,27,"generateComponents"],[248,30,233,28,"components"],[248,40,233,38],[248,42,233,40,"translation"],[248,53,233,51],[248,55,233,53,"i18n"],[248,59,233,57],[248,61,233,59,"i18nKey"],[248,68,233,66],[248,73,233,71],[249,4,234,2],[249,8,234,6],[249,9,234,7,"components"],[249,19,234,17],[249,21,234,19],[249,28,234,26],[249,32,234,30],[250,4,235,2],[250,8,235,6,"Array"],[250,13,235,11],[250,14,235,12,"isArray"],[250,21,235,19],[250,22,235,20,"components"],[250,32,235,30],[250,33,235,31],[250,35,235,33],[251,6,236,4],[251,13,236,11,"generateArrayComponents"],[251,36,236,34],[251,37,236,35,"components"],[251,47,236,45],[251,49,236,47,"translation"],[251,60,236,58],[251,61,236,59],[252,4,237,2],[253,4,238,2],[253,8,238,6],[253,12,238,6,"isObject"],[253,20,238,14],[253,21,238,14,"isObject"],[253,29,238,14],[253,31,238,15,"components"],[253,41,238,25],[253,42,238,26],[253,44,238,28],[254,6,239,4],[254,13,239,11,"generateObjectComponents"],[254,37,239,35],[254,38,239,36,"components"],[254,48,239,46],[254,50,239,48,"translation"],[254,61,239,59],[254,62,239,60],[255,4,240,2],[256,4,241,2],[256,8,241,2,"warnOnce"],[256,16,241,10],[256,17,241,10,"warnOnce"],[256,25,241,10],[256,27,241,11,"i18n"],[256,31,241,15],[256,33,241,17],[256,59,241,43],[256,61,241,45],[256,117,241,101],[256,119,241,103],[257,6,242,4,"i18nKey"],[258,4,243,2],[258,5,243,3],[258,6,243,4],[259,4,244,2],[259,11,244,9],[259,15,244,13],[260,2,245,0],[260,3,245,1],[261,2,246,0],[261,8,246,6,"isComponentsMap"],[261,23,246,21],[261,26,246,24,"object"],[261,32,246,30],[261,36,246,34],[262,4,247,2],[262,8,247,6],[262,9,247,7],[262,13,247,7,"isObject"],[262,21,247,15],[262,22,247,15,"isObject"],[262,30,247,15],[262,32,247,16,"object"],[262,38,247,22],[262,39,247,23],[262,41,247,25],[262,48,247,32],[262,53,247,37],[263,4,248,2],[263,8,248,6,"Array"],[263,13,248,11],[263,14,248,12,"isArray"],[263,21,248,19],[263,22,248,20,"object"],[263,28,248,26],[263,29,248,27],[263,31,248,29],[263,38,248,36],[263,43,248,41],[264,4,249,2],[264,11,249,9,"Object"],[264,17,249,15],[264,18,249,16,"keys"],[264,22,249,20],[264,23,249,21,"object"],[264,29,249,27],[264,30,249,28],[264,31,249,29,"reduce"],[264,37,249,35],[264,38,249,36],[264,39,249,37,"acc"],[264,42,249,40],[264,44,249,42,"key"],[264,47,249,45],[264,52,249,50,"acc"],[264,55,249,53],[264,59,249,57,"Number"],[264,65,249,63],[264,66,249,64,"isNaN"],[264,71,249,69],[264,72,249,70,"Number"],[264,78,249,76],[264,79,249,77,"parseFloat"],[264,89,249,87],[264,90,249,88,"key"],[264,93,249,91],[264,94,249,92],[264,95,249,93],[264,97,249,95],[264,101,249,99],[264,102,249,100],[265,2,250,0],[265,3,250,1],[266,2,251,7],[266,11,251,16,"Trans"],[266,16,251,21,"Trans"],[266,17,251,21,"_ref"],[266,21,251,21],[266,23,266,3],[267,4,266,3],[267,8,251,22],[268,8,252,2,"children"],[268,16,252,10],[269,8,253,2,"count"],[269,13,253,7],[270,8,254,2,"parent"],[270,14,254,8],[271,8,255,2,"i18nKey"],[271,15,255,9],[272,8,256,2,"context"],[272,15,256,9],[273,8,257,2,"tOptions"],[273,16,257,10],[273,19,257,13],[273,20,257,14],[273,21,257,15],[274,8,258,2,"values"],[274,14,258,8],[275,8,259,2,"defaults"],[275,16,259,10],[276,8,260,2,"components"],[276,18,260,12],[277,8,261,2,"ns"],[277,10,261,4],[278,8,262,2,"i18n"],[278,12,262,6],[278,14,262,8,"i18nFromProps"],[278,27,262,21],[279,8,263,2,"t"],[279,9,263,3],[279,11,263,5,"tFromProps"],[279,21,263,15],[280,8,264,2,"shouldUnescape"],[281,6,266,0],[281,7,266,1],[281,10,266,1,"_ref"],[281,14,266,1],[282,6,265,5,"additionalProps"],[282,21,265,20],[282,28,265,20,"_objectWithoutPropertiesLoose"],[282,57,265,20],[282,58,265,20,"default"],[282,65,265,20],[282,67,265,20,"_ref"],[282,71,265,20],[282,73,265,20,"_excluded2"],[282,83,265,20],[283,4,267,2],[283,10,267,8,"i18n"],[283,14,267,12],[283,17,267,15,"i18nFromProps"],[283,30,267,28],[283,34,267,32],[283,38,267,32,"getI18n"],[283,53,267,39],[283,54,267,39,"getI18n"],[283,61,267,39],[283,63,267,40],[283,64,267,41],[284,4,268,2],[284,8,268,6],[284,9,268,7,"i18n"],[284,13,268,11],[284,15,268,13],[285,6,269,4],[285,10,269,4,"warnOnce"],[285,18,269,12],[285,19,269,12,"warnOnce"],[285,27,269,12],[285,29,269,13,"i18n"],[285,33,269,17],[285,35,269,19],[285,56,269,40],[285,58,269,42],[285,131,269,115],[285,133,269,117],[286,8,270,6,"i18nKey"],[287,6,271,4],[287,7,271,5],[287,8,271,6],[288,6,272,4],[288,13,272,11,"children"],[288,21,272,19],[289,4,273,2],[290,4,274,2],[290,10,274,8,"t"],[290,11,274,9],[290,14,274,12,"tFromProps"],[290,24,274,22],[290,28,274,26,"i18n"],[290,32,274,30],[290,33,274,31,"t"],[290,34,274,32],[290,35,274,33,"bind"],[290,39,274,37],[290,40,274,38,"i18n"],[290,44,274,42],[290,45,274,43],[290,50,274,48,"k"],[290,51,274,49],[290,55,274,53,"k"],[290,56,274,54],[290,57,274,55],[291,4,275,2],[291,10,275,8,"reactI18nextOptions"],[291,29,275,27],[291,32,275,27,"Object"],[291,38,275,27],[291,39,275,27,"assign"],[291,45,275,27],[291,50,276,7],[291,54,276,7,"getDefaults"],[291,65,276,18],[291,66,276,18,"getDefaults"],[291,77,276,18],[291,79,276,19],[291,80,276,20],[291,82,277,7,"i18n"],[291,86,277,11],[291,87,277,12,"options"],[291,94,277,19],[291,96,277,21,"react"],[291,101,277,26],[291,102,278,3],[292,4,279,2],[292,8,279,6,"namespaces"],[292,18,279,16],[292,21,279,19,"ns"],[292,23,279,21],[292,27,279,25,"t"],[292,28,279,26],[292,29,279,27,"ns"],[292,31,279,29],[292,35,279,33,"i18n"],[292,39,279,37],[292,40,279,38,"options"],[292,47,279,45],[292,49,279,47,"defaultNS"],[292,58,279,56],[293,4,280,2,"namespaces"],[293,14,280,12],[293,17,280,15],[293,21,280,15,"isString"],[293,29,280,23],[293,30,280,23,"isString"],[293,38,280,23],[293,40,280,24,"namespaces"],[293,50,280,34],[293,51,280,35],[293,54,280,38],[293,55,280,39,"namespaces"],[293,65,280,49],[293,66,280,50],[293,69,280,53,"namespaces"],[293,79,280,63],[293,83,280,67],[293,84,280,68],[293,97,280,81],[293,98,280,82],[294,4,281,2],[294,10,281,8,"nodeAsString"],[294,22,281,20],[294,25,281,23,"nodesToString"],[294,38,281,36],[294,39,281,37,"children"],[294,47,281,45],[294,49,281,47,"reactI18nextOptions"],[294,68,281,66],[294,70,281,68,"i18n"],[294,74,281,72],[294,76,281,74,"i18nKey"],[294,83,281,81],[294,84,281,82],[295,4,282,2],[295,10,282,8,"defaultValue"],[295,22,282,20],[295,25,282,23,"defaults"],[295,33,282,31],[295,37,282,35,"nodeAsString"],[295,49,282,47],[295,53,282,51,"reactI18nextOptions"],[295,72,282,70],[295,73,282,71,"transEmptyNodeValue"],[295,92,282,90],[295,97,282,95],[295,104,282,102,"i18nKey"],[295,111,282,109],[295,116,282,114],[295,126,282,124],[295,129,282,127],[295,133,282,127,"keyFromSelector"],[295,141,282,142],[295,142,282,142,"keyFromSelector"],[295,157,282,142],[295,159,282,143,"i18nKey"],[295,166,282,150],[295,167,282,151],[295,170,282,154,"i18nKey"],[295,177,282,161],[295,178,282,162],[296,4,283,2],[296,10,283,8],[297,6,284,4,"hashTransKey"],[298,4,285,2],[298,5,285,3],[298,8,285,6,"reactI18nextOptions"],[298,27,285,25],[299,4,286,2],[299,10,286,8,"key"],[299,13,286,11],[299,16,286,14,"i18nKey"],[299,23,286,21],[299,28,286,26,"hashTransKey"],[299,40,286,38],[299,43,286,41,"hashTransKey"],[299,55,286,53],[299,56,286,54,"nodeAsString"],[299,68,286,66],[299,72,286,70,"defaultValue"],[299,84,286,82],[299,85,286,83],[299,88,286,86,"nodeAsString"],[299,100,286,98],[299,104,286,102,"defaultValue"],[299,116,286,114],[299,117,286,115],[300,4,287,2],[300,8,287,6,"i18n"],[300,12,287,10],[300,13,287,11,"options"],[300,20,287,18],[300,22,287,20,"interpolation"],[300,35,287,33],[300,37,287,35,"defaultVariables"],[300,53,287,51],[300,55,287,53],[301,6,288,4,"values"],[301,12,288,10],[301,15,288,13,"values"],[301,21,288,19],[301,25,288,23,"Object"],[301,31,288,29],[301,32,288,30,"keys"],[301,36,288,34],[301,37,288,35,"values"],[301,43,288,41],[301,44,288,42],[301,45,288,43,"length"],[301,51,288,49],[301,54,288,52],[301,55,288,53],[301,58,288,53,"Object"],[301,64,288,53],[301,65,288,53,"assign"],[301,71,288,53],[301,76,289,9,"values"],[301,82,289,15],[301,84,290,9,"i18n"],[301,88,290,13],[301,89,290,14,"options"],[301,96,290,21],[301,97,290,22,"interpolation"],[301,110,290,35],[301,111,290,36,"defaultVariables"],[301,127,290,52],[301,131,290,52,"Object"],[301,137,290,52],[301,138,290,52,"assign"],[301,144,290,52],[301,149,292,9,"i18n"],[301,153,292,13],[301,154,292,14,"options"],[301,161,292,21],[301,162,292,22,"interpolation"],[301,175,292,35],[301,176,292,36,"defaultVariables"],[301,192,292,52],[301,193,293,5],[302,4,294,2],[303,4,295,2],[303,10,295,8,"interpolationOverride"],[303,31,295,29],[303,34,295,32,"values"],[303,40,295,38],[303,44,295,42,"count"],[303,49,295,47],[303,54,295,52,"undefined"],[303,63,295,61],[303,67,295,65],[303,68,295,66,"i18n"],[303,72,295,70],[303,73,295,71,"options"],[303,80,295,78],[303,82,295,80,"interpolation"],[303,95,295,93],[303,97,295,95,"alwaysFormat"],[303,109,295,107],[303,113,295,111],[303,114,295,112,"children"],[303,122,295,120],[303,125,295,123,"tOptions"],[303,133,295,131],[303,134,295,132,"interpolation"],[303,147,295,145],[303,150,295,148],[304,6,296,4,"interpolation"],[304,19,296,17],[304,21,296,17,"Object"],[304,27,296,17],[304,28,296,17,"assign"],[304,34,296,17],[304,39,297,9,"tOptions"],[304,47,297,17],[304,48,297,18,"interpolation"],[304,61,297,31],[305,8,298,6,"prefix"],[305,14,298,12],[305,16,298,14],[305,21,298,19],[306,8,299,6,"suffix"],[306,14,299,12],[306,16,299,14],[307,6,299,19],[308,4,301,2],[308,5,301,3],[309,4,302,2],[309,10,302,8,"combinedTOpts"],[309,23,302,21],[309,26,302,21,"Object"],[309,32,302,21],[309,33,302,21,"assign"],[309,39,302,21],[309,44,303,7,"tOptions"],[309,52,303,15],[310,6,304,4,"context"],[310,13,304,11],[310,15,304,13,"context"],[310,22,304,20],[310,26,304,24,"tOptions"],[310,34,304,32],[310,35,304,33,"context"],[310,42,304,40],[311,6,305,4,"count"],[312,4,305,9],[312,7,306,7,"values"],[312,13,306,13],[312,15,307,7,"interpolationOverride"],[312,36,307,28],[313,6,308,4,"defaultValue"],[313,18,308,16],[314,6,309,4,"ns"],[314,8,309,6],[314,10,309,8,"namespaces"],[315,4,309,18],[315,6,310,3],[316,4,311,2],[316,10,311,8,"translation"],[316,21,311,19],[316,24,311,22,"key"],[316,27,311,25],[316,30,311,28,"t"],[316,31,311,29],[316,32,311,30,"key"],[316,35,311,33],[316,37,311,35,"combinedTOpts"],[316,50,311,48],[316,51,311,49],[316,54,311,52,"defaultValue"],[316,66,311,64],[317,4,312,2],[317,10,312,8,"generatedComponents"],[317,29,312,27],[317,32,312,30,"generateComponents"],[317,50,312,48],[317,51,312,49,"components"],[317,61,312,59],[317,63,312,61,"translation"],[317,74,312,72],[317,76,312,74,"i18n"],[317,80,312,78],[317,82,312,80,"i18nKey"],[317,89,312,87],[317,90,312,88],[318,4,313,2],[318,8,313,6,"indexedChildren"],[318,23,313,21],[318,26,313,24,"generatedComponents"],[318,45,313,43],[318,49,313,47,"children"],[318,57,313,55],[319,4,314,2],[319,8,314,6,"componentsMap"],[319,21,314,19],[319,24,314,22],[319,28,314,26],[320,4,315,2],[320,8,315,6,"isComponentsMap"],[320,23,315,21],[320,24,315,22,"generatedComponents"],[320,43,315,41],[320,44,315,42],[320,46,315,44],[321,6,316,4,"componentsMap"],[321,19,316,17],[321,22,316,20,"generatedComponents"],[321,41,316,39],[322,6,317,4,"indexedChildren"],[322,21,317,19],[322,24,317,22,"children"],[322,32,317,30],[323,4,318,2],[324,4,319,2],[324,10,319,8,"content"],[324,17,319,15],[324,20,319,18,"renderNodes"],[324,31,319,29],[324,32,319,30,"indexedChildren"],[324,47,319,45],[324,49,319,47,"componentsMap"],[324,62,319,60],[324,64,319,62,"translation"],[324,75,319,73],[324,77,319,75,"i18n"],[324,81,319,79],[324,83,319,81,"reactI18nextOptions"],[324,102,319,100],[324,104,319,102,"combinedTOpts"],[324,117,319,115],[324,119,319,117,"shouldUnescape"],[324,133,319,131],[324,134,319,132],[325,4,320,2],[325,10,320,8,"useAsParent"],[325,21,320,19],[325,24,320,22,"parent"],[325,30,320,28],[325,34,320,32,"reactI18nextOptions"],[325,53,320,51],[325,54,320,52,"defaultTransParent"],[325,72,320,70],[326,4,321,2],[326,11,321,9,"useAsParent"],[326,22,321,20],[326,38,321,23],[326,42,321,23,"createElement"],[326,48,321,36],[326,49,321,36,"createElement"],[326,62,321,36],[326,64,321,37,"useAsParent"],[326,75,321,48],[326,77,321,50,"additionalProps"],[326,92,321,65],[326,94,321,67,"content"],[326,101,321,74],[326,102,321,75],[326,105,321,78,"content"],[326,112,321,85],[327,2,322,0],[328,0,322,1],[328,3]],"functionMap":{"names":["<global>","hasChildren","getChildren","hasValidReactChildren","getAsArray","mergeProps","nodesToString","childrenArray.forEach$argument_0","renderNodes","keepArray.map$argument_0","getData","renderInner","pushTranslatedJSX","Children.map$argument_1","mapAST","astNodes.reduce$argument_0","fixComponentProps","Componentized","generateArrayComponents","components.map$argument_0","generateObjectComponents","Object.keys.forEach$argument_0","generateComponents","isComponentsMap","Object.keys.reduce$argument_0","Trans","<anonymous>"],"mappings":"AAA;oBCM;CDK;oBEC;CFI;8BGC,qEH;mBIC,2CJ;mBKC;CLM;6BMC;wBCK;GDwD;CNE;oBQC;iFCG,kBD;kBEG;0BHE;KGG;GFC;sBGO;GHI;4BIC;wCCO;ODU;GJE;iBMC;2BCG;KD8D;GNC;CRM;0BgBC;ECQ;GDE;ChBI;gCkBC,4CC,sDD,ClB;iCoBC;kCCE;GDI;CpBE;2BsBC;CtBY;wBuBC;oCCG,yDD;CvBC;OyBC;gDCuB,MD"},"hasCjsExports":false},"type":"js/module"}]}